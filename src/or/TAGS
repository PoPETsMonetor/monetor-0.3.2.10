
addressmap.h,352
#define TOR_ADDRESSMAP_H8,268
#define AMR_FLAG_USE_IPV4_DNS 19,639
#define AMR_FLAG_USE_IPV6_DNS 20,679
#define AMR_FLAG_USE_MAPADDRESS 21,719
#define AMR_FLAG_USE_AUTOMAP 22,759
#define AMR_FLAG_USE_TRACKEXIT 23,799
typedef struct virtual_addr_conf_t 55,2625
  tor_addr_t addr;56,2662
  maskbits_t bits;57,2681
} virtual_addr_conf_t;58,2700

bridges.h,80
#define TOR_BRIDGES_H13,336
typedef struct bridge_info_t bridge_info_t;18,425

channel.h,3822
#define TOR_CHANNEL_H10,187
typedef void (*channel_listener_fn_ptr)channel_listener_fn_ptr18,340
typedef void (*channel_cell_handler_fn_ptr)channel_cell_handler_fn_ptr19,416
typedef void (*channel_var_cell_handler_fn_ptr)channel_var_cell_handler_fn_ptr20,484
typedef struct chan_cell_queue chan_cell_queue_t;24,643
    CHANNEL_USED_NOT_USED_FOR_FULL_CIRCS 32,888
    CHANNEL_USED_FOR_FULL_CIRCS,33,934
    CHANNEL_USED_FOR_USER_TRAFFIC,34,967
} channel_usage_info_t;35,1002
struct channel_s 46,1438
  uint32_t magic;48,1509
  HT_ENTRY(51,1592
    CHANNEL_NOT_CLOSING 128,4396
    CHANNEL_CLOSE_REQUESTED,129,4425
    CHANNEL_CLOSE_FROM_BELOW,130,4454
    CHANNEL_CLOSE_FOR_ERROR131,4484
    SCHED_CHAN_IDLE 140,4701
    SCHED_CHAN_WAITING_FOR_CELLS,145,4829
    SCHED_CHAN_WAITING_TO_WRITE,149,4953
    SCHED_CHAN_PENDING154,5116
  int sched_heap_idx;158,5206
  time_t timestamp_created;161,5286
  time_t timestamp_active;162,5336
  uint64_t timestamp_xfer_ms;174,5841
  void (*free_fn)free_fn179,5944
  void (*close)close181,6007
  const char * (*describe_transport)describe_transport183,6095
  void (*dumpstats)dumpstats185,6224
  channel_cell_handler_fn_ptr cell_handler;188,6312
  channel_var_cell_handler_fn_ptr var_cell_handler;189,6356
  double (*get_overhead_estimate)get_overhead_estimate197,6574
  int (*get_remote_addr)get_remote_addr205,6938
  int (*get_transport_name)get_transport_name206,6991
#define GRD_FLAG_ORIGINAL 208,7060
#define GRD_FLAG_ADDR_ONLY 209,7088
  const char * (*get_remote_descr)get_remote_descr216,7382
  int (*has_queued_writes)has_queued_writes218,7488
  int (*is_canonical)is_canonical225,7757
  int (*matches_extend_info)matches_extend_info227,7863
  int (*matches_target)matches_target229,7994
  size_t (*num_bytes_queued)num_bytes_queued231,8126
  int (*num_cells_writeable)num_cells_writeable233,8227
  int (*write_cell)write_cell235,8310
  int (*write_packed_cell)write_packed_cell237,8402
  int (*write_var_cell)write_var_cell239,8517
  char identity_digest[identity_digest250,8954
  ed25519_public_key_t ed25519_identity;260,9356
  char *nickname;nickname263,9462
  TOR_LIST_ENTRY(269,9599
struct channel_listener_s 350,12496
  channel_listener_state_t state;352,12563
  uint64_t global_identifier;357,12690
  unsigned char registered:registered360,12789
    CHANNEL_LISTENER_NOT_CLOSING 365,12859
    CHANNEL_LISTENER_CLOSE_REQUESTED,366,12897
    CHANNEL_LISTENER_CLOSE_FROM_BELOW,367,12935
    CHANNEL_LISTENER_CLOSE_FOR_ERROR368,12974
  time_t timestamp_created;372,13093
  time_t timestamp_active;373,13143
  void (*free_fn)free_fn378,13262
  void (*close)close380,13334
  const char * (*describe_transport)describe_transport382,13431
  void (*dumpstats)dumpstats384,13569
  channel_listener_fn_ptr listener;387,13684
  smartlist_t *incoming_list;incoming_list390,13767
  time_t timestamp_accepted;393,13832
  uint64_t n_accepted;396,13894
typedef struct cell_queue_entry_s cell_queue_entry_t;462,16136
struct cell_queue_entry_s 463,16190
  TOR_SIMPLEQ_ENTRY(464,16218
    CELL_QUEUE_FIXED,466,16273
    CELL_QUEUE_VAR,467,16295
    CELL_QUEUE_PACKED468,16315
  } type;469,16337
      cell_t *cell;cell472,16370
    } fixed;473,16390
      var_cell_t *var_cell;var_cell475,16416
    } var;476,16444
      packed_cell_t *packed_cell;packed_cell478,16468
    } packed;479,16502
  } u;480,16516
#define CHANNEL_IS_CLOSED(624,21814
#define CHANNEL_IS_OPENING(626,21933
#define CHANNEL_IS_OPEN(628,22055
#define CHANNEL_IS_MAINT(630,22168
#define CHANNEL_IS_CLOSING(632,22284
#define CHANNEL_IS_ERROR(634,22406
#define CHANNEL_FINISHED(637,22523
#define CHANNEL_CONDEMNED(640,22641
#define CHANNEL_CAN_HANDLE_CELLS(643,22762
channel_is_in_state(648,22982

channelpadding.h,447
#define TOR_CHANNELPADDING_H12,347
#define CHANNELPADDING_TOR2WEB_PARAM 16,418
#define CHANNELPADDING_TOR2WEB_DEFAULT 17,473
#define CHANNELPADDING_SOS_PARAM 18,514
#define CHANNELPADDING_SOS_DEFAULT 19,570
  CHANNELPADDING_WONTPAD,22,623
  CHANNELPADDING_PADLATER,23,649
  CHANNELPADDING_PADDING_SCHEDULED,24,676
  CHANNELPADDING_PADDING_ALREADY_SCHEDULED,25,712
  CHANNELPADDING_PADDING_SENT,26,756
} channelpadding_decision_t;27,787

channeltls.h,221
#define TOR_CHANNELTLS_H10,196
#define BASE_CHAN_TO_TLS(15,260
#define TLS_CHAN_TO_BASE(16,317
#define TLS_CHAN_MAGIC 18,373
struct channel_tls_s 22,439
  channel_t base_;24,492
  or_connection_t *conn;conn26,543

circpathbias.h,34
#define TOR_CIRCPATHBIAS_H13,346

circuitbuild.h,34
#define TOR_CIRCUITBUILD_H13,346

circuitlist.h,73
#define TOR_CIRCUITLIST_H13,343
#define circuit_mark_for_close(67,3306

circuitmux.h,1036
#define TOR_CIRCUITMUX_H10,196
typedef struct circuitmux_policy_s circuitmux_policy_t;15,264
typedef struct circuitmux_policy_data_s circuitmux_policy_data_t;16,320
typedef struct circuitmux_policy_circ_data_s circuitmux_policy_circ_data_t;17,386
struct circuitmux_policy_s 19,463
  circuitmux_policy_data_t * (*alloc_cmux_data)alloc_cmux_data21,540
  void (*free_cmux_data)free_cmux_data23,653
    (*alloc_circ_data)alloc_circ_data27,869
  void (*free_circ_data)free_circ_data33,1153
  void (*notify_circ_active)notify_circ_active38,1430
  void (*notify_circ_inactive)notify_circ_inactive42,1666
  void (*notify_set_n_cells)notify_set_n_cells47,1968
  void (*notify_xmit_cells)notify_xmit_cells52,2255
  circuit_t * (*pick_active_circuit)pick_active_circuit58,2562
  int (*cmp_cmux)cmp_cmux61,2755
struct circuitmux_policy_data_s 70,3063
  uint32_t magic;71,3097
struct circuitmux_policy_circ_data_s 79,3267
  uint32_t magic;80,3306
#define TO_CMUX_POL_DATA(91,3461
#define TO_CMUX_POL_CIRC_DATA(98,3606

circuitmux_ewma.h,37
#define TOR_CIRCUITMUX_EWMA_H10,211

circuitstats.h,414
#define TOR_CIRCUITSTATS_H13,345
struct circuit_build_times_s 75,3496
  build_time_t circuit_build_times[circuit_build_times77,3595
  int build_times_idx;79,3722
  int total_build_times;81,3824
  network_liveness_t liveness;83,3918
  time_t last_circ_at;85,4027
  build_time_t Xm;87,4118
  double alpha;89,4178
  int have_computed_timeout;91,4231
  double timeout_ms;94,4411
  double close_ms;96,4495

circuituse.h,233
#define TOR_CIRCUITUSE_H13,340
#define CIRCLAUNCH_ONEHOP_TUNNEL 39,1355
#define CIRCLAUNCH_NEED_UPTIME 41,1469
#define CIRCLAUNCH_NEED_CAPACITY 43,1585
#define CIRCLAUNCH_IS_INTERNAL 46,1712
#define CIRCLAUNCH_IS_V3_RP 49,1891

command.h,29
#define TOR_COMMAND_H13,331

config.h,1030
#define TOR_CONFIG_H13,328
#define KERNEL_MAY_SUPPORT_IPFW18,451
#define MIN_HEARTBEAT_PERIOD 23,627
#define OPTIONS_DUMP_MINIMAL 48,1705
#define OPTIONS_DUMP_DEFAULTS 49,1736
#define OPTIONS_DUMP_ALL 50,1768
#define get_datadir_fname2_suffix(66,2555
#define get_datadir_fname(70,2788
#define get_datadir_fname2(73,2971
#define options_get_datadir_fname2(77,3183
#define get_datadir_fname_suffix(81,3427
#define get_primary_or_port(95,4004
#define get_primary_dir_port(97,4109
typedef struct bridge_line_t 145,6284
  tor_addr_t addr;146,6315
  uint16_t port;147,6370
  char *transport_name;transport_name148,6421
  char digest[digest150,6560
  smartlist_t *socks_args;socks_args151,6627
} bridge_line_t;153,6742
#define CL_PORT_NO_STREAM_OPTIONS 163,7105
#define CL_PORT_WARN_NONLOCAL 164,7147
#define CL_PORT_SERVER_OPTIONS 166,7234
#define CL_PORT_FORBID_NONLOCAL 167,7273
#define CL_PORT_TAKES_HOSTNAMES 168,7313
#define CL_PORT_IS_UNIXSOCKET 169,7353
#define CL_PORT_DFLT_GROUP_WRITABLE 170,7391

confparse.h,2840
#define TOR_CONFPARSE_H8,267
typedef enum config_type_t 11,349
  CONFIG_TYPE_STRING 12,378
  CONFIG_TYPE_FILENAME,13,435
  CONFIG_TYPE_UINT,14,511
  CONFIG_TYPE_INT,15,588
  CONFIG_TYPE_PORT,16,637
  CONFIG_TYPE_INTERVAL,18,756
  CONFIG_TYPE_MSEC_INTERVAL,19,832
  CONFIG_TYPE_MEMUNIT,21,946
  CONFIG_TYPE_DOUBLE,22,1020
  CONFIG_TYPE_BOOL,23,1079
  CONFIG_TYPE_AUTOBOOL,24,1153
  CONFIG_TYPE_ISOTIME,26,1294
  CONFIG_TYPE_CSV,27,1369
  CONFIG_TYPE_CSV_INTERVAL,29,1501
  CONFIG_TYPE_LINELIST,32,1720
  CONFIG_TYPE_LINELIST_S,33,1783
  CONFIG_TYPE_LINELIST_V,35,1924
  CONFIG_TYPE_ROUTERSET,38,2106
  CONFIG_TYPE_OBSOLETE,40,2240
} config_type_t;41,2303
  char **STRING;STRING49,2533
  char **FILENAME;FILENAME50,2550
  int *UINT;UINT51,2569
  int *INT;INT55,2787
  int *PORT;PORT56,2799
  int *INTERVAL;INTERVAL57,2812
  int *MSEC_INTERVAL;MSEC_INTERVAL58,2829
  uint64_t *MEMUNIT;MEMUNIT59,2851
  double *DOUBLE;DOUBLE60,2872
  int *BOOL;BOOL61,2890
  int *AUTOBOOL;AUTOBOOL62,2903
  time_t *ISOTIME;ISOTIME63,2920
  smartlist_t **CSV;CSV64,2939
  smartlist_t **CSV_INTERVAL;CSV_INTERVAL65,2960
  config_line_t **LINELIST;LINELIST66,2990
  config_line_t **LINELIST_S;LINELIST_S67,3018
  config_line_t **LINELIST_V;LINELIST_V68,3048
  routerset_t **ROUTERSET;ROUTERSET69,3078
} confparse_dummy_values_t;70,3105
typedef struct config_abbrev_t 74,3220
  const char *abbreviated;abbreviated75,3253
  const char *full;full76,3280
  int commandline_only;77,3300
  int warn;78,3324
} config_abbrev_t;79,3336
typedef struct config_deprecation_t 81,3356
  const char *name;name82,3394
  const char *why_deprecated;why_deprecated83,3414
} config_deprecation_t;84,3444
#define PLURAL(88,3595
typedef struct config_var_t 91,3717
  const char *name;name92,3747
  config_type_t type;93,3812
  off_t var_offset;95,3919
  const char *initvalue;initvalue96,3999
  confparse_dummy_values_t var_ptr_dummy;101,4248
} config_var_t;103,4297
#define CONF_CHECK_VAR_TYPE(127,5266
#define CONF_TEST_MEMBERS(129,5366
#define END_OF_CONFIG_VARS 131,5462
#define DUMMY_TYPECHECK_INSTANCE(133,5585
#define CONF_TEST_MEMBERS(136,5666
#define END_OF_CONFIG_VARS 137,5714
#define DUMMY_TYPECHECK_INSTANCE(139,5858
typedef int (*validate_fn_t)validate_fn_t146,6109
typedef struct config_format_t 151,6354
  size_t size;152,6387
  uint32_t magic;153,6463
  off_t magic_offset;155,6582
  config_abbrev_t *abbrevs;abbrevs156,6657
  const config_deprecation_t *deprecations;deprecations158,6787
  config_var_t *vars;vars159,6865
  validate_fn_t validate_fn;161,7016
  config_var_t *extra;extra164,7206
} config_format_t;165,7229
#define CONFIG_CHECK(169,7338
#define CAL_USE_DEFAULTS 175,7646
#define CAL_CLEAR_FIRST 176,7684
#define CAL_WARN_DEPRECATIONS 177,7722

connection.h,829
#define TOR_CONNECTION_H13,340
#define connection_mark_for_close(40,1556
#define connection_mark_for_close_internal(42,1653
#define connection_mark_and_flush_internal_(55,2323
#define connection_mark_and_flush_internal(62,2708
#define connection_mark_and_flush_(68,2921
#define connection_mark_and_flush(82,3848
#define MAX_SOCKS5_AUTH_FIELD_SIZE 100,4445
#define MAX_SOCKS5_AUTH_SIZE_TOTAL 104,4588
connection_buf_add(148,6670
connection_buf_add_compress(153,6819
connection_get_inbuf_len(165,7247
connection_get_outbuf_len(171,7371
#define CONN_LEN_AND_FREE_TEMPLATE(195,8621
connection_dir_count_by_purpose_and_resource(205,8978
connection_dir_count_by_purpose_resource_and_state(218,9566
#undef CONN_LEN_AND_FREE_TEMPLATE231,10126
#define connection_speaks_cells(236,10301
connection_is_moribund(255,11161

connection_edge.h,1029
#define TOR_CONNECTION_EDGE_H13,355
#define connection_mark_unattached_ap(17,412
#define connection_ap_mark_as_pending_circuit(72,3324
#define CONNECTION_AP_EXPECT_NONPENDING(75,3521
typedef enum hostname_type_t 101,5027
  NORMAL_HOSTNAME,102,5058
  NORMAL_HOSTNAME, ONION_V2_HOSTNAME,102,5058
  NORMAL_HOSTNAME, ONION_V2_HOSTNAME, ONION_V3_HOSTNAME,102,5058
  EXIT_HOSTNAME,103,5115
  EXIT_HOSTNAME, BAD_HOSTNAME103,5115
} hostname_type_t;104,5145
#define BEGIN_FLAG_IPV6_OK 134,6245
#define BEGIN_FLAG_IPV4_NOT_OK 139,6519
#define BEGIN_FLAG_IPV6_PREFERRED 142,6700
typedef struct begin_cell_t 148,6823
  char *address;address151,6953
  uint32_t flags;154,7060
  uint16_t port;156,7116
  uint16_t stream_id;158,7175
  unsigned is_begindir 160,7241
} begin_cell_t;161,7269
  char orig_address[orig_address173,7682
  int automap;177,7938
  addressmap_entry_source_t exit_source;179,8020
  time_t map_expires;181,8129
  int end_reason;184,8264
  int should_close;187,8408
} rewrite_result_t;188,8428

connection_or.h,172
#define TOR_CONNECTION_OR_H13,349
#define MIN_LINK_PROTO_FOR_WIDE_CIRC_IDS 111,5452
#define MIN_LINK_PROTO_FOR_CHANNEL_PADDING 112,5495
#define MAX_LINK_PROTO 113,5540

conscache.h,179
#define TOR_CONSCACHE_H5,117
typedef struct consensus_cache_entry_t consensus_cache_entry_t;9,164
typedef struct consensus_cache_t consensus_cache_t;10,228
HANDLE_DECL(12,281

consdiff.h,388
#define TOR_CONSDIFF_H6,153
typedef struct cdline_t 23,716
  const char *s;s24,742
  uint32_t len;25,759
} cdline_t;26,775
typedef struct consensus_digest_t 28,788
  uint8_t sha3_256[sha3_25629,824
} consensus_digest_t;30,859
typedef struct smartlist_slice_t 45,1625
  const smartlist_t *list;list50,1796
  int offset;52,1881
  int len;54,1963
} smartlist_slice_t;55,1974

consdiffmgr.h,283
#define TOR_CONSDIFFMGR_H5,119
typedef enum consdiff_status_t 10,222
  CONSDIFF_AVAILABLE,11,255
  CONSDIFF_NOT_FOUND,12,277
  CONSDIFF_IN_PROGRESS,13,299
} consdiff_status_t;14,323
typedef struct consdiff_cfg_t 16,345
  int32_t cache_max_num;17,377
} consdiff_cfg_t;18,402

control.h,1989
#define TOR_CONTROL_H13,331
#define LOG_FN_CONN(27,717
#define EVENT_NS 36,1068
int control_event_general_status(72,3063
#define EVENT_MIN_ 156,7557
#define EVENT_CIRCUIT_STATUS 157,7602
#define EVENT_STREAM_STATUS 158,7647
#define EVENT_OR_CONN_STATUS 159,7692
#define EVENT_BANDWIDTH_USED 160,7737
#define EVENT_CIRCUIT_STATUS_MINOR 161,7782
#define EVENT_NEW_DESC 162,7827
#define EVENT_DEBUG_MSG 163,7872
#define EVENT_INFO_MSG 164,7917
#define EVENT_NOTICE_MSG 165,7962
#define EVENT_WARN_MSG 166,8007
#define EVENT_ERR_MSG 167,8052
#define EVENT_ADDRMAP 168,8097
#define EVENT_DESCCHANGED 171,8237
#define EVENT_STATUS_CLIENT 174,8347
#define EVENT_STATUS_SERVER 175,8392
#define EVENT_STATUS_GENERAL 176,8437
#define EVENT_GUARD 177,8482
#define EVENT_STREAM_BANDWIDTH_USED 178,8527
#define EVENT_CLIENTS_SEEN 179,8572
#define EVENT_NEWCONSENSUS 180,8617
#define EVENT_BUILDTIMEOUT_SET 181,8662
#define EVENT_GOT_SIGNAL 182,8707
#define EVENT_CONF_CHANGED 183,8752
#define EVENT_CONN_BW 184,8797
#define EVENT_CELL_STATS 185,8842
#define EVENT_TB_EMPTY 186,8887
#define EVENT_CIRC_BANDWIDTH_USED 187,8932
#define EVENT_TRANSPORT_LAUNCHED 188,8977
#define EVENT_HS_DESC 189,9022
#define EVENT_HS_DESC_CONTENT 190,9067
#define EVENT_NETWORK_LIVENESS 191,9112
#define EVENT_MAX_ 192,9157
#define EVENT_CAPACITY_ 195,9279
#define EVENT_MASK_(204,9593
#define EVENT_MASK_NONE_ 206,9652
#define EVENT_MASK_ABOVE_MIN_ 208,9706
#define EVENT_MASK_BELOW_MAX_ 209,9778
#define EVENT_MASK_ALL_ 213,9968
typedef struct cell_stats_t 231,10667
  uint64_t added_cells_appward[added_cells_appward233,10762
  uint64_t added_cells_exitward[added_cells_exitward235,10883
  uint64_t removed_cells_appward[removed_cells_appward237,11006
  uint64_t removed_cells_exitward[removed_cells_exitward239,11131
  uint64_t total_time_appward[total_time_appward241,11260
  uint64_t total_time_exitward[total_time_exitward243,11386
} cell_stats_t;244,11441

cpuworker.h,31
#define TOR_CPUWORKER_H13,337

dircollate.h,498
#define TOR_DIRCOLLATE_H13,340
typedef struct dircollator_s dircollator_t;18,408
typedef HT_HEAD(double_digest_map, ddmap_entry_s)32,929
struct dircollator_s 35,1142
  int is_collated;37,1220
  int n_votes;39,1292
  int n_authorities;41,1364
  int next_vote_num;45,1475
  digestmap_t *by_rsa_sha1;by_rsa_sha149,1695
  struct double_digest_map by_both_ids;53,1905
  digestmap_t *by_collated_rsa_sha1;by_collated_rsa_sha159,2183
  smartlist_t *all_rsa_sha1_lst;all_rsa_sha1_lst63,2321

directory.h,827
#define TOR_DIRECTORY_H13,337
  DIRIND_ONEHOP=35,1391
  DIRIND_ANONYMOUS=37,1468
  DIRIND_DIRECT_CONN,39,1531
  DIRIND_ANON_DIRPORT,41,1626
} dir_indirection_t;42,1649
typedef struct directory_request_t directory_request_t;52,2033
#define DSR_HEX 101,4944
#define DSR_BASE64 102,4973
#define DSR_DIGEST256 103,5002
#define DSR_SORT_UNIQ 104,5031
#define download_status_failed(127,6341
download_status_is_ready(140,7002
download_status_mark_impossible(162,7785
typedef struct response_handler_args_t 178,8317
  int status_code;179,8358
  const char *reason;reason180,8377
  const char *body;body181,8399
  size_t body_len;182,8419
  const char *headers;headers183,8438
} response_handler_args_t;184,8461
#define DIR_DEFAULT_RANDOM_MULTIPLIER 241,11389
#define DIR_TEST_NET_RANDOM_MULTIPLIER 243,11476

dirserv.h,1161
#define TOR_DIRSERV_H13,331
#define REACHABILITY_MODULO_PER_TEST 20,532
#define REACHABILITY_TEST_INTERVAL 23,637
#define REACHABILITY_TEST_CYCLE_PERIOD 26,752
#define MAX_EXITPOLICY_SUMMARY_LEN 30,903
#define MAX_V_LINE_LEN 33,1014
typedef enum dir_spool_source_t 36,1109
    DIR_SPOOL_SERVER_BY_DIGEST=37,1143
    DIR_SPOOL_SERVER_BY_DIGEST=1, DIR_SPOOL_SERVER_BY_FP,37,1143
    DIR_SPOOL_EXTRA_BY_DIGEST,38,1201
    DIR_SPOOL_EXTRA_BY_DIGEST, DIR_SPOOL_EXTRA_BY_FP,38,1201
    DIR_SPOOL_MICRODESC,39,1255
    DIR_SPOOL_NETWORKSTATUS,40,1280
    DIR_SPOOL_CONSENSUS_CACHE_ENTRY,41,1309
} dir_spool_source_t;42,1346
#define dir_spool_source_bitfield_t 43,1368
typedef struct spooled_resource_t 58,2079
  unsigned spool_eagerly 63,2236
  dir_spool_source_bitfield_t spool_source 67,2343
  uint8_t digest[digest71,2447
  struct cached_dir_t *cached_dir_ref;cached_dir_ref76,2603
  struct consensus_cache_entry_t *consensus_cache_entry;consensus_cache_entry81,2793
  const uint8_t *cce_body;cce_body82,2850
  size_t cce_len;83,2877
  off_t cached_dir_offset;87,3000
} spooled_resource_t;88,3027
#define MAX_MEASUREMENT_AGE 165,7046

dirvote.h,1682
#define TOR_DIRVOTE_H13,331
#define MIN_VOTE_SECONDS 29,814
#define MIN_VOTE_SECONDS_TESTING 31,915
#define MIN_DIST_SECONDS 34,998
#define MIN_DIST_SECONDS_TESTING 36,1099
#define MIN_VOTE_INTERVAL 39,1176
#define MIN_VOTE_INTERVAL_TESTING 48,1661
#define MIN_VOTE_INTERVAL_TESTING_INITIAL 51,1776
#define MIN_SUPPORTED_CONSENSUS_METHOD 55,1957
#define MAX_SUPPORTED_CONSENSUS_METHOD 58,2063
#define MIN_METHOD_FOR_MANDATORY_MICRODESC 62,2202
#define MIN_METHOD_FOR_A_LINES 65,2305
#define MIN_METHOD_FOR_P6_LINES 68,2413
#define MIN_METHOD_FOR_NTOR_KEY 72,2535
#define MIN_METHOD_TO_CLIP_UNMEASURED_BW 76,2689
#define MIN_METHOD_FOR_ID_HASH_IN_MD 80,2832
#define MIN_METHOD_FOR_PACKAGE_LINES 83,2936
#define MIN_METHOD_FOR_GUARDFRACTION 87,3088
#define MIN_METHOD_FOR_ED25519_ID_IN_MD 92,3314
#define MIN_METHOD_FOR_ED25519_ID_VOTING 96,3465
#define MIN_METHOD_FOR_SHARED_RANDOM 100,3600
#define MIN_METHOD_FOR_EXCLUDING_INVALID_NODES 104,3739
#define MIN_METHOD_FOR_RECOMMENDED_PROTOCOLS 108,3882
#define MIN_METHOD_FOR_RS_PROTOCOLS 112,4022
#define MIN_METHOD_FOR_INIT_BW_WEIGHTS_ONE 116,4173
#define DEFAULT_MAX_UNMEASURED_BW_KB 121,4412
  time_t voting_starts;149,5681
  time_t fetch_missing_votes;152,5797
  time_t voting_ends;154,5903
  time_t fetch_missing_signatures;157,6031
  time_t interval_starts;159,6109
  int have_voted;162,6197
  int have_fetched_missing_votes;164,6263
  int have_built_consensus;166,6372
  int have_fetched_missing_signatures;168,6451
  int have_published_consensus;170,6540
} voting_schedule_t;171,6572
#define DGV_BY_ID 199,7800
#define DGV_INCLUDE_PENDING 200,7820
#define DGV_INCLUDE_PREVIOUS 201,7850

dns.h,163
#define TOR_DNS_H13,319
#define MIN_DNS_TTL_AT_EXIT 16,395
#define MAX_DNS_TTL_AT_EXIT 18,488
#define MAX_DNS_ENTRY_AGE 22,620
#define DEFAULT_DNS_TTL 25,743

dns_structs.h,1199
#define TOR_DNS_STRUCTS_H14,372
#define MAX_ADDRESSLEN 17,449
typedef struct pending_connection_t 20,537
  edge_connection_t *conn;conn21,575
  struct pending_connection_t *next;next22,602
} pending_connection_t;23,639
#define CACHED_RESOLVE_MAGIC 27,775
#define CACHE_STATE_PENDING 36,1261
#define CACHE_STATE_DONE 40,1515
#define CACHE_STATE_CACHED 43,1673
#define RES_STATUS_INFLIGHT 49,1804
#define RES_STATUS_DONE_OK 51,1885
#define RES_STATUS_DONE_ERR 53,1964
typedef struct cached_resolve_t 60,2180
  HT_ENTRY(61,2214
    uint32_t addr_ipv4;66,2385
    int err_ipv4;68,2506
  } result_ipv4;69,2573
    struct in6_addr addr_ipv6;71,2631
    int err_ipv6;73,2748
  } result_ipv6;74,2815
    char *hostname;hostname76,2881
    int err_hostname;77,2955
  } result_ptr;78,3024
  unsigned int res_status_ipv4 85,3192
  unsigned int res_status_ipv6 86,3228
  unsigned int res_status_hostname 87,3264
  uint8_t state;89,3314
  time_t expire;91,3387
  uint32_t ttl_ipv4;92,3453
  uint32_t ttl_ipv6;93,3519
  uint32_t ttl_hostname;94,3585
  pending_connection_t *pending_connections;pending_connections96,3734
  int minheap_idx;98,3824
} cached_resolve_t;99,3843

dnsserv.h,29
#define TOR_DNSSERV_H13,331

entrynodes.h,4463
#define TOR_ENTRYNODES_H13,342
typedef struct guard_selection_s guard_selection_t;18,468
typedef struct entry_guard_t entry_guard_t;21,595
typedef struct circuit_guard_state_t circuit_guard_state_t;25,729
typedef struct entry_guard_restriction_t entry_guard_restriction_t;29,883
typedef struct guard_pathbias_t 35,1132
  unsigned int path_bias_noticed 36,1166
  unsigned int path_bias_warned 38,1314
  unsigned int path_bias_extreme 40,1460
  unsigned int path_bias_disabled 42,1608
  unsigned int path_bias_use_noticed 44,1753
  unsigned int path_bias_use_extreme 46,1909
  double circ_attempts;49,2066
  double circ_successes;50,2144
  double successful_circuits_closed;52,2279
  double collapsed_circuits;54,2420
  double unusable_circuits;57,2619
  double timeouts;59,2763
  double use_attempts;61,2875
  double use_successes;62,2954
} guard_pathbias_t;64,3087
#define GUARD_REACHABLE_NO 73,3263
#define GUARD_REACHABLE_YES 74,3295
#define GUARD_REACHABLE_MAYBE 75,3327
struct entry_guard_t 82,3612
  HANDLE_ENTRY(83,3635
  char nickname[nickname85,3680
  char identity[identity86,3721
  ed25519_public_key_t ed_id;87,3750
  time_t sampled_on_date;100,4123
  time_t unlisted_since_date;105,4424
  char *sampled_by_version;sampled_by_version107,4530
  unsigned currently_listed 110,4664
  time_t confirmed_on_date;116,4929
  int confirmed_idx;124,5289
  char *selection_name;selection_name131,5531
  tor_addr_port_t *bridge_addr;bridge_addr134,5602
  time_t last_tried_to_connect;140,5825
  unsigned is_reachable 143,5992
  unsigned is_pending 148,6264
  unsigned is_persistent 151,6389
  time_t failing_since;156,6617
  unsigned is_filtered_guard 161,6819
  unsigned is_usable_filtered_guard 166,7088
  unsigned is_primary:is_primary167,7129
  char *extra_state_fields;extra_state_fields171,7290
  guard_selection_t *in_selection;in_selection175,7454
  guard_pathbias_t pb;179,7547
typedef enum guard_selection_type_t 185,7632
  GS_TYPE_INFER=187,7727
  GS_TYPE_NORMAL=190,7871
  GS_TYPE_BRIDGE,194,8062
  GS_TYPE_RESTRICTED,197,8186
} guard_selection_type_t;198,8208
struct guard_selection_s 211,8644
  char *name;name215,8757
  guard_selection_type_t type;220,8841
  int primary_guards_up_to_date;227,9065
  smartlist_t *sampled_entry_guards;sampled_entry_guards236,9447
  smartlist_t *confirmed_entry_guards;confirmed_entry_guards249,9975
  smartlist_t *primary_entry_guards;primary_entry_guards262,10463
  time_t last_time_on_internet;265,10574
  int next_confirmed_idx;269,10710
struct entry_guard_restriction_t 286,11202
  uint8_t exclude_id[exclude_id291,11380
struct circuit_guard_state_t 297,11498
  struct entry_guard_handle_t *guard;guard299,11589
  time_t state_set_at;301,11681
  uint8_t state;303,11739
  entry_guard_restriction_t *restrictions;restrictions311,12034
  GUARD_USAGE_TRAFFIC 348,13481
  GUARD_USAGE_DIRGUARD 349,13508
} guard_usage_t;350,13535
  GUARD_USABLE_NEVER 361,14024
  GUARD_MAYBE_USABLE_LATER 362,14079
  GUARD_USABLE_NOW 363,14156
} guard_usable_t;364,14203
#define DFLT_MAX_SAMPLE_THRESHOLD_PERCENT 392,15256
#define DFLT_MAX_SAMPLE_SIZE 397,15390
#define DFLT_MIN_FILTERED_SAMPLE_SIZE 401,15501
#define DFLT_REMOVE_UNLISTED_GUARDS_AFTER_DAYS 405,15619
#define DFLT_GUARD_LIFETIME_DAYS 410,15801
#define DFLT_GUARD_CONFIRMED_MIN_LIFETIME_DAYS 415,15974
#define DFLT_N_PRIMARY_GUARDS 419,16096
#define DFLT_N_PRIMARY_GUARDS_TO_USE 424,16242
#define DFLT_N_PRIMARY_DIR_GUARDS_TO_USE 428,16365
#define DFLT_INTERNET_LIKELY_DOWN_INTERVAL 433,16537
#define DFLT_NONPRIMARY_GUARD_CONNECT_TIMEOUT 439,16779
#define DFLT_NONPRIMARY_GUARD_IDLE_TIMEOUT 444,16956
#define DFLT_MEANINGFUL_RESTRICTION_PERCENT 449,17133
#define DFLT_EXTREME_RESTRICTION_PERCENT 454,17334
HANDLE_DECL(471,18043
#define SAMPLE_EXCLUDE_CONFIRMED 503,19825
#define SAMPLE_EXCLUDE_PRIMARY 504,19868
#define SAMPLE_EXCLUDE_PENDING 505,19911
#define SAMPLE_NO_UPDATE_PRIMARY 506,19954
#define SAMPLE_EXCLUDE_NO_DESCRIPTOR 507,19997
#define GUARD_CIRC_STATE_USABLE_ON_COMPLETION 527,21000
#define GUARD_CIRC_STATE_USABLE_IF_NO_BETTER_GUARD 531,21201
#define GUARD_CIRC_STATE_WAITING_FOR_BETTER_GUARD 534,21380
#define GUARD_CIRC_STATE_COMPLETE 537,21544
#define GUARD_CIRC_STATE_DEAD 539,21653
typedef struct guardfraction_bandwidth_t 588,24166
  int guard_bw;590,24280
  int non_guard_bw;592,24371
} guardfraction_bandwidth_t;593,24391

ext_orport.h,27
#define EXT_ORPORT_H8,264

fp_pair.h,250
#define _TOR_FP_PAIR_H10,187
typedef struct fp_pair_map_entry_s fp_pair_map_entry_t;16,266
typedef struct fp_pair_map_s fp_pair_map_t;17,322
typedef fp_pair_map_entry_t *fp_pair_map_iter_t;fp_pair_map_iter_t18,366
#undef DECLARE_MAP_FNS42,1708

geoip.h,27
#define TOR_GEOIP_H13,325

hibernate.h,237
#define TOR_HIBERNATE_H13,337
  HIBERNATE_STATE_LIVE=38,1350
  HIBERNATE_STATE_EXITING=41,1481
  HIBERNATE_STATE_LOWBANDWIDTH=44,1622
  HIBERNATE_STATE_DORMANT=47,1747
  HIBERNATE_STATE_INITIAL=50,1873
} hibernate_state_t;51,1901

hs_cache.h,943
#define TOR_HS_CACHE_H10,188
#define HS_CACHE_CLIENT_INTRO_STATE_MAX_AGE 23,511
typedef struct hs_cache_intro_state_t 26,597
  time_t created_ts;28,695
  unsigned int error 31,758
  unsigned int timed_out 34,811
  uint32_t unreachable_count;37,912
} hs_cache_intro_state_t;38,942
typedef struct hs_cache_client_intro_state_t 40,969
  digest256map_t *intro_points;intro_points43,1118
} hs_cache_client_intro_state_t;44,1150
typedef struct hs_cache_dir_descriptor_t 48,1314
  const uint8_t *key;key52,1577
  time_t created_ts;55,1671
  hs_desc_plaintext_data_t *plaintext_data;plaintext_data59,1806
  char *encoded_desc;encoded_desc63,1968
} hs_cache_dir_descriptor_t;64,1990
typedef struct hs_cache_client_descriptor_t 102,3552
  ed25519_public_key_t key;104,3667
  time_t expiration_ts;109,3900
  hs_descriptor_t *desc;desc113,4064
  char *encoded_desc;encoded_desc116,4148
} hs_cache_client_descriptor_t;117,4170

hs_cell.h,1679
#define TOR_HS_CELL_H10,214
#define HS_CELL_INTRODUCE1_MIN_SIZE 17,430
  HS_CELL_INTRO_ACK_SUCCESS 21,530
  HS_CELL_INTRO_ACK_SUCCESS = 0x0000,x000021,530
  HS_CELL_INTRO_ACK_FAILURE 22,599
  HS_CELL_INTRO_ACK_FAILURE = 0x0001,x000122,599
  HS_CELL_INTRO_ACK_BADFMT 23,669
  HS_CELL_INTRO_ACK_BADFMT  = 0x0002,x000223,669
  HS_CELL_INTRO_ACK_NORELAY 24,732
  HS_CELL_INTRO_ACK_NORELAY = 0x0003,x000324,732
} hs_cell_introd_ack_status_t;25,804
  HS_CELL_ONION_KEY_TYPE_NTOR 29,902
} hs_cell_onion_key_type_t;30,937
typedef struct hs_cell_introduce1_data_t 34,1089
  unsigned int is_legacy 36,1177
  const crypto_pk_t *legacy_key;legacy_key39,1310
  const ed25519_public_key_t *auth_pk;auth_pk41,1397
  const curve25519_public_key_t *enc_pk;enc_pk43,1486
  const uint8_t *subcredential;subcredential45,1566
  const curve25519_public_key_t *onion_pk;onion_pk47,1647
  const uint8_t *rendezvous_cookie;rendezvous_cookie49,1717
  const curve25519_keypair_t *client_kp;client_kp51,1815
  smartlist_t *link_specifiers;link_specifiers53,1898
} hs_cell_introduce1_data_t;54,1930
typedef struct hs_cell_introduce2_data_t 61,2313
  const ed25519_public_key_t *auth_pk;auth_pk66,2560
  const curve25519_keypair_t *enc_kp;enc_kp70,2767
  const uint8_t *subcredential;subcredential73,2957
  const uint8_t *payload;payload75,3035
  size_t payload_len;77,3119
  curve25519_public_key_t onion_pk;82,3280
  uint8_t rendezvous_cookie[rendezvous_cookie84,3387
  curve25519_public_key_t client_pk;86,3498
  smartlist_t *link_specifiers;link_specifiers88,3611
  replaycache_t *replay_cache;replay_cache90,3691
} hs_cell_introduce2_data_t;91,3722

hs_circuit.h,32
#define TOR_HS_CIRCUIT_H10,223

hs_circuitmap.h,553
#define TOR_HS_CIRCUITMAP_H10,204
typedef HT_HEAD(hs_circuitmap_ht, circuit_t)12,233
typedef struct hs_token_s hs_token_t;14,297
  HS_TOKEN_REND_RELAY_SIDE,72,2728
  HS_TOKEN_INTRO_V2_RELAY_SIDE,74,2816
  HS_TOKEN_INTRO_V3_RELAY_SIDE,76,2908
  HS_TOKEN_REND_SERVICE_SIDE,79,2998
  HS_TOKEN_INTRO_V2_SERVICE_SIDE,81,3097
  HS_TOKEN_INTRO_V3_SERVICE_SIDE,83,3200
  HS_TOKEN_REND_CLIENT_SIDE,86,3292
} hs_token_type_t;87,3321
struct hs_token_s 91,3467
  hs_token_type_t type;93,3513
  size_t token_len;96,3591
  uint8_t *token;token99,3667

hs_client.h,316
#define TOR_HS_CLIENT_H10,214
  HS_CLIENT_FETCH_ERROR 19,422
  HS_CLIENT_FETCH_LAUNCHED 21,517
  HS_CLIENT_FETCH_HAVE_DESC 23,608
  HS_CLIENT_FETCH_NO_HSDIRS 25,686
  HS_CLIENT_FETCH_NOT_ALLOWED 27,764
  HS_CLIENT_FETCH_MISSING_INFO 29,867
  HS_CLIENT_FETCH_PENDING 31,963
} hs_client_fetch_status_t;32,999

hs_common.h,2473
#define TOR_HS_COMMON_H10,225
#define HS_VERSION_TWO 19,443
#define HS_VERSION_THREE 21,511
#define HS_VERSION_MIN 23,584
#define HS_VERSION_MAX 24,622
#define NUM_INTRO_POINTS_DEFAULT 27,733
#define NUM_INTRO_POINTS_MAX 29,841
#define NUM_INTRO_POINTS_EXTRA 32,987
#define INTRO_CIRC_RETRY_PERIOD 35,1093
#define MAX_INTRO_CIRCS_PER_PERIOD 38,1219
#define MAX_REND_FAILURES 41,1382
#define MAX_REND_TIMEOUT 44,1521
#define ESTABLISH_INTRO_SIG_PREFIX 47,1607
#define HS_TIME_PERIOD_LENGTH_DEFAULT 50,1713
#define HS_TIME_PERIOD_LENGTH_MIN 52,1865
#define HS_TIME_PERIOD_LENGTH_MAX 54,1995
#define HS_SERVICE_ADDR_CHECKSUM_PREFIX 57,2120
#define HS_SERVICE_ADDR_CHECKSUM_PREFIX_LEN 59,2245
#define HS_SERVICE_ADDR_CHECKSUM_INPUT_LEN 65,2547
#define HS_SERVICE_ADDR_CHECKSUM_LEN_USED 68,2731
#define HS_SERVICE_ADDR_LEN 73,3001
#define HS_SERVICE_ADDR_LEN_BASE32 77,3255
#define HS_TIME_PERIOD_LENGTH_DEFAULT 81,3374
#define HS_TIME_PERIOD_LENGTH_MIN 83,3526
#define HS_TIME_PERIOD_LENGTH_MAX 85,3656
#define HS_TIME_PERIOD_ROTATION_OFFSET 87,3816
#define HS_KEYBLIND_NONCE_PREFIX 91,4001
#define HS_KEYBLIND_NONCE_PREFIX_LEN 92,4046
#define HS_KEYBLIND_NONCE_LEN 93,4122
#define HS_CREDENTIAL_PREFIX 97,4275
#define HS_CREDENTIAL_PREFIX_LEN 98,4317
#define HS_SUBCREDENTIAL_PREFIX 99,4385
#define HS_SUBCREDENTIAL_PREFIX_LEN 100,4433
#define HS_INDEX_PREFIX 103,4564
#define HS_INDEX_PREFIX_LEN 104,4603
#define HSDIR_INDEX_PREFIX 107,4718
#define HSDIR_INDEX_PREFIX_LEN 108,4756
#define HS_SRV_DISASTER_PREFIX 111,4876
#define HS_SRV_DISASTER_PREFIX_LEN 112,4932
#define HS_DEFAULT_HSDIR_N_REPLICAS 115,5073
#define HS_DEFAULT_HSDIR_SPREAD_STORE 117,5175
#define HS_DEFAULT_HSDIR_SPREAD_FETCH 119,5279
#define HS_LEGACY_RENDEZVOUS_CELL_SIZE 124,5531
  HS_AUTH_KEY_TYPE_LEGACY 129,5698
  HS_AUTH_KEY_TYPE_ED25519 130,5730
} hs_auth_key_type_t;131,5762
typedef struct rend_service_port_config_t 135,5888
  uint16_t virtual_port;137,5983
  unsigned int is_unix_addr:is_unix_addr139,6041
  uint16_t real_port;141,6127
  tor_addr_t real_addr;143,6216
  char unix_addr[unix_addr145,6295
} rend_service_port_config_t;146,6336
typedef struct hsdir_index_t 150,6464
  uint8_t fetch[fetch152,6550
  uint8_t store_first[store_first157,6774
  uint8_t store_second[store_second158,6812
} hsdir_index_t;159,6851
#define REND_HID_SERV_DIR_REQUERY_PERIOD 262,11724
#define REND_HID_SERV_DIR_REQUERY_PERIOD_TESTING 265,11892

hs_config.h,131
#define TOR_HS_CONFIG_H10,224
#define HS_CONFIG_MAX_STREAMS_PER_RDV_CIRCUIT 15,310
#define HS_CONFIG_V3_MAX_INTRO_POINTS 17,423

hs_descriptor.h,2385
#define TOR_HS_DESCRIPTOR_H10,203
#define HS_DESC_SUPPORTED_FORMAT_VERSION_MIN 25,480
#define HS_DESC_SUPPORTED_FORMAT_VERSION_MAX 27,582
#define HS_DESC_DEFAULT_LIFETIME 31,751
#define HS_DESC_MAX_LIFETIME 34,920
#define HS_DESC_CERT_LIFETIME 40,1319
#define HS_DESC_ENCRYPTED_SALT_LEN 42,1439
#define HS_DESC_ENCRYPTED_SECRET_INPUT_LEN 47,1725
#define HS_DESC_ENCRYPTED_KDF_OUTPUT_LEN 51,1973
#define HS_DESC_SUPERENC_PLAINTEXT_PAD_MULTIPLE 55,2188
#define HS_DESC_MAX_LEN 57,2309
#define HS_DESC_ENCRYPTED_KEY_LEN 62,2569
#define HS_DESC_ENCRYPTED_BIT_SIZE 63,2621
  HS_DESC_AUTH_ED25519 67,2752
} hs_desc_auth_type_t;68,2779
typedef struct hs_desc_link_specifier_t 72,2936
  uint8_t type;75,3068
    tor_addr_port_t ap;80,3216
    uint8_t legacy_id[legacy_id82,3304
    uint8_t ed25519_id[ed25519_id84,3382
  } u;85,3426
} hs_desc_link_specifier_t;86,3433
typedef struct hs_desc_intro_point_t 89,3524
  smartlist_t *link_specifiers;link_specifiers92,3715
  curve25519_public_key_t onion_key;96,3842
  tor_cert_t *auth_key_cert;auth_key_cert101,4078
  curve25519_public_key_t enc_key;104,4152
  tor_cert_t *enc_key_cert;enc_key_cert109,4386
    crypto_pk_t *key;key116,4663
      uint8_t *encoded;encoded122,4924
      size_t len;123,4948
    } cert;124,4966
  } legacy;125,4978
  unsigned int cross_certified 129,5121
} hs_desc_intro_point_t;130,5157
typedef struct hs_desc_encrypted_data_t 134,5307
  unsigned int create2_ntor 137,5451
  smartlist_t *intro_auth_types;intro_auth_types141,5636
  unsigned int single_onion_service 144,5721
  smartlist_t *intro_points;intro_points147,5835
} hs_desc_encrypted_data_t;148,5864
typedef struct hs_desc_plaintext_data_t 151,5965
  uint32_t version;154,6103
  uint32_t lifetime_sec;157,6175
  tor_cert_t *signing_key_cert;signing_key_cert161,6353
  ed25519_public_key_t signing_pubkey;165,6507
  ed25519_public_key_t blinded_pubkey;169,6686
  uint64_t revision_counter;174,6949
  uint8_t *superencrypted_blob;superencrypted_blob177,7058
  size_t superencrypted_blob_size;180,7146
} hs_desc_plaintext_data_t;181,7181
typedef struct hs_descriptor_t 184,7256
  hs_desc_plaintext_data_t plaintext_data;186,7344
  hs_desc_encrypted_data_t encrypted_data;191,7594
  uint8_t subcredential[subcredential195,7742
} hs_descriptor_t;196,7782
hs_desc_is_supported_version(200,7892

hs_ident.h,1004
#define TOR_HS_IDENT_H22,796
#define HS_REND_COOKIE_LEN 31,992
  HS_IDENT_CIRCUIT_INTRO 35,1109
  HS_IDENT_CIRCUIT_RENDEZVOUS 36,1144
} hs_ident_circuit_type_t;37,1179
typedef struct hs_ident_circuit_t 43,1473
  ed25519_public_key_t identity_pk;46,1632
  hs_ident_circuit_type_t circuit_type;53,2028
  ed25519_public_key_t intro_auth_pk;59,2324
  curve25519_public_key_t intro_enc_pk;63,2515
  uint8_t rendezvous_cookie[rendezvous_cookie68,2726
  uint8_t rendezvous_handshake_info[rendezvous_handshake_info75,2986
  curve25519_keypair_t rendezvous_client_kp;79,3182
  uint8_t rendezvous_ntor_key_seed[rendezvous_ntor_key_seed83,3366
  uint64_t num_rdv_streams;88,3580
} hs_ident_circuit_t;89,3608
typedef struct hs_ident_dir_conn_t 94,3815
  ed25519_public_key_t identity_pk;97,3961
  ed25519_public_key_t blinded_pk;102,4201
} hs_ident_dir_conn_t;105,4272
typedef struct hs_ident_edge_conn_t 110,4472
  ed25519_public_key_t identity_pk;113,4619
} hs_ident_edge_conn_t;116,4691

hs_intropoint.h,972
#define TOR_HS_INTRO_H10,199
  HS_INTRO_AUTH_KEY_TYPE_LEGACY0 17,349
  HS_INTRO_AUTH_KEY_TYPE_LEGACY0 = 0x00,x0017,349
  HS_INTRO_AUTH_KEY_TYPE_LEGACY1 18,390
  HS_INTRO_AUTH_KEY_TYPE_LEGACY1 = 0x01,x0118,390
  HS_INTRO_AUTH_KEY_TYPE_ED25519 19,431
  HS_INTRO_AUTH_KEY_TYPE_ED25519 = 0x02,x0219,431
} hs_intro_auth_key_type_t;20,472
  HS_INTRO_ACK_STATUS_SUCCESS 24,549
  HS_INTRO_ACK_STATUS_SUCCESS    = 0x0000,x000024,549
  HS_INTRO_ACK_STATUS_UNKNOWN_ID 25,592
  HS_INTRO_ACK_STATUS_UNKNOWN_ID = 0x0001,x000125,592
  HS_INTRO_ACK_STATUS_BAD_FORMAT 26,635
  HS_INTRO_ACK_STATUS_BAD_FORMAT = 0x0002,x000226,635
  HS_INTRO_ACK_STATUS_CANT_RELAY 27,678
  HS_INTRO_ACK_STATUS_CANT_RELAY = 0x0003,x000327,678
} hs_intro_ack_status_t;28,721
typedef struct hs_intropoint_t 32,846
  unsigned int is_only_legacy 34,936
  tor_cert_t *auth_key_cert;auth_key_cert37,1032
  smartlist_t *link_specifiers;link_specifiers39,1095
} hs_intropoint_t;40,1127

hs_ntor.h,319
#define TOR_HS_NTOR_H5,115
#define HS_NTOR_KEY_EXPANSION_KDF_OUT_LEN 10,200
  uint8_t enc_key[enc_key16,425
  uint8_t mac_key[mac_key18,521
} hs_ntor_intro_cell_keys_t;19,555
  uint8_t rend_cell_auth_mac[rend_cell_auth_mac24,715
  uint8_t ntor_key_seed[ntor_key_seed27,890
} hs_ntor_rend_cell_keys_t;28,930

hs_service.h,2564
#define TOR_HS_SERVICE_H10,222
#define HS_SERVICE_DEFAULT_VERSION 27,650
#define HS_SERVICE_NEXT_UPLOAD_TIME_MIN 31,841
#define HS_SERVICE_NEXT_UPLOAD_TIME_MAX 32,891
typedef struct hs_service_intro_point_t 35,982
  hs_intropoint_t base;37,1091
  curve25519_public_key_t onion_key;41,1210
  ed25519_keypair_t auth_key_kp;45,1368
  curve25519_keypair_t enc_key_kp;48,1450
  crypto_pk_t *legacy_key;legacy_key52,1609
  uint64_t introduce2_count;55,1703
  uint64_t introduce2_max;58,1807
  time_t time_to_expire;61,1913
  uint32_t circuit_retries;67,2239
  unsigned int circuit_established 70,2328
  replaycache_t *replay_cache;replay_cache75,2555
} hs_service_intro_point_t;76,2586
typedef struct hs_service_intropoints_t 79,2671
  time_t retry_period_started;83,2913
  unsigned int num_circuits_launched;86,3016
  digest256map_t *map;map90,3160
  digestmap_t *failed_id;failed_id96,3476
} hs_service_intropoints_t;97,3502
typedef struct hs_service_descriptor_t 100,3577
  hs_descriptor_t *desc;desc103,3727
  ed25519_keypair_t signing_kp;106,3789
  ed25519_keypair_t blinded_kp;109,3891
  time_t next_upload_time;112,3992
  hs_service_intropoints_t intro_points;117,4198
  uint64_t time_period_num;120,4309
  unsigned int missing_intro_points 124,4445
  smartlist_t *previous_hsdirs;previous_hsdirs130,4751
} hs_service_descriptor_t;131,4783
typedef struct hs_service_keys_t 134,4839
  ed25519_public_key_t identity_pk;136,4910
  ed25519_secret_key_t identity_sk;138,4983
  unsigned int is_identify_key_offline 141,5124
} hs_service_keys_t;142,5168
typedef struct hs_service_config_t 147,5372
  uint32_t version;150,5497
  smartlist_t *ports;ports153,5561
  char *directory_path;directory_path157,5737
  uint64_t max_streams_per_rdv_circuit;162,5938
  unsigned int max_streams_close_circuit 166,6127
  unsigned int num_intro_points;170,6290
  unsigned int allow_unknown_ports 174,6438
  unsigned int is_single_onion 178,6624
  unsigned int dir_group_readable 182,6786
  unsigned int is_ephemeral 185,6861
} hs_service_config_t;186,6894
typedef struct hs_service_state_t 189,6939
  time_t intro_circ_retry_started_time;193,7175
  unsigned int num_intro_circ_launched;197,7346
  replaycache_t *replay_cache_rend_cookie;replay_cache_rend_cookie204,7721
  time_t next_rotation_time;208,7905
} hs_service_state_t;209,7934
typedef struct hs_service_t 212,8021
  char onion_address[onion_address215,8185
  HT_ENTRY(219,8357
} hs_service_t;237,8808
typedef HT_HEAD(hs_service_ht, hs_service_t)242,9035

keypin.h,230
#define TOR_KEYPIN_H5,119
#define KEYPIN_FOUND 21,638
#define KEYPIN_ADDED 22,661
#define KEYPIN_MISMATCH 23,684
#define KEYPIN_NOT_FOUND 24,711
typedef struct keypin_ent_st 31,829
  HT_ENTRY(32,860
} keypin_ent_t;38,1060

main.h,276
#define TOR_MAIN_H13,322
#define connection_add(20,542
#define connection_add_connecting(21,602
typedef enum watchable_events 34,1166
  READ_EVENT=36,1278
  READ_EVENT=0x02,x0236,1278
  WRITE_EVENT=37,1351
  WRITE_EVENT=0x04 x0437,1351
} watchable_events_t;38,1424

microdesc.h,63
#define TOR_MICRODESC_H13,337
#define microdesc_free(41,1626

mt_cclient.h,26
#define mt_cclient_h2,21

mt_common.h,26
#define mt_common_h9,169

mt_cpay.h,211
#define mt_cpay_h9,167
    byte pp[pp18,275
    byte pk[pk19,298
    byte sk[sk20,321
    byte addr[addr21,344
    smartlist_t* chns_open;23,372
    digestmap_t* chns_taken;24,400
} mt_cpay_t;26,430

mt_crypto.h,26
#define mt_crypto_h9,169

mt_ipay.h,210
#define mt_ipay_h7,83
    byte pp[pp19,265
    byte pk[pk20,288
    byte sk[sk21,311
    byte addr[addr22,334
    smartlist_t* chns_open;24,362
    digestmap_t* chns_taken;25,390
} mt_ipay_t;27,420

mt_lpay.h,371
#define mt_lpay_h9,163
    digestmap_t* mac_accounts;18,272
    digestmap_t* chn_accounts;19,303
    byte pp[pp21,335
    int fee;22,358
    double tax;23,371
    int epoch;24,387
    int close_window;25,402
    byte auth_addr[auth_addr27,425
    byte led_pk[led_pk28,457
    byte led_sk[led_sk29,484
    byte led_addr[led_addr30,511
} mt_lpay_t;32,543

mt_rpay.h,210
#define mt_rpay_h7,83
    byte pp[pp18,236
    byte pk[pk19,259
    byte sk[sk20,282
    byte addr[addr21,305
    smartlist_t* chns_open;23,333
    digestmap_t* chns_taken;24,361
} mt_rpay_t;26,391

mt_tokens.h,25
#define mt_tokens_h7,89

networkstatus.h,234
#define TOR_NETWORKSTATUS_H13,349
#define NSSET_FROM_CACHE 93,4726
#define NSSET_WAS_WAITING_FOR_CERTS 94,4753
#define NSSET_DONT_DOWNLOAD_CERTS 95,4791
#define NSSET_ACCEPT_OBSOLETE 96,4827
#define NSSET_REQUIRE_FLAVOR 97,4859

nodelist.h,340
#define TOR_NODELIST_H13,334
#define node_assert_ok(15,358
#define NNF_NO_WARN_UNNAMED 25,813
#define node_is_bridge(52,1928
#define node_ipv6_preferred(78,3306
#define node_get_addr_ipv4h(93,4139
  CONSENSUS_PATH_UNKNOWN 130,6167
  CONSENSUS_PATH_INTERNAL 133,6316
  CONSENSUS_PATH_EXIT 136,6484
} consensus_path_type_t;137,6510

ntmain.h,93
#define TOR_NTMAIN_H13,328
#define NT_SERVICE16,364
#define nt_service_is_stopping(24,560

onion.h,1228
#define TOR_ONION_H13,325
typedef struct server_onion_keys_t 22,642
  uint8_t my_identity[my_identity23,679
  crypto_pk_t *onion_key;onion_key24,714
  crypto_pk_t *last_onion_key;last_onion_key25,740
  di_digest256_map_t *curve25519_key_map;curve25519_key_map26,771
  curve25519_keypair_t *junk_keypair;junk_keypair27,813
} server_onion_keys_t;28,851
#define MAX_ONIONSKIN_CHALLENGE_LEN 30,875
#define MAX_ONIONSKIN_REPLY_LEN 31,915
typedef struct create_cell_t 56,2024
  uint8_t cell_type;58,2106
  uint16_t handshake_type;60,2177
  uint16_t handshake_len;62,2259
  uint8_t onionskin[onionskin64,2354
} create_cell_t;65,2398
typedef struct created_cell_t 68,2473
  uint8_t cell_type;70,2557
  uint16_t handshake_len;72,2629
  uint8_t reply[reply74,2724
} created_cell_t;75,2764
typedef struct extend_cell_t 78,2834
  uint8_t cell_type;80,2911
  tor_addr_port_t orport_ipv4;82,3000
  tor_addr_port_t orport_ipv6;85,3124
  uint8_t node_id[node_id87,3216
  ed25519_public_key_t ed_pubkey;89,3302
  create_cell_t create_cell;93,3514
} extend_cell_t;94,3543
typedef struct extended_cell_t 97,3612
  uint8_t cell_type;99,3696
  created_cell_t created_cell;101,3777
} extended_cell_t;102,3808

onion_fast.h,206
#define TOR_ONION_FAST_H13,340
#define CREATE_FAST_LEN 15,366
#define CREATED_FAST_LEN 16,401
typedef struct fast_handshake_state_t 18,442
  uint8_t state[state19,482
} fast_handshake_state_t;20,511

onion_ntor.h,376
#define TOR_ONION_NTOR_H5,123
typedef struct ntor_handshake_state_t ntor_handshake_state_t;13,323
#define NTOR_ONIONSKIN_LEN 16,457
#define NTOR_REPLY_LEN 18,550
struct ntor_handshake_state_t 45,1762
  uint8_t router_id[router_id47,1851
  curve25519_public_key_t pubkey_B;49,1935
  curve25519_secret_key_t seckey_x;54,2043
  curve25519_public_key_t pubkey_X;55,2079

onion_tap.h,115
#define TOR_ONION_TAP_H13,337
#define TAP_ONIONSKIN_CHALLENGE_LEN 15,362
#define TAP_ONIONSKIN_REPLY_LEN 18,524

or.h,96182
#define TOR_OR_H13,345
#define SIGHUP 89,1765
#define SIGINT 92,1804
#define SIGUSR1 95,1844
#define SIGUSR2 98,1886
#define SIGTERM 101,1928
#define SIGNEWNYM 105,2055
#define SIGCLEARDNSCACHE 106,2077
#define SIGHEARTBEAT 107,2106
#define cell_t 112,2287
#define NON_ANONYMOUS_MODE_ENABLED 116,2348
#define DOWNCAST(120,2470
#define MAX_NICKNAME_LEN 123,2586
#define MAX_HEX_NICKNAME_LEN 126,2712
#define MAX_VERBOSE_NICKNAME_LEN 129,2874
#define MAX_BUF_SIZE 132,2998
#define MAX_DIR_DL_SIZE 134,3123
#define MAX_HEADERS_SIZE 138,3273
#define MAX_DIR_UL_SIZE 141,3398
#define MAX_DESCRIPTOR_UPLOAD_SIZE 146,3653
#define MAX_EXTRAINFO_UPLOAD_SIZE 149,3757
#define MIN_ONION_KEY_LIFETIME_DAYS 152,3848
#define MAX_ONION_KEY_LIFETIME_DAYS 155,3939
#define DEFAULT_ONION_KEY_LIFETIME_DAYS 158,4031
#define MIN_ONION_KEY_GRACE_PERIOD_DAYS 163,4277
#define DEFAULT_ONION_KEY_GRACE_PERIOD_DAYS 166,4390
#define ONION_KEY_CONSENSUS_CHECK_INTERVAL 170,4543
#define MAX_SSL_KEY_LIFETIME_INTERNAL 173,4639
#define ROUTER_MAX_AGE 177,4787
#define ROUTER_MAX_AGE_TO_PUBLISH 180,4925
#define OLD_ROUTER_DESC_MAX_AGE 182,5044
  CIRC_ID_TYPE_LOWER=186,5175
  CIRC_ID_TYPE_HIGHER=187,5229
  CIRC_ID_TYPE_NEITHER=190,5412
} circ_id_type_t;191,5437
#define circ_id_type_bitfield_t 192,5455
#define CONN_TYPE_MIN_ 194,5512
#define CONN_TYPE_OR_LISTENER 196,5591
#define CONN_TYPE_OR 199,5750
#define CONN_TYPE_EXIT 201,5845
#define CONN_TYPE_AP_LISTENER 203,5927
#define CONN_TYPE_AP 206,6040
#define CONN_TYPE_DIR_LISTENER 208,6143
#define CONN_TYPE_DIR 210,6234
#define CONN_TYPE_CONTROL_LISTENER 213,6354
#define CONN_TYPE_CONTROL 215,6449
#define CONN_TYPE_AP_TRANS_LISTENER 218,6574
#define CONN_TYPE_AP_NATD_LISTENER 221,6698
#define CONN_TYPE_AP_DNS_LISTENER 223,6788
#define CONN_TYPE_EXT_OR 226,6880
#define CONN_TYPE_EXT_OR_LISTENER 228,6975
#define CONN_TYPE_AP_HTTP_CONNECT_LISTENER 230,7083
#define CONN_TYPE_MAX_ 232,7130
#define PROXY_NONE 237,7276
#define PROXY_CONNECT 238,7297
#define PROXY_SOCKS4 239,7321
#define PROXY_SOCKS5 240,7344
#define PROXY_PLUGGABLE 246,7610
#define PROXY_INFANT 250,7735
#define PROXY_HTTPS_WANT_CONNECT_OK 252,7821
#define PROXY_SOCKS4_WANT_CONNECT_OK 254,7923
#define PROXY_SOCKS5_WANT_AUTH_METHOD_NONE 257,8046
#define PROXY_SOCKS5_WANT_AUTH_METHOD_RFC1929 260,8186
#define PROXY_SOCKS5_WANT_AUTH_RFC1929_OK 262,8296
#define PROXY_SOCKS5_WANT_CONNECT_OK 264,8406
#define PROXY_CONNECTED 266,8498
#define CONN_IS_EDGE(269,8573
#define LISTENER_STATE_READY 273,8703
#define OR_CONN_STATE_MIN_ 275,8735
#define OR_CONN_STATE_CONNECTING 277,8837
#define OR_CONN_STATE_PROXY_HANDSHAKING 279,8952
#define OR_CONN_STATE_TLS_HANDSHAKING 282,9073
#define OR_CONN_STATE_TLS_CLIENT_RENEGOTIATING 285,9240
#define OR_CONN_STATE_TLS_SERVER_RENEGOTIATING 289,9461
#define OR_CONN_STATE_OR_HANDSHAKING_V2 293,9690
#define OR_CONN_STATE_OR_HANDSHAKING_V3 297,9908
#define OR_CONN_STATE_OPEN 299,10014
#define OR_CONN_STATE_MAX_ 300,10043
#define EXT_OR_CONN_STATE_MIN_ 304,10177
#define EXT_OR_CONN_STATE_AUTH_WAIT_AUTH_TYPE 307,10315
#define EXT_OR_CONN_STATE_AUTH_WAIT_CLIENT_NONCE 309,10434
#define EXT_OR_CONN_STATE_AUTH_WAIT_CLIENT_HASH 311,10555
#define EXT_OR_CONN_STATE_AUTH_MAX 312,10605
#define EXT_OR_CONN_STATE_OPEN 315,10727
#define EXT_OR_CONN_STATE_FLUSHING 318,10866
#define EXT_OR_CONN_STATE_MAX_ 319,10903
#define EXIT_CONN_STATE_MIN_ 321,10937
#define EXIT_CONN_STATE_RESOLVING 323,11041
#define EXIT_CONN_STATE_CONNECTING 325,11147
#define EXIT_CONN_STATE_OPEN 327,11254
#define EXIT_CONN_STATE_RESOLVEFAILED 329,11345
#define EXIT_CONN_STATE_MAX_ 330,11385
#define AP_CONN_STATE_MIN_ 333,11488
#define AP_CONN_STATE_SOCKS_WAIT 335,11581
#define AP_CONN_STATE_RENDDESC_WAIT 338,11717
#define AP_CONN_STATE_CONTROLLER_WAIT 341,11849
#define AP_CONN_STATE_CIRCUIT_WAIT 343,11959
#define AP_CONN_STATE_CONNECT_WAIT 345,12068
#define AP_CONN_STATE_RESOLVE_WAIT 347,12178
#define AP_CONN_STATE_OPEN 349,12280
#define AP_CONN_STATE_NATD_WAIT 352,12395
#define AP_CONN_STATE_HTTP_CONNECT_WAIT 354,12500
#define AP_CONN_STATE_MAX_ 355,12543
#define AP_CONN_STATE_IS_UNATTACHED(359,12705
#define DIR_CONN_STATE_MIN_ 362,12819
#define DIR_CONN_STATE_CONNECTING 364,12921
#define DIR_CONN_STATE_CLIENT_SENDING 366,13028
#define DIR_CONN_STATE_CLIENT_READING 368,13140
#define DIR_CONN_STATE_CLIENT_FINISHED 370,13249
#define DIR_CONN_STATE_SERVER_COMMAND_WAIT 372,13365
#define DIR_CONN_STATE_SERVER_WRITING 374,13482
#define DIR_CONN_STATE_MAX_ 375,13522
#define DIR_CONN_IS_SERVER(379,13651
#define CONTROL_CONN_STATE_MIN_ 381,13725
#define CONTROL_CONN_STATE_OPEN 383,13839
#define CONTROL_CONN_STATE_NEEDAUTH 386,13965
#define CONTROL_CONN_STATE_MAX_ 387,14003
#define DIR_PURPOSE_MIN_ 389,14038
#define DIR_PURPOSE_HAS_FETCHED_RENDDESC_V2 392,14163
#define DIR_PURPOSE_FETCH_SERVERDESC 395,14296
#define DIR_PURPOSE_FETCH_EXTRAINFO 398,14424
#define DIR_PURPOSE_UPLOAD_DIR 400,14533
#define DIR_PURPOSE_UPLOAD_VOTE 402,14641
#define DIR_PURPOSE_UPLOAD_SIGNATURES 404,14751
#define DIR_PURPOSE_FETCH_STATUS_VOTE 407,14883
#define DIR_PURPOSE_FETCH_DETACHED_SIGNATURES 410,15028
#define DIR_PURPOSE_FETCH_CONSENSUS 413,15162
#define DIR_PURPOSE_FETCH_CERTIFICATE 416,15302
#define DIR_PURPOSE_SERVER 419,15397
#define DIR_PURPOSE_UPLOAD_RENDDESC_V2 422,15523
#define DIR_PURPOSE_FETCH_RENDDESC_V2 425,15663
#define DIR_PURPOSE_FETCH_MICRODESC 427,15775
#define DIR_PURPOSE_UPLOAD_HSDESC 429,15889
#define DIR_PURPOSE_FETCH_HSDESC 431,16000
#define DIR_PURPOSE_HAS_FETCHED_HSDESC 434,16135
#define DIR_PURPOSE_MAX_ 435,16177
#define DIR_PURPOSE_IS_UPLOAD(439,16302
#define EXIT_PURPOSE_MIN_ 446,16588
#define EXIT_PURPOSE_CONNECT 448,16673
#define EXIT_PURPOSE_RESOLVE 450,16778
#define EXIT_PURPOSE_MAX_ 451,16809
#define CIRCUIT_STATE_BUILDING 457,17017
#define CIRCUIT_STATE_ONIONSKIN_PENDING 459,17106
#define CIRCUIT_STATE_CHAN_WAIT 462,17238
#define CIRCUIT_STATE_GUARD_WAIT 466,17410
#define CIRCUIT_STATE_OPEN 468,17520
#define CIRCUIT_PURPOSE_MIN_ 470,17550
#define CIRCUIT_PURPOSE_OR_MIN_ 473,17628
#define CIRCUIT_PURPOSE_OR 475,17717
#define CIRCUIT_PURPOSE_INTRO_POINT 478,17838
#define CIRCUIT_PURPOSE_REND_POINT_WAITING 481,17958
#define CIRCUIT_PURPOSE_REND_ESTABLISHED 483,18075
#define CIRCUIT_PURPOSE_OR_MAX_ 484,18118
#define CIRCUIT_PURPOSE_C_GENERAL 508,19295
#define CIRCUIT_PURPOSE_C_INTRODUCING 510,19409
#define CIRCUIT_PURPOSE_C_INTRODUCE_ACK_WAIT 513,19556
#define CIRCUIT_PURPOSE_C_INTRODUCE_ACKED 516,19686
#define CIRCUIT_PURPOSE_C_ESTABLISH_REND 518,19798
#define CIRCUIT_PURPOSE_C_REND_READY 520,19917
#define CIRCUIT_PURPOSE_C_REND_READY_INTRO_ACKED 523,20069
#define CIRCUIT_PURPOSE_C_REND_JOINED 525,20196
#define CIRCUIT_PURPOSE_C_MEASURE_TIMEOUT 527,20297
#define CIRCUIT_PURPOSE_C_MAX_ 528,20342
#define CIRCUIT_PURPOSE_S_ESTABLISH_INTRO 531,20466
#define CIRCUIT_PURPOSE_S_INTRO 534,20606
#define CIRCUIT_PURPOSE_S_CONNECT_REND 537,20730
#define CIRCUIT_PURPOSE_S_REND_JOINED 540,20859
#define CIRCUIT_PURPOSE_TESTING 542,20967
#define CIRCUIT_PURPOSE_CONTROLLER 544,21067
#define CIRCUIT_PURPOSE_PATH_BIAS_TESTING 546,21160
#define CIRCUIT_PURPOSE_C_INTERMEDIARY 548,21206
#define CIRCUIT_PURPOSE_C_LEDGER 552,21391
#define CIRCUIT_PURPOSE_R_INTERMEDIARY 554,21428
#define CIRCUIT_PURPOSE_MAX_ 556,21471
#define CIRCUIT_PURPOSE_UNKNOWN 559,21625
#define CIRCUIT_PURPOSE_IS_ORIGIN(563,21757
#define CIRCUIT_PURPOSE_IS_CLIENT(566,21969
#define CIRCUIT_IS_ORIGIN(570,22153
#define CIRCUIT_PURPOSE_IS_ESTABLISHED_REND(573,22314
#define CIRCUIT_IS_ORCIRC(577,22513
#define MIN_CIRCUITS_HANDLING_STREAM 581,22683
#define RELAY_COMMAND_BEGIN 585,22846
#define RELAY_COMMAND_DATA 586,22876
#define RELAY_COMMAND_END 587,22905
#define RELAY_COMMAND_CONNECTED 588,22933
#define RELAY_COMMAND_SENDME 589,22967
#define RELAY_COMMAND_EXTEND 590,22998
#define RELAY_COMMAND_EXTENDED 591,23029
#define RELAY_COMMAND_TRUNCATE 592,23062
#define RELAY_COMMAND_TRUNCATED 593,23095
#define RELAY_COMMAND_DROP 594,23129
#define RELAY_COMMAND_RESOLVE 595,23159
#define RELAY_COMMAND_RESOLVED 596,23192
#define RELAY_COMMAND_BEGIN_DIR 597,23226
#define RELAY_COMMAND_EXTEND2 598,23261
#define RELAY_COMMAND_EXTENDED2 599,23294
#define RELAY_COMMAND_ESTABLISH_INTRO 601,23330
#define RELAY_COMMAND_ESTABLISH_RENDEZVOUS 602,23371
#define RELAY_COMMAND_INTRODUCE1 603,23417
#define RELAY_COMMAND_INTRODUCE2 604,23453
#define RELAY_COMMAND_RENDEZVOUS1 605,23489
#define RELAY_COMMAND_RENDEZVOUS2 606,23526
#define RELAY_COMMAND_INTRO_ESTABLISHED 607,23563
#define RELAY_COMMAND_RENDEZVOUS_ESTABLISHED 608,23606
#define RELAY_COMMAND_INTRODUCE_ACK 609,23654
#define END_OR_CONN_REASON_DONE 612,23740
#define END_OR_CONN_REASON_REFUSED 613,23784
#define END_OR_CONN_REASON_OR_IDENTITY 614,23853
#define END_OR_CONN_REASON_CONNRESET 615,23897
#define END_OR_CONN_REASON_TIMEOUT 616,23972
#define END_OR_CONN_REASON_NO_ROUTE 617,24016
#define END_OR_CONN_REASON_IO_ERROR 618,24087
#define END_OR_CONN_REASON_RESOURCE_LIMIT 619,24154
#define END_OR_CONN_REASON_PT_MISSING 620,24226
#define END_OR_CONN_REASON_MISC 621,24303
#define END_STREAM_REASON_MISC 625,24481
#define END_STREAM_REASON_RESOLVEFAILED 626,24514
#define END_STREAM_REASON_CONNECTREFUSED 627,24556
#define END_STREAM_REASON_EXITPOLICY 628,24599
#define END_STREAM_REASON_DESTROY 629,24638
#define END_STREAM_REASON_DONE 630,24674
#define END_STREAM_REASON_TIMEOUT 631,24707
#define END_STREAM_REASON_NOROUTE 632,24743
#define END_STREAM_REASON_HIBERNATING 633,24779
#define END_STREAM_REASON_INTERNAL 634,24819
#define END_STREAM_REASON_RESOURCELIMIT 635,24857
#define END_STREAM_REASON_CONNRESET 636,24900
#define END_STREAM_REASON_TORPROTOCOL 637,24939
#define END_STREAM_REASON_NOTDIRECTORY 638,24980
#define END_STREAM_REASON_ENTRYPOLICY 639,25022
#define END_STREAM_REASON_CANT_ATTACH 648,25476
#define END_STREAM_REASON_NET_UNREACHABLE 651,25623
#define END_STREAM_REASON_SOCKSPROTOCOL 654,25788
#define END_STREAM_REASON_CANT_FETCH_ORIG_DEST 657,25937
#define END_STREAM_REASON_INVALID_NATD_DEST 660,26104
#define END_STREAM_REASON_PRIVATE_ADDR 663,26289
#define END_STREAM_REASON_HTTPPROTOCOL 667,26439
#define END_STREAM_REASON_MASK 670,26551
#define END_STREAM_REASON_FLAG_REMOTE 674,26713
#define END_STREAM_REASON_FLAG_ALREADY_SENT_CLOSED 677,26886
#define END_STREAM_REASON_FLAG_ALREADY_SOCKS_REPLIED 681,27110
#define REMAP_STREAM_SOURCE_CACHE 685,27253
#define REMAP_STREAM_SOURCE_EXIT 688,27381
#define RESOLVED_TYPE_HOSTNAME 691,27491
#define RESOLVED_TYPE_IPV4 692,27524
#define RESOLVED_TYPE_IPV6 693,27553
#define RESOLVED_TYPE_ERROR_TRANSIENT 694,27582
#define RESOLVED_TYPE_ERROR 695,27625
#define END_CIRC_REASON_IP_NOW_REDUNDANT 701,27858
#define END_CIRC_REASON_MEASUREMENT_EXPIRED 705,27991
#define END_CIRC_REASON_NOPATH 708,28089
#define END_CIRC_AT_ORIGIN 710,28193
#define END_CIRC_REASON_MIN_ 714,28346
#define END_CIRC_REASON_NONE 715,28388
#define END_CIRC_REASON_TORPROTOCOL 716,28430
#define END_CIRC_REASON_INTERNAL 717,28472
#define END_CIRC_REASON_REQUESTED 718,28514
#define END_CIRC_REASON_HIBERNATING 719,28556
#define END_CIRC_REASON_RESOURCELIMIT 720,28598
#define END_CIRC_REASON_CONNECTFAILED 721,28640
#define END_CIRC_REASON_OR_IDENTITY 722,28682
#define END_CIRC_REASON_CHANNEL_CLOSED 723,28724
#define END_CIRC_REASON_FINISHED 724,28766
#define END_CIRC_REASON_TIMEOUT 725,28808
#define END_CIRC_REASON_DESTROYED 726,28851
#define END_CIRC_REASON_NOSUCHSERVICE 727,28894
#define END_CIRC_REASON_MAX_ 728,28937
#define END_CIRC_REASON_FLAG_REMOTE 733,29170
#define REND_SERVICE_ID_LEN_BASE32 736,29262
#define REND_SERVICE_ADDRESS_LEN 739,29352
#define REND_SERVICE_ID_LEN 742,29452
#define REND_TIME_PERIOD_V2_DESC_VALIDITY 745,29544
#define REND_TIME_PERIOD_OVERLAPPING_V2_DESCS 749,29690
#define REND_NUMBER_OF_NON_CONSECUTIVE_REPLICAS 753,29849
#define REND_NUMBER_OF_CONSECUTIVE_REPLICAS 756,29956
#define REND_DESC_ID_V2_LEN_BASE32 759,30067
#define REND_SECRET_ID_PART_LEN_BASE32 763,30216
#define REND_INTRO_POINT_ID_LEN_BASE32 767,30359
#define REND_DESC_COOKIE_LEN 771,30517
#define REND_DESC_COOKIE_LEN_BASE64 775,30691
#define REND_BASIC_AUTH_CLIENT_ID_LEN 779,30849
#define REND_BASIC_AUTH_CLIENT_MULTIPLE 784,31048
#define REND_BASIC_AUTH_CLIENT_ENTRY_LEN 788,31230
#define REND_DESC_MAX_SIZE 792,31419
#define REND_LEGAL_CLIENTNAME_CHARACTERS 796,31543
#define REND_CLIENTNAME_MAX_LEN 800,31728
#define REND_COOKIE_LEN 804,31864
typedef enum rend_auth_type_t 807,31965
  REND_NO_AUTH 808,31997
  REND_BASIC_AUTH 809,32022
  REND_STEALTH_AUTH 810,32047
} rend_auth_type_t;811,32072
typedef struct rend_service_authorization_t 814,32165
  uint8_t descriptor_cookie[descriptor_cookie815,32211
  char onion_address[onion_address816,32262
  rend_auth_type_t auth_type;817,32312
} rend_service_authorization_t;818,32342
typedef struct rend_data_t 823,32543
  uint32_t version;825,32633
  smartlist_t *hsdirs_fp;hsdirs_fp829,32809
  char rend_cookie[rend_cookie832,32897
  int nr_streams;835,33003
} rend_data_t;836,33021
typedef struct rend_data_v2_t 838,33037
  rend_data_t base_;840,33099
  char onion_address[onion_address843,33194
  char descriptor_id[descriptor_id848,33469
  char descriptor_cookie[descriptor_cookie851,33609
  rend_auth_type_t auth_type;854,33728
  char desc_id_fetch[desc_id_fetch859,33927
  char rend_pk_digest[rend_pk_digest862,34022
} rend_data_v2_t;863,34057
rend_data_v2_t *TO_REND_DATA_V2(TO_REND_DATA_V2867,34159
#define REND_REPLAY_TIME_INTERVAL 884,34706
  CELL_DIRECTION_IN=888,34829
  CELL_DIRECTION_OUT=889,34899
} cell_direction_t;890,34972
#define CIRCWINDOW_START 894,35118
#define CIRCWINDOW_START_MIN 895,35148
#define CIRCWINDOW_START_MAX 896,35181
#define CIRCWINDOW_INCREMENT 898,35289
#define STREAMWINDOW_START 901,35444
#define STREAMWINDOW_INCREMENT 903,35547
#define ORCIRC_MAX_MIDDLE_CELLS 912,35963
#define ORCIRC_MAX_MIDDLE_KILL_THRESH 916,36128
#define CELL_PADDING 919,36238
#define CELL_CREATE 920,36261
#define CELL_CREATED 921,36283
#define CELL_RELAY 922,36306
#define CELL_DESTROY 923,36327
#define CELL_CREATE_FAST 924,36350
#define CELL_CREATED_FAST 925,36377
#define CELL_VERSIONS 926,36405
#define CELL_NETINFO 927,36429
#define CELL_RELAY_EARLY 928,36452
#define CELL_CREATE2 929,36479
#define CELL_CREATED2 930,36503
#define CELL_PADDING_NEGOTIATE 931,36528
#define CELL_VPADDING 933,36563
#define CELL_CERTS 934,36589
#define CELL_AUTH_CHALLENGE 935,36612
#define CELL_AUTHENTICATE 936,36644
#define CELL_AUTHORIZE 937,36674
#define CELL_COMMAND_MAX_ 938,36701
#define TIMEOUT_UNTIL_UNREACHABILITY_COMPLAINT 941,36801
#define LEGAL_NICKNAME_CHARACTERS 944,36896
#define DEFAULT_CLIENT_NICKNAME 949,37124
#define UNNAMED_ROUTER_NICKNAME 952,37227
#define SOCKS4_NETWORK_LEN 955,37313
#define CELL_PAYLOAD_SIZE 968,37693
#define CELL_MAX_NETWORK_SIZE 971,37809
#define VAR_CELL_MAX_HEADER_SIZE 974,37905
static inline int get_cell_network_size(977,37994
static inline int get_var_cell_header_size(982,38189
static inline int get_circ_id_size(988,38389
#define RELAY_HEADER_SIZE 995,38568
#define RELAY_PAYLOAD_SIZE 997,38675
typedef uint32_t circid_t;1000,38789
typedef uint16_t streamid_t;1002,38856
typedef struct channel_s channel_t;1006,38945
typedef struct channel_listener_s channel_listener_t;1010,39059
  CHANNEL_STATE_CLOSED 1023,39347
  CHANNEL_STATE_OPENING,1034,39623
  CHANNEL_STATE_OPEN,1046,39931
  CHANNEL_STATE_MAINT,1058,40284
  CHANNEL_STATE_CLOSING,1069,40550
  CHANNEL_STATE_ERROR,1081,40849
  CHANNEL_STATE_LAST1085,40924
} channel_state_t;1086,40945
  CHANNEL_LISTENER_STATE_CLOSED 1099,41245
  CHANNEL_LISTENER_STATE_LISTENING,1110,41562
  CHANNEL_LISTENER_STATE_CLOSING,1120,41853
  CHANNEL_LISTENER_STATE_ERROR,1130,42115
  CHANNEL_LISTENER_STATE_LAST1134,42199
} channel_listener_state_t;1135,42229
typedef struct channel_tls_s channel_tls_t;1139,42283
typedef struct circuitmux_s circuitmux_t;1143,42396
typedef struct cell_t 1147,42523
  circid_t circ_id;1148,42547
  uint8_t command;1149,42608
  uint8_t payload[payload1151,42727
} cell_t;1152,42784
typedef struct var_cell_t 1155,42845
  uint8_t command;1157,42920
  circid_t circ_id;1159,42980
  uint16_t payload_len;1161,43059
  uint8_t payload[payload1163,43113
} var_cell_t;1164,43155
typedef struct ext_or_cmd_t 1167,43211
  uint16_t cmd;1168,43241
  uint16_t len;1169,43277
  char body[body1170,43312
} ext_or_cmd_t;1171,43368
typedef struct packed_cell_t 1174,43437
  TOR_SIMPLEQ_ENTRY(1176,43511
} packed_cell_t;1180,43777
typedef struct cell_queue_t 1184,43889
  TOR_SIMPLEQ_HEAD(1186,43956
} cell_queue_t;1188,44061
  uint8_t command;1192,44137
  uint16_t recognized;1193,44194
  streamid_t stream_id;1194,44262
  char integrity[integrity1195,44337
  uint16_t length;1196,44406
} relay_header_t;1197,44463
typedef struct socks_request_t socks_request_t;1199,44482
typedef struct entry_port_cfg_t 1201,44531
  uint8_t isolation_flags;1203,44623
  int session_group;1204,44687
  unsigned int socks_prefer_no_auth 1210,44920
  unsigned int socks_iso_keep_alive 1212,45034
  unsigned int ipv4_traffic 1215,45108
  unsigned int ipv6_traffic 1216,45141
  unsigned int prefer_ipv6 1217,45174
  unsigned int dns_request 1218,45206
  unsigned int onion_traffic 1219,45238
  unsigned int cache_ipv4_answers 1225,45389
  unsigned int cache_ipv6_answers 1226,45428
  unsigned int use_cached_ipv4_answers 1232,45598
  unsigned int use_cached_ipv6_answers 1233,45642
  unsigned int prefer_ipv6_virtaddr 1237,45800
} entry_port_cfg_t;1239,45842
typedef struct server_port_cfg_t 1241,45863
  unsigned int no_advertise 1243,45940
  unsigned int no_listen 1244,45973
  unsigned int all_addrs 1245,46003
  unsigned int bind_ipv4_only 1246,46033
  unsigned int bind_ipv6_only 1247,46068
} server_port_cfg_t;1248,46103
#define BASE_CONNECTION_MAGIC 1252,46253
#define OR_CONNECTION_MAGIC 1253,46295
#define EDGE_CONNECTION_MAGIC 1254,46335
#define ENTRY_CONNECTION_MAGIC 1255,46377
#define DIR_CONNECTION_MAGIC 1256,46419
#define CONTROL_CONNECTION_MAGIC 1257,46460
#define LISTENER_CONNECTION_MAGIC 1258,46505
typedef struct connection_t 1280,47392
  uint32_t magic;1281,47422
  uint8_t state;1284,47530
  unsigned int type:type1285,47589
  unsigned int purpose:purpose1286,47653
  unsigned int read_blocked_on_bw:read_blocked_on_bw1291,47884
  unsigned int write_blocked_on_bw:write_blocked_on_bw1293,48038
  unsigned int hold_open_until_flushed:hold_open_until_flushed1296,48229
  unsigned int inbuf_reached_eof:inbuf_reached_eof1299,48443
  unsigned int in_flushed_some:in_flushed_some1303,48697
  unsigned int in_connection_handle_write:in_connection_handle_write1306,48816
  unsigned int linked:linked1310,48897
  unsigned int reading_from_linked_conn:reading_from_linked_conn1313,49064
  unsigned int writing_to_linked_conn:writing_to_linked_conn1315,49168
  unsigned int active_on_link:active_on_link1318,49337
  unsigned int linked_conn_is_closed:linked_conn_is_closed1321,49462
  unsigned int proxy_state:proxy_state1324,49583
  tor_socket_t s;1328,49714
  int conn_array_index;1329,49732
  struct event *read_event;read_event1331,49805
  struct event *write_event;write_event1332,49867
  struct buf_t *inbuf;inbuf1333,49930
  struct buf_t *outbuf;outbuf1334,50008
  size_t outbuf_flushlen;1336,50118
  time_t timestamp_lastread;1338,50235
  time_t timestamp_lastwritten;1340,50356
  time_t timestamp_created;1343,50485
  int socket_family;1345,50558
  tor_addr_t addr;1347,50713
  uint16_t port;1351,50963
  uint16_t marked_for_close;1354,51193
  const char *marked_for_close_file;marked_for_close_file1358,51459
  char *address;address1360,51599
  struct connection_t *linked_conn;linked_conn1367,52101
  uint64_t global_identifier;1370,52207
  uint32_t n_read_conn_bw;1374,52373
  uint32_t n_written_conn_bw;1378,52539
} connection_t;1379,52569
typedef struct listener_connection_t 1382,52646
  connection_t base_;1383,52685
  struct evdns_server_port *dns_server_port;dns_server_port1387,52860
  entry_port_cfg_t entry_cfg;1389,52906
} listener_connection_t;1391,52937
#define OR_AUTH_CHALLENGE_LEN 1394,53031
#define OR_CERT_TYPE_TLS_LINK 1406,53416
#define OR_CERT_TYPE_ID_1024 1409,53538
#define OR_CERT_TYPE_AUTH_1024 1413,53754
#define OR_CERT_TYPE_RSA_ED_CROSSCERT 1415,53800
#define AUTHTYPE_RSA_SHA256_TLSSECRET 1424,54180
#define AUTHTYPE_RSA_SHA256_RFC5705 1432,54518
#define AUTHTYPE_ED25519_SHA256_RFC5705 1435,54649
#define V3_AUTH_FIXED_PART_LEN 1447,55216
#define V3_AUTH_BODY_LEN 1450,55344
typedef struct or_handshake_certs_t 1454,55486
  int started_here;1456,55573
  tor_x509_cert_t *auth_cert;auth_cert1459,55720
  tor_x509_cert_t *link_cert;link_cert1462,55879
  tor_x509_cert_t *id_cert;id_cert1465,56001
  struct tor_cert_st *ed_id_sign;ed_id_sign1467,56101
  struct tor_cert_st *ed_sign_link;ed_sign_link1470,56247
  struct tor_cert_st *ed_sign_auth;ed_sign_auth1473,56413
  uint8_t *ed_rsa_crosscert;ed_rsa_crosscert1475,56523
  size_t ed_rsa_crosscert_len;1477,56608
} or_handshake_certs_t;1478,56639
typedef struct or_handshake_state_t 1483,56816
  time_t sent_versions_at;1486,56989
  unsigned int started_here 1488,57064
  unsigned int received_versions 1490,57163
  unsigned int received_auth_challenge 1492,57273
  unsigned int received_certs_cell 1494,57380
  unsigned int received_authenticate 1496,57490
  unsigned int authenticated 1499,57604
  unsigned int authenticated_rsa 1500,57638
  unsigned int authenticated_ed25519 1501,57676
  unsigned int sent_netinfo 1504,57764
  struct tor_cert_st *own_link_cert;own_link_cert1510,58055
  unsigned int digest_sent_data 1521,58502
  unsigned int digest_received_data 1522,58539
  uint8_t authenticated_rsa_peer_id[authenticated_rsa_peer_id1527,58698
  ed25519_public_key_t authenticated_ed25519_peer_id;1530,58862
  crypto_digest_t *digest_sent;digest_sent1537,59075
  crypto_digest_t *digest_received;digest_received1538,59107
  or_handshake_certs_t *certs;certs1544,59299
} or_handshake_state_t;1545,59330
#define EXT_OR_CONN_ID_LEN 1548,59411
#define OR_CONN_HIGHWATER 1556,59706
#define OR_CONN_LOWWATER 1560,59849
typedef struct or_connection_t 1564,59986
  connection_t base_;1565,60019
  char identity_digest[identity_digest1569,60184
  char *ext_or_conn_id;ext_or_conn_id1572,60269
  char *ext_or_auth_correct_client_hash;ext_or_auth_correct_client_hash1578,60575
  char *ext_or_transport;ext_or_transport1582,60789
  char *nickname;nickname1584,60816
  tor_tls_t *tls;tls1586,60882
  int tls_error;1587,60930
  channel_tls_t *chan;chan1592,61130
  tor_addr_t real_addr;1594,61154
  unsigned int is_canonical:is_canonical1604,61823
  unsigned int is_outgoing:is_outgoing1607,61905
  unsigned int proxy_type:proxy_type1608,61935
  unsigned int wide_circ_ids:wide_circ_ids1609,62005
  unsigned int have_noted_bootstrap_problem:have_noted_bootstrap_problem1612,62151
  uint16_t link_proto;1614,62199
  uint16_t idle_timeout;1616,62321
  or_handshake_state_t *handshake_state;handshake_state1620,62593
  time_t timestamp_lastempty;1623,62753
  int bandwidthrate;1626,62898
  int bandwidthburst;1627,62973
  int read_bucket;1628,63051
  int write_bucket;1631,63247
  uint32_t read_emptied_time;1635,63437
  uint32_t write_emptied_time;1638,63579
  uint64_t bytes_xmitted,1644,63775
  uint64_t bytes_xmitted, bytes_xmitted_by_tls;1644,63775
} or_connection_t;1645,63823
typedef struct edge_connection_t 1649,63952
  connection_t base_;1650,63987
  struct edge_connection_t *next_stream;next_stream1652,64010
  int package_window;1654,64150
  int deliver_window;1656,64260
  struct circuit_t *on_circuit;on_circuit1658,64332
  struct crypt_path_t *cpath_layer;cpath_layer1663,64600
  rend_data_t *rend_data;rend_data1666,64732
  struct hs_ident_edge_conn_t *hs_ident;hs_ident1671,64975
  uint32_t address_ttl;1673,65017
  uint32_t begincell_flags;1675,65152
  streamid_t stream_id;1678,65280
  uint16_t end_reason;1682,65477
  uint32_t n_read;1685,65578
  uint32_t n_written;1688,65678
  unsigned int is_dns_request:is_dns_request1691,65762
  unsigned int is_reverse_dns_lookup:is_reverse_dns_lookup1693,65867
  unsigned int edge_has_sent_end:edge_has_sent_end1695,65908
  unsigned int edge_blocked_on_circ:edge_blocked_on_circ1701,66253
  uint64_t dirreq_id;1706,66519
} edge_connection_t;1707,66541
typedef struct entry_connection_t 1711,66719
  edge_connection_t edge_;1712,66755
  char *chosen_exit_name;chosen_exit_name1717,66994
  socks_request_t *socks_request;socks_request1719,67021
  entry_port_cfg_t entry_cfg;1723,67191
  unsigned nym_epoch;1725,67293
  char *original_dest_address;original_dest_address1728,67387
  uint8_t num_socks_retries;1737,67858
  struct buf_t *pending_optimistic_data;pending_optimistic_data1742,68050
  struct buf_t *sending_optimistic_data;sending_optimistic_data1746,68250
  struct evdns_server_request *dns_server_request;dns_server_request1750,68416
#define DEBUGGING_176591752,68468
  uint16_t marked_pending_circ_line;1755,68516
  const char *marked_pending_circ_file;marked_pending_circ_file1756,68553
#define NUM_CIRCUITS_LAUNCHED_THRESHOLD 1759,68601
  unsigned int num_circuits_launched:num_circuits_launched1764,68920
  unsigned int want_onehop:want_onehop1768,69051
  unsigned int use_begindir:use_begindir1771,69235
  unsigned int chosen_exit_optional:chosen_exit_optional1775,69369
  unsigned int chosen_exit_retries:chosen_exit_retries1780,69673
  unsigned int is_transparent_ap:is_transparent_ap1784,69808
  unsigned int may_use_optimistic_data 1790,70065
  unsigned int is_socks_socket:is_socks_socket1793,70156
} entry_connection_t;1794,70190
typedef struct dir_connection_t 1798,70349
  connection_t base_;1799,70383
  char *requested_resource;requested_resource1807,70727
  unsigned int dirconn_direct:dirconn_direct1808,70755
  uint8_t router_purpose;1812,70923
  smartlist_t *spool;spool1816,71054
  tor_compress_state_t *compress_state;compress_state1818,71155
  rend_data_t *rend_data;rend_data1821,71250
  struct hs_ident_dir_conn_t *hs_ident;hs_ident1826,71458
  struct circuit_guard_state_t *guard_state;guard_state1830,71616
  char identity_digest[identity_digest1832,71662
  uint64_t dirreq_id;1838,72032
  uint32_t data_cells_received;1842,72127
  uint32_t data_cells_sent;1845,72202
} dir_connection_t;1847,72271
typedef struct control_connection_t 1850,72358
  connection_t base_;1851,72396
  uint64_t event_mask;1853,72419
  unsigned int have_sent_protocolinfo:have_sent_protocolinfo1858,72674
  unsigned int is_owning_control_connection:is_owning_control_connection1861,72798
  smartlist_t *ephemeral_onion_services;ephemeral_onion_services1864,72918
  char *safecookie_client_hash;safecookie_client_hash1870,73187
  uint32_t incoming_cmd_len;1873,73272
  uint32_t incoming_cmd_cur_len;1875,73360
  char *incoming_cmd;incoming_cmd1878,73502
} control_connection_t;1879,73524
#define TO_CONN(1882,73611
#define ENTRY_TO_EDGE_CONN(1885,73722
#define ENTRY_TO_CONN(1887,73838
static inline or_connection_t *TO_OR_CONN(TO_OR_CONN1911,74959
static inline dir_connection_t *TO_DIR_CONN(TO_DIR_CONN1916,75108
static inline edge_connection_t *TO_EDGE_CONN(TO_EDGE_CONN1921,75261
static inline entry_connection_t *TO_ENTRY_CONN(TO_ENTRY_CONN1927,75469
static inline entry_connection_t *EDGE_TO_ENTRY_CONN(EDGE_TO_ENTRY_CONN1932,75666
static inline control_connection_t *TO_CONTROL_CONN(TO_CONTROL_CONN1937,75873
static inline listener_connection_t *TO_LISTENER_CONN(TO_LISTENER_CONN1942,76042
  ADDR_POLICY_ACCEPT=1950,76306
  ADDR_POLICY_REJECT=1951,76330
} addr_policy_action_t;1952,76354
#define addr_policy_action_bitfield_t 1953,76378
typedef struct addr_policy_t 1956,76495
  int refcnt;1957,76526
  addr_policy_action_bitfield_t policy_type:policy_type1959,76608
  unsigned int is_private:is_private1960,76655
  unsigned int is_canonical:is_canonical1962,76772
  maskbits_t maskbits;1965,76987
  tor_addr_t addr;1976,77505
  uint16_t prt_min;1977,77524
  uint16_t prt_max;1978,77589
} addr_policy_t;1979,77655
typedef struct cached_dir_t 1983,77771
  char *dir;dir1984,77801
  char *dir_compressed;dir_compressed1985,77863
  size_t dir_len;1986,77931
  size_t dir_compressed_len;1987,78002
  time_t published;1988,78072
  common_digests_t digests;1989,78132
  uint8_t digest_sha3_as_signed[digest_sha3_as_signed1991,78248
  int refcnt;1992,78296
} cached_dir_t;1993,78357
  SAVED_NOWHERE=2000,78647
  SAVED_IN_CACHE,2004,78870
  SAVED_IN_JOURNAL2011,79186
} saved_location_t;2012,79205
#define saved_location_bitfield_t 2013,79225
  DL_SCHED_GENERIC 2018,79435
  DL_SCHED_CONSENSUS 2019,79459
  DL_SCHED_BRIDGE 2020,79485
} download_schedule_t;2021,79508
#define download_schedule_bitfield_t 2022,79531
  DL_WANT_ANY_DIRSERVER 2030,79898
  DL_WANT_AUTHORITY 2031,79927
} download_want_authority_t;2032,79952
#define download_want_authority_bitfield_t 2033,79981
  DL_SCHED_INCREMENT_FAILURE 2040,80336
  DL_SCHED_INCREMENT_ATTEMPT 2041,80370
} download_schedule_increment_t;2042,80404
#define download_schedule_increment_bitfield_t 2043,80437
  DL_SCHED_DETERMINISTIC 2049,80664
  DL_SCHED_RANDOM_EXPONENTIAL 2050,80694
} download_schedule_backoff_t;2051,80729
#define download_schedule_backoff_bitfield_t 2052,80760
typedef struct download_status_t 2081,82537
  time_t next_attempt_at;2082,82572
  uint8_t n_download_failures;2084,82685
  uint8_t n_download_attempts;2086,82836
  download_schedule_bitfield_t schedule 2089,83047
  download_want_authority_bitfield_t want_authority 2093,83335
  download_schedule_increment_bitfield_t increment_on 2098,83701
  download_schedule_backoff_bitfield_t backoff 2101,83921
  uint8_t last_backoff_position;2106,84282
  int last_delay_used;2110,84555
} download_status_t;2112,84689
#define IMPOSSIBLE_TO_DOWNLOAD 2115,84786
#define ROUTER_ANNOTATION_BUF_LEN 2120,85005
typedef struct signed_descriptor_t 2123,85107
  char *signed_descriptor_body;signed_descriptor_body2127,85319
  size_t annotations_len;2129,85419
  size_t signed_descriptor_len;2131,85487
  char signed_descriptor_digest[signed_descriptor_digest2134,85605
  char identity_digest[identity_digest2136,85690
  time_t published_on;2138,85780
  char extra_info_digest[extra_info_digest2140,85873
  char extra_info_digest256[extra_info_digest2562142,85984
  struct tor_cert_st *signing_key_cert;signing_key_cert2144,86074
  download_status_t ei_dl_status;2147,86201
  saved_location_t saved_location;2149,86275
  off_t saved_offset;2152,86438
  int routerlist_index;2155,86575
  time_t last_listed_as_valid_until;2158,86749
  unsigned int do_not_cache 2160,86856
  unsigned int is_extrainfo 2162,86952
  unsigned int extrainfo_is_bogus 2165,87093
  unsigned int send_unencrypted 2167,87199
} signed_descriptor_t;2168,87236
typedef int16_t country_t;2171,87313
  signed_descriptor_t cache_info;2175,87420
  char *nickname;nickname2176,87454
  uint32_t addr;2178,87505
  uint16_t or_port;2179,87565
  uint16_t dir_port;2180,87619
  tor_addr_t ipv6_addr;2186,87907
  uint16_t ipv6_orport;2187,87931
  crypto_pk_t *onion_pkey;onion_pkey2189,87956
  crypto_pk_t *identity_pkey;identity_pkey2190,88018
  curve25519_public_key_t *onion_curve25519_pkey;onion_curve25519_pkey2192,88127
  time_t cert_expiration_time;2195,88264
  char *platform;platform2197,88296
  char *protocol_list;protocol_list2199,88372
  uint32_t bandwidthrate;2203,88506
  uint32_t bandwidthburst;2205,88633
  uint32_t bandwidthcapacity;2207,88763
  smartlist_t *exit_policy;exit_policy2208,88793
  struct short_policy_t *ipv6_exit_policy;ipv6_exit_policy2212,89020
  long uptime;2213,89063
  smartlist_t *declared_family;declared_family2214,89137
  char *contact_info;contact_info2216,89273
  unsigned int is_hibernating:is_hibernating2217,89342
  unsigned int caches_extra_info:caches_extra_info2219,89463
  unsigned int allow_single_hop_exits:allow_single_hop_exits2221,89612
  unsigned int wants_to_be_hs_dir:wants_to_be_hs_dir2224,89760
  unsigned int wants_to_be_intermediary:wants_to_be_intermediary2226,89907
  unsigned int policy_is_reject_star:policy_is_reject_star2228,90055
  unsigned int needs_retest_if_added:needs_retest_if_added2232,90297
  unsigned int supports_tunnelled_dir_requests:supports_tunnelled_dir_requests2237,90510
  unsigned int omit_from_vote:omit_from_vote2241,90688
#define ROUTER_PURPOSE_GENERAL 2246,90886
#define ROUTER_PURPOSE_CONTROLLER 2250,91093
#define ROUTER_PURPOSE_BRIDGE 2254,91290
#define ROUTER_PURPOSE_UNKNOWN 2257,91436
  uint8_t purpose;2263,91691
} routerinfo_t;2264,91710
typedef struct extrainfo_t 2267,91801
  signed_descriptor_t cache_info;2268,91830
  uint8_t digest256[digest2562270,91904
  char nickname[nickname2272,91972
  unsigned int bad_sig 2275,92124
  char *pending_sig;pending_sig2278,92286
  size_t pending_sig_len;2280,92339
} extrainfo_t;2281,92365
typedef struct routerstatus_t 2285,92451
  time_t published_on;2286,92483
  char nickname[nickname2287,92546
  char identity_digest[identity_digest2289,92669
  char descriptor_digest[descriptor_digest2293,92931
  uint32_t addr;2294,92972
  uint16_t or_port;2295,93042
  uint16_t dir_port;2296,93095
  tor_addr_t ipv6_addr;2297,93156
  uint16_t ipv6_orport;2298,93218
  unsigned int is_authority:is_authority2299,93279
  unsigned int is_exit:is_exit2300,93356
  unsigned int is_stable:is_stable2301,93427
  unsigned int is_fast:is_fast2302,93506
  unsigned int is_intermediary:is_intermediary2307,93863
  unsigned int is_flagged_running:is_flagged_running2308,93946
  unsigned int is_named:is_named2309,93983
  unsigned int is_unnamed:is_unnamed2310,94062
  unsigned int is_valid:is_valid2312,94178
  unsigned int is_possible_guard:is_possible_guard2313,94249
  unsigned int is_bad_exit:is_bad_exit2315,94395
  unsigned int is_hs_dir:is_hs_dir2317,94519
  unsigned int is_v2_dir:is_v2_dir2319,94650
  unsigned int protocols_known:protocols_known2324,94960
  unsigned int supports_extend2_cells:supports_extend2_cells2328,95100
  unsigned int supports_ed25519_link_handshake:supports_ed25519_link_handshake2332,95268
  unsigned int supports_ed25519_hs_intro 2337,95544
  unsigned int supports_v3_hsdir 2342,95769
  unsigned int supports_v3_rendezvous_point:supports_v3_rendezvous_point2347,95994
  unsigned int has_bandwidth:has_bandwidth2349,96043
  unsigned int has_exitsummary:has_exitsummary2350,96114
  unsigned int bw_is_unmeasured:bw_is_unmeasured2351,96194
  uint32_t bandwidth_kb;2354,96333
  unsigned int has_guardfraction:has_guardfraction2358,96550
  uint32_t guardfraction_percentage;2360,96635
  char *exitsummary;exitsummary2362,96673
  time_t last_dir_503_at;2368,96910
  download_status_t dl_status;2370,97053
} routerstatus_t;2372,97085
typedef struct short_policy_entry_t 2375,97183
  uint16_t min_port,2376,97221
  uint16_t min_port, max_port;2376,97221
} short_policy_entry_t;2377,97252
typedef struct short_policy_t 2380,97343
  unsigned int is_accept 2383,97489
  unsigned int n_entries 2385,97570
  short_policy_entry_t entries[entries2390,97782
} short_policy_t;2391,97837
typedef struct microdesc_t 2398,98196
  HT_ENTRY(2400,98295
} microdesc_t;2452,100172
typedef struct node_t 2469,100930
  HT_ENTRY(2473,101044
} node_t;2542,103988
typedef struct vote_microdesc_hash_t 2547,104087
  struct vote_microdesc_hash_t *next;next2549,104170
  char *microdesc_hash_line;microdesc_hash_line2552,104301
} vote_microdesc_hash_t;2553,104330
typedef struct vote_routerstatus_t 2556,104412
  routerstatus_t status;2557,104449
#define MAX_KNOWN_FLAGS_IN_VOTE 2561,104693
  uint64_t flags;2562,104728
  char *version;version2564,104851
  char *protocols;protocols2566,104956
  unsigned int has_measured_bw:has_measured_bw2568,105066
  unsigned int has_ed25519_listing:has_ed25519_listing2571,105273
  unsigned int ed25519_reflects_consensus:ed25519_reflects_consensus2575,105503
  uint32_t measured_bw_kb;2576,105548
  vote_microdesc_hash_t *microdesc;microdesc2578,105701
  uint8_t ed25519_id[ed25519_id2580,105804
} vote_routerstatus_t;2581,105846
typedef struct document_signature_t 2584,105923
  char identity_digest[identity_digest2586,106021
  char signing_key_digest[signing_key_digest2588,106123
  digest_algorithm_t alg;2590,106225
  char *signature;signature2592,106291
  int signature_len;2594,106346
  unsigned int bad_signature 2595,106367
  unsigned int good_signature 2597,106514
} document_signature_t;2599,106643
typedef struct networkstatus_voter_info_t 2602,106734
  char identity_digest[identity_digest2604,106838
  char *nickname;nickname2605,106874
  char legacy_id_digest[legacy_id_digest2608,107067
  char *address;address2609,107104
  uint32_t addr;2610,107170
  uint16_t dir_port;2611,107242
  uint16_t or_port;2612,107300
  char *contact;contact2613,107350
  char vote_digest[vote_digest2614,107411
  smartlist_t *sigs;sigs2618,107599
} networkstatus_voter_info_t;2619,107620
typedef struct networkstatus_sr_info_t 2621,107651
  unsigned int participate:participate2624,107817
  struct sr_srv_t *previous_srv;previous_srv2627,107989
  struct sr_srv_t *current_srv;current_srv2628,108022
  smartlist_t *commits;commits2630,108094
} networkstatus_sr_info_t;2631,108118
  NS_TYPE_VOTE,2635,108240
  NS_TYPE_CONSENSUS,2636,108256
  NS_TYPE_OPINION,2637,108277
} networkstatus_type_t;2638,108296
  FLAV_NS 2644,108563
  FLAV_MICRODESC 2645,108578
} consensus_flavor_t;2646,108600
#define N_CONSENSUS_FLAVORS 2649,108678
typedef struct networkstatus_t 2653,108830
  networkstatus_type_t type;2654,108863
  consensus_flavor_t flavor;2655,108929
  unsigned int has_measured_bws 2656,108993
  time_t published;2659,109142
  time_t valid_after;2660,109209
  time_t fresh_until;2661,109288
  time_t valid_until;2663,109404
  int consensus_method;2667,109593
  smartlist_t *supported_methods;supported_methods2669,109680
  smartlist_t *package_lines;package_lines2672,109791
  int vote_seconds;2676,109940
  int dist_seconds;2679,110093
  char *client_versions;client_versions2683,110219
  char *server_versions;server_versions2684,110244
  char *recommended_relay_protocols;recommended_relay_protocols2690,110500
  char *recommended_client_protocols;recommended_client_protocols2691,110537
  char *required_relay_protocols;required_relay_protocols2692,110575
  char *required_client_protocols;required_client_protocols2693,110609
  smartlist_t *known_flags;known_flags2697,110803
  smartlist_t *net_params;net_params2701,110933
  smartlist_t *weight_params;weight_params2705,111048
  smartlist_t *voters;voters2710,111276
  struct authority_cert_t *cert;cert2712,111300
  common_digests_t digests;2715,111424
  uint8_t digest_sha3_as_signed[digest_sha3_as_signed2718,111552
  smartlist_t *routerstatus_list;routerstatus_list2723,111773
  digestmap_t *desc_digest_map;desc_digest_map2727,111897
  networkstatus_sr_info_t sr_info;2730,112006
} networkstatus_t;2731,112041
typedef struct ns_detached_signatures_t 2735,112186
  time_t valid_after;2736,112228
  time_t fresh_until;2737,112250
  time_t valid_until;2738,112272
  strmap_t *digests;digests2739,112294
  strmap_t *signatures;signatures2740,112359
} ns_detached_signatures_t;2742,112471
typedef enum store_type_t 2745,112540
  ROUTER_STORE 2746,112568
  EXTRAINFO_STORE 2747,112588
} store_type_t;2748,112610
typedef struct desc_store_t 2752,112750
  const char *fname_base;fname_base2756,112964
  const char *description;description2758,113055
  tor_mmap_t *mmap;mmap2760,113083
  store_type_t type;2762,113151
  size_t journal_len;2765,113257
  size_t store_len;2767,113328
  size_t bytes_dropped;2770,113494
} desc_store_t;2771,113518
  struct digest_ri_map_t *identity_map;identity_map2776,113666
  struct digest_sd_map_t *desc_digest_map;desc_digest_map2779,113808
  struct digest_ei_map_t *extra_info_map;extra_info_map2782,113963
  struct digest_sd_map_t *desc_by_eid_map;desc_by_eid_map2786,114184
  smartlist_t *routers;routers2788,114297
  smartlist_t *old_routers;old_routers2791,114407
  desc_store_t desc_store;2795,114621
  desc_store_t extrainfo_store;2797,114693
} routerlist_t;2798,114725
typedef struct extend_info_t 2804,115020
  char nickname[nickname2805,115051
  char identity_digest[identity_digest2808,115229
  ed25519_public_key_t ed_identity;2810,115316
  uint16_t port;2811,115352
  tor_addr_t addr;2812,115386
  crypto_pk_t *onion_key;onion_key2813,115425
  curve25519_public_key_t curve25519_onion_key;2814,115482
} extend_info_t;2815,115530
typedef struct authority_cert_t 2819,115676
  signed_descriptor_t cache_info;2821,115788
  crypto_pk_t *identity_key;identity_key2823,115882
  crypto_pk_t *signing_key;signing_key2825,115962
  char signing_key_digest[signing_key_digest2827,116032
  time_t expires;2829,116128
  uint32_t addr;2831,116201
  uint16_t dir_port;2833,116260
} authority_cert_t;2834,116281
  NO_DIRINFO 2846,116866
  V3_DIRINFO 2848,116963
  BRIDGE_DIRINFO 2850,117027
  EXTRAINFO_DIRINFO=2852,117092
  MICRODESC_DIRINFO=2854,117154
} dirinfo_type_t;2855,117182
#define ALL_DIRINFO 2857,117201
#define CRYPT_PATH_MAGIC 2859,117251
#define ONION_HANDSHAKE_TYPE_TAP 2863,117351
#define ONION_HANDSHAKE_TYPE_FAST 2864,117392
#define ONION_HANDSHAKE_TYPE_NTOR 2865,117433
#define MAX_ONION_HANDSHAKE_TYPE 2866,117474
  uint16_t tag;2868,117531
    struct fast_handshake_state_t *fast;fast2870,117557
    crypto_dh_t *tap;tap2871,117598
    struct ntor_handshake_state_t *ntor;ntor2872,117620
  } u;2873,117661
} onion_handshake_state_t;2874,117668
typedef struct crypt_path_t 2878,117847
  uint32_t magic;2879,117877
  crypto_cipher_t *f_crypto;f_crypto2884,118012
  crypto_cipher_t *b_crypto;b_crypto2887,118131
  crypto_digest_t *f_digest;f_digest2890,118230
  crypto_digest_t *b_digest;b_digest2892,118359
  onion_handshake_state_t handshake_state;2896,118473
  crypto_dh_t *rend_dh_handshake_state;rend_dh_handshake_state2899,118603
  char rend_circ_nonce[rend_circ_nonce2902,118710
  extend_info_t *extend_info;extend_info2905,118826
  uint8_t state;2912,119196
#define CPATH_STATE_CLOSED 2913,119213
#define CPATH_STATE_AWAITING_KEYS 2914,119242
#define CPATH_STATE_OPEN 2915,119278
  struct crypt_path_t *next;next2916,119305
  struct crypt_path_t *prev;prev2919,119509
  int package_window;2922,119625
  int deliver_window;2924,119744
} crypt_path_t;2926,119866
  unsigned int refcount;2934,120171
  crypt_path_t *cpath;cpath2937,120307
} crypt_path_reference_t;2938,120330
#define CPATH_KEY_MATERIAL_LEN 2940,120357
#define DH_KEY_LEN 2942,120401
  int desired_path_len;2947,120538
  extend_info_t *chosen_exit;chosen_exit2949,120611
  unsigned int need_uptime 2951,120708
  unsigned int need_capacity 2953,120809
  unsigned int is_internal 2955,120906
  unsigned int onehop_tunnel 2959,121126
  crypt_path_t *pending_final_cpath;pending_final_cpath2961,121235
  crypt_path_reference_t *service_pending_final_cpath_ref;service_pending_final_cpath_ref2964,121384
  int failure_count;2966,121512
  time_t expiry_time;2968,121587
} cpath_build_state_t;2969,121609
#define ORIGIN_CIRCUIT_MAGIC 2972,121678
#define OR_CIRCUIT_MAGIC 2974,121760
#define DEAD_CIRCUIT_MAGIC 2978,121990
typedef struct testing_cell_stats_entry_t 2984,122149
  uint8_t command;2985,122193
  unsigned int waiting_time:waiting_time2990,122501
  unsigned int removed:removed2991,122533
  unsigned int exitward:exitward2992,122609
} testing_cell_stats_entry_t;2993,122677
typedef struct circuit_t 3018,123985
  uint32_t magic;3019,124012
  channel_t *n_chan;n_chan3023,124195
  circid_t n_circ_id;3032,124424
  circuitmux_t *n_mux;n_mux3038,124566
  cell_queue_t n_chan_cells;3041,124650
  extend_info_t *n_hop;n_hop3047,124809
  unsigned int streams_blocked_on_n_chan 3051,124981
  unsigned int streams_blocked_on_p_chan 3054,125170
  unsigned int p_delete_pending 3058,125328
  unsigned int n_delete_pending 3061,125475
  unsigned int received_destroy 3064,125592
  uint8_t state;3066,125630
  uint8_t purpose;3067,125687
  int package_window;3072,125913
  int deliver_window;3077,126159
  uint32_t age_tmp;3080,126240
  struct create_cell_t *n_chan_create_cell;n_chan_create_cell3083,126339
  struct timeval timestamp_began;3095,126814
  struct timeval timestamp_created;3098,126923
  time_t timestamp_dirty;3117,127799
  uint16_t marked_for_close;3119,127826
  const char *marked_for_close_file;marked_for_close_file3122,128049
  int marked_for_close_reason;3127,128373
  int marked_for_close_orig_reason;3131,128510
  uint64_t dirreq_id;3134,128614
  int global_circuitlist_idx;3137,128703
  struct circuit_t *next_active_on_n_chan;next_active_on_n_chan3142,128915
  struct circuit_t *prev_active_on_n_chan;prev_active_on_n_chan3146,129143
  smartlist_t *testing_cell_stats;testing_cell_stats3151,129380
  hs_token_t *hs_token;hs_token3155,129526
  HT_ENTRY(3158,129650
} circuit_t;3159,129692
#define MAX_RELAY_EARLY_CELLS_PER_CIRCUIT 3163,129789
    PATH_STATE_NEW_CIRC 3183,130635
    PATH_STATE_BUILD_ATTEMPTED 3186,130768
    PATH_STATE_BUILD_SUCCEEDED 3188,130854
    PATH_STATE_USE_ATTEMPTED 3197,131252
    PATH_STATE_USE_SUCCEEDED 3205,131600
    PATH_STATE_USE_FAILED 3211,131782
    PATH_STATE_ALREADY_COUNTED 3218,131982
} path_state_t;3219,132018
#define path_state_bitfield_t 3220,132034
typedef struct origin_circuit_t 3224,132164
  circuit_t base_;3225,132198
  edge_connection_t *p_streams;p_streams3229,132324
  uint32_t n_read_circ_bw;3234,132523
  uint32_t n_written_circ_bw;3239,132718
  cpath_build_state_t *build_state;build_state3244,132887
  crypt_path_t *cpath;cpath3250,133149
  rend_data_t *rend_data;rend_data3253,133242
  struct hs_ident_circuit_t *hs_ident;hs_ident3257,133403
  struct circuit_guard_state_t *guard_state;guard_state3262,133625
  int global_origin_circuit_list_idx;3266,133760
  unsigned int remaining_relay_early_cells 3270,133906
  unsigned int is_ancient 3273,134033
  unsigned int has_opened 3277,134162
  path_state_bitfield_t path_state 3284,134352
  unsigned int unusable_for_new_conns 3288,134498
  uint8_t pathbias_shouldcount;3297,134855
#define PATHBIAS_SHOULDCOUNT_UNDECIDED 3298,134887
#define PATHBIAS_SHOULDCOUNT_IGNORED 3299,134928
#define PATHBIAS_SHOULDCOUNT_COUNTED 3300,134969
  streamid_t pathbias_probe_id;3304,135103
  uint32_t pathbias_probe_nonce;3308,135254
  unsigned int hs_circ_has_timed_out 3324,136125
  unsigned int relaxed_timeout 3328,136300
  unsigned int hs_service_side_rend_circ_has_been_relaunched 3336,136751
  uint8_t relay_early_commands[relay_early_commands3340,136948
  int relay_early_cells_sent;3344,137128
  streamid_t next_stream_id;3348,137291
  crypto_pk_t *intro_key;intro_key3353,137498
  uint32_t global_identifier;3357,137654
  unsigned int isolation_values_set 3364,137991
  unsigned int isolation_any_streams_attached 3370,138242
  uint8_t isolation_flags_mixed;3375,138460
  uint8_t client_proto_type;3390,139055
  uint8_t client_proto_socksver;3391,139084
  uint16_t dest_port;3392,139117
  tor_addr_t client_addr;3393,139139
  char *dest_address;dest_address3394,139165
  int session_group;3395,139187
  unsigned nym_epoch;3396,139208
  size_t socks_username_len;3397,139230
  uint8_t socks_password_len;3398,139259
  char *socks_username;socks_username3401,139421
  char *socks_password;socks_password3402,139445
  uint64_t associated_isolated_stream_global_id;3405,139557
  smartlist_t *prepend_policy;prepend_policy3410,139741
  int circuit_idle_timeout;3416,140016
} origin_circuit_t;3418,140045
typedef struct or_circuit_t 3424,140173
  circuit_t base_;3425,140203
  struct circuit_t *next_active_on_p_chan;next_active_on_p_chan3430,140404
  struct circuit_t *prev_active_on_p_chan;prev_active_on_p_chan3434,140632
  struct onion_queue_t *onionqueue_entry;onionqueue_entry3437,140827
  struct workqueue_entry_s *workqueue_entry;workqueue_entry3441,141096
  circid_t p_circ_id;3444,141219
  cell_queue_t p_chan_cells;3446,141302
  channel_t *p_chan;p_chan3448,141386
  circuitmux_t *p_mux;p_mux3453,141526
  edge_connection_t *n_streams;n_streams3455,141616
  edge_connection_t *resolving_streams;resolving_streams3458,141750
  crypto_cipher_t *p_crypto;p_crypto3461,141874
  crypto_cipher_t *n_crypto;n_crypto3464,141990
  crypto_digest_t *p_digest;p_digest3469,142146
  crypto_digest_t *n_digest;n_digest3473,142297
  struct or_circuit_t *rend_splice;rend_splice3477,142436
  char rend_circ_nonce[rend_circ_nonce3480,142511
  unsigned int remaining_relay_early_cells 3484,142679
  unsigned int already_received_introduce1 3487,142797
  unsigned int circuit_carries_hs_traffic_stats 3491,142936
  uint32_t processed_cells;3495,143110
  uint64_t total_cell_waiting_time;3500,143309
  uint32_t max_middle_cells;3506,143559
} or_circuit_t;3507,143588
#define REND_TOKEN_LEN 3512,143718
#define TO_CIRCUIT(3515,143802
static inline int node_is_good_exit(3529,144406
static inline or_circuit_t *TO_OR_CIRCUIT(TO_OR_CIRCUIT3534,144514
static inline const or_circuit_t *CONST_TO_OR_CIRCUIT(CONST_TO_OR_CIRCUIT3539,144654
static inline origin_circuit_t *TO_ORIGIN_CIRCUIT(TO_ORIGIN_CIRCUIT3544,144812
static inline const origin_circuit_t *CONST_TO_ORIGIN_CIRCUIT(CONST_TO_ORIGIN_CIRCUIT3549,144968
#define MIN_CONSTRAINED_TCP_BUFFER 3557,145224
#define MAX_CONSTRAINED_TCP_BUFFER 3558,145264
#define ISO_DESTPORT 3567,145433
#define ISO_DESTADDR 3569,145509
#define ISO_SOCKSAUTH 3571,145586
#define ISO_CLIENTPROTO 3573,145665
#define ISO_CLIENTADDR 3575,145736
#define ISO_SESSIONGRP 3577,145819
#define ISO_NYM_EPOCH 3579,145901
#define ISO_STREAM 3581,145977
#define ISO_DEFAULT 3585,146060
#define SESSION_GROUP_UNSET 3588,146215
#define SESSION_GROUP_DIRCONN 3590,146302
#define SESSION_GROUP_CONTROL_RESOLVE 3592,146411
#define SESSION_GROUP_FIRST_AUTO 3594,146510
typedef struct port_cfg_t 3597,146611
  tor_addr_t addr;3598,146639
  int port;3599,146712
  uint8_t type;3601,146819
  unsigned is_unix_addr 3602,146871
  unsigned is_group_writable 3604,146946
  unsigned is_world_writable 3605,146980
  unsigned relax_dirmode_check 3606,147014
  entry_port_cfg_t entry_cfg;3608,147051
  server_port_cfg_t server_cfg;3610,147082
  char unix_addr[unix_addr3614,147179
} port_cfg_t;3615,147220
typedef struct routerset_t routerset_t;3617,147235
#define CFG_AUTO_PORT 3621,147376
typedef enum {OUTBOUND_ADDR_EXIT,OUTBOUND_ADDR_EXIT3625,147499
typedef enum {OUTBOUND_ADDR_EXIT, OUTBOUND_ADDR_OR,3625,147499
              OUTBOUND_ADDR_EXIT_AND_OR,3626,147551
              OUTBOUND_ADDR_MAX}OUTBOUND_ADDR_MAX3627,147592
              OUTBOUND_ADDR_MAX} outbound_addr_t;3627,147592
  uint32_t magic_;3631,147708
    CMD_RUN_TOR=3635,147787
    CMD_RUN_TOR=0, CMD_LIST_FINGERPRINT,3635,147787
    CMD_RUN_TOR=0, CMD_LIST_FINGERPRINT, CMD_HASH_PASSWORD,3635,147787
    CMD_VERIFY_CONFIG,3636,147847
    CMD_VERIFY_CONFIG, CMD_RUN_UNITTESTS,3636,147847
    CMD_VERIFY_CONFIG, CMD_RUN_UNITTESTS, CMD_DUMP_CONFIG,3636,147847
    CMD_KEYGEN,3637,147906
    CMD_KEY_EXPIRATION,3638,147922
  char *command_arg;command_arg3640,147959
  config_line_t *Logs;Logs3642,148023
  int LogTimeGranularity;3644,148127
  int LogMessageDomains;3646,148194
  int TruncateLogFile;3648,148326
  char *SyslogIdentityTag;SyslogIdentityTag3650,148451
  char *DebugLogFile;DebugLogFile3652,148527
  char *DataDirectory;DataDirectory3653,148593
  int DataDirectoryGroupReadable;3654,148664
  char *Nickname;Nickname3655,148741
  char *Address;Address3656,148807
  char *PidFile;PidFile3657,148883
  routerset_t *ExitNodes;ExitNodes3659,148944
  routerset_t *EntryNodes;EntryNodes3662,149144
  int StrictNodes;3665,149351
  routerset_t *ExcludeNodes;ExcludeNodes3668,149550
  routerset_t *ExcludeExitNodes;ExcludeExitNodes3672,149816
  routerset_t *ExcludeExitNodesUnion_;ExcludeExitNodesUnion_3677,150091
  int DisableAllSwap;3679,150131
  config_line_t *ExitPolicy;ExitPolicy3682,150273
  int ExitPolicyRejectPrivate;3683,150343
  int ExitPolicyRejectLocalInterfaces;3686,150531
  config_line_t *SocksPolicy;SocksPolicy3690,150806
  config_line_t *DirPolicy;DirPolicy3691,150877
  config_line_t *OutboundBindAddress;OutboundBindAddress3693,150992
  config_line_t *OutboundBindAddressOR;OutboundBindAddressOR3695,151084
  config_line_t *OutboundBindAddressExit;OutboundBindAddressExit3697,151177
  tor_addr_t OutboundBindAddresses[OutboundBindAddresses3701,151327
  config_line_t *RecommendedVersions;RecommendedVersions3704,151473
  config_line_t *RecommendedClientVersions;RecommendedClientVersions3705,151511
  config_line_t *RecommendedServerVersions;RecommendedServerVersions3706,151555
  config_line_t *RecommendedPackages;RecommendedPackages3707,151599
  int DirAllowPrivateAddresses;3709,151708
  int ExtendAllowPrivateAddresses;3711,151814
  char *User;User3712,151849
  config_line_t *ORPort_lines;ORPort_lines3713,151899
  config_line_t *ExtORPort_lines;ExtORPort_lines3715,152034
  config_line_t *SocksPort_lines;SocksPort_lines3717,152119
  config_line_t *TransPort_lines;TransPort_lines3719,152223
  char *TransProxyType;TransProxyType3720,152257
    TPT_DEFAULT,3724,152426
    TPT_PF_DIVERT,3725,152443
    TPT_IPFW,3726,152462
    TPT_TPROXY,3727,152476
  } TransProxyType_parsed;3728,152492
  config_line_t *NATDPort_lines;NATDPort_lines3729,152519
  config_line_t *HTTPTunnelPort_lines;HTTPTunnelPort_lines3732,152700
  config_line_t *ControlPort_lines;ControlPort_lines3733,152739
  config_line_t *ControlSocket;ControlSocket3735,152860
  int ControlSocketsGroupWritable;3738,153002
  int SocksSocketsGroupWritable;3739,153080
  config_line_t *DirPort_lines;DirPort_lines3741,153209
  config_line_t *DNSPort_lines;DNSPort_lines3742,153241
  uint64_t MaxMemInQueues_raw;3746,153414
  uint64_t MaxMemInQueues;3747,153445
  uint64_t MaxMemInQueues_low_threshold;3750,153654
  unsigned int ORPort_set 3765,154215
  unsigned int SocksPort_set 3766,154246
  unsigned int TransPort_set 3767,154280
  unsigned int NATDPort_set 3768,154314
  unsigned int ControlPort_set 3769,154347
  unsigned int DirPort_set 3770,154383
  unsigned int DNSPort_set 3771,154415
  unsigned int ExtORPort_set 3772,154447
  unsigned int HTTPTunnelPort_set 3773,154481
  int AssumeReachable;3776,154531
  int AuthoritativeDir;3777,154608
  int V3AuthoritativeDir;3778,154685
  int VersioningAuthoritativeDir;3780,154819
  int BridgeAuthoritativeDir;3783,155017
  char *BridgeDistribution;BridgeDistribution3788,155306
  char *BridgePassword;BridgePassword3792,155485
  char *BridgePassword_AuthDigest_;BridgePassword_AuthDigest_3795,155662
  int UseBridges;3797,155699
  config_line_t *Bridges;Bridges3798,155778
  config_line_t *ClientTransportPlugin;ClientTransportPlugin3800,155849
  config_line_t *ServerTransportPlugin;ServerTransportPlugin3803,155975
  config_line_t *ServerTransportListenAddr;ServerTransportListenAddr3807,156169
  config_line_t *ServerTransportOptions;ServerTransportOptions3810,156284
  int BridgeRelay;3812,156326
  int UpdateBridgesFromAuthority;3818,156648
  int AvoidDiskWrites;3820,156683
  int ClientOnly;3822,156801
  int ReducedConnectionPadding;3824,156880
  int ConnectionPadding;3830,157317
  smartlist_t *PublishServerDescriptor;PublishServerDescriptor3834,157458
  dirinfo_type_t PublishServerDescriptor_;3836,157576
  int PublishHidServDescriptors;3838,157695
  int FetchServerDescriptors;3839,157728
  int FetchHidServDescriptors;3840,157808
  int MinUptimeHidServDirectoryV2;3842,157880
  int FetchUselessDescriptors;3845,158037
  int AllDirActionsPrivate;3846,158117
  int Tor2webMode;3852,158406
  routerset_t *Tor2webRendezvousPoints;Tor2webRendezvousPoints3855,158501
  int HiddenServiceSingleHopMode;3868,159183
  int HiddenServiceNonAnonymousMode;3875,159527
  int ConnLimit;3877,159565
  int ConnLimit_;3878,159643
  int ConnLimit_high_thresh;3879,159721
  int ConnLimit_low_thresh;3881,159849
  int RunAsDaemon;3883,159967
  int FascistFirewall;3884,160038
  smartlist_t *FirewallPorts;FirewallPorts3885,160116
  config_line_t *ReachableAddresses;ReachableAddresses3887,160230
  config_line_t *ReachableORAddresses;ReachableORAddresses3888,160305
  config_line_t *ReachableDirAddresses;ReachableDirAddresses3889,160375
  int ConstrainedSockets;3891,160448
  uint64_t ConstrainedSockSize;3892,160519
  int RefuseUnknownExits;3898,160831
  smartlist_t *LongLivedPorts;LongLivedPorts3902,160948
  smartlist_t *RejectPlaintextPorts;RejectPlaintextPorts3907,161213
  smartlist_t *WarnPlaintextPorts;WarnPlaintextPorts3911,161450
  smartlist_t *TrackHostExits;TrackHostExits3913,161553
  int TrackHostExitsExpire;3914,161584
  config_line_t *AddressMap;AddressMap3916,161699
  int AutomapHostsOnResolve;3917,161768
  smartlist_t *AutomapHostsSuffixes;AutomapHostsSuffixes3923,162162
  int RendPostPeriod;3924,162199
  int KeepalivePeriod;3926,162351
  int SocksTimeout;3928,162470
  int LearnCircuitBuildTimeout;3930,162594
  int CircuitBuildTimeout;3934,162907
  int CircuitsAvailableTimeout;3937,163122
  int CircuitStreamTimeout;3939,163270
  int MaxOnionQueueDelay;3943,163569
  int NewCircuitPeriod;3944,163609
  int MaxCircuitDirtiness;3946,163724
  uint64_t BandwidthRate;3948,163857
  uint64_t BandwidthBurst;3950,163987
  uint64_t MaxAdvertisedBandwidth;3952,164119
  uint64_t RelayBandwidthRate;3954,164263
  uint64_t RelayBandwidthBurst;3956,164414
  uint64_t PerConnBWRate;3958,164568
  uint64_t PerConnBWBurst;3959,164645
  int NumCPUs;3960,164724
  config_line_t *RendConfigLines;RendConfigLines3961,164783
  config_line_t *HidServAuth;HidServAuth3963,164922
  char *ContactInfo;ContactInfo3965,165072
  int HeartbeatPeriod;3967,165149
  char *HTTPProxy;HTTPProxy3970,165267
  tor_addr_t HTTPProxyAddr;3971,165340
  uint16_t HTTPProxyPort;3972,165417
  char *HTTPProxyAuthenticator;HTTPProxyAuthenticator3973,165487
  char *HTTPSProxy;HTTPSProxy3975,165562
  tor_addr_t HTTPSProxyAddr;3976,165637
  uint16_t HTTPSProxyPort;3977,165711
  char *HTTPSProxyAuthenticator;HTTPSProxyAuthenticator3978,165783
  char *Socks4Proxy;Socks4Proxy3980,165859
  tor_addr_t Socks4ProxyAddr;3981,165936
  uint16_t Socks4ProxyPort;3982,166000
  char *Socks5Proxy;Socks5Proxy3984,166063
  tor_addr_t Socks5ProxyAddr;3985,166140
  uint16_t Socks5ProxyPort;3986,166203
  char *Socks5ProxyUsername;Socks5ProxyUsername3987,166265
  char *Socks5ProxyPassword;Socks5ProxyPassword3988,166345
  config_line_t *DirAuthorities;DirAuthorities3993,166627
  config_line_t *FallbackDir;FallbackDir3996,166705
  int UseDefaultFallbackDirs;3998,166795
  double DirAuthorityFallbackRate;4002,166933
  config_line_t *AlternateDirAuthority;AlternateDirAuthority4006,167069
  config_line_t *AlternateBridgeAuthority;AlternateBridgeAuthority4009,167181
  config_line_t *MyFamily_lines;MyFamily_lines4011,167225
  config_line_t *MyFamily;MyFamily4012,167295
  config_line_t *NodeFamilies;NodeFamilies4013,167370
  smartlist_t *NodeFamilySets;NodeFamilySets4015,167482
  config_line_t *AuthDirBadExit;AuthDirBadExit4016,167557
  config_line_t *AuthDirReject;AuthDirReject4018,167687
  config_line_t *AuthDirInvalid;AuthDirInvalid4020,167804
  smartlist_t *AuthDirBadExitCCs;AuthDirBadExitCCs4029,168073
  smartlist_t *AuthDirInvalidCCs;AuthDirInvalidCCs4030,168107
  smartlist_t *AuthDirRejectCCs;AuthDirRejectCCs4031,168141
  int AuthDirListBadExits;4034,168185
  int AuthDirMaxServersPerAddr;4036,168323
  int AuthDirHasIPv6Connectivity;4038,168461
  int AuthDirPinKeys;4039,168529
  uint64_t AuthDirFastGuarantee;4043,168708
  uint64_t AuthDirGuardBWGuarantee;4047,168880
  char *AccountingStart;AccountingStart4049,168917
  uint64_t AccountingMax;4051,169039
  char *AccountingRule_option;AccountingRule_option4059,169495
  enum { ACCT_MAX,4060,169526
  enum { ACCT_MAX, ACCT_SUM,4060,169526
  enum { ACCT_MAX, ACCT_SUM, ACCT_IN,4060,169526
  enum { ACCT_MAX, ACCT_SUM, ACCT_IN, ACCT_OUT 4060,169526
  enum { ACCT_MAX, ACCT_SUM, ACCT_IN, ACCT_OUT } AccountingRule;4060,169526
  config_line_t *HashedControlPassword;HashedControlPassword4063,169667
  config_line_t *HashedControlSessionPassword;HashedControlSessionPassword4065,169757
  int CookieAuthentication;4067,169805
  char *CookieAuthFile;CookieAuthFile4069,169936
  char *ExtORPortCookieAuthFile;ExtORPortCookieAuthFile4071,170057
  int CookieAuthFileGroupReadable;4073,170197
  int ExtORPortCookieAuthFileGroupReadable;4074,170276
  int LeaveStreamsUnattached;4076,170420
  int DisablePredictedCircuits;4079,170619
  char *OwningControllerProcess;OwningControllerProcess4085,170945
  int ShutdownWaitLength;4087,170979
  char *SafeLogging;SafeLogging4089,171119
    SAFELOG_SCRUB_ALL,4093,171242
    SAFELOG_SCRUB_ALL, SAFELOG_SCRUB_RELAY,4093,171242
    SAFELOG_SCRUB_ALL, SAFELOG_SCRUB_RELAY, SAFELOG_SCRUB_NONE4093,171242
  } SafeLogging_;4094,171305
  int Sandbox;4096,171324
  int SafeSocks;4097,171386
  int ProtocolWarnings;4099,171532
  int TestSocks;4101,171683
  int HardwareAccel;4103,171821
  int TokenBucketRefillInterval;4106,172004
  char *AccelName;AccelName4107,172037
  char *AccelDir;AccelDir4108,172108
  int UseEntryGuards_option;4112,172266
  int UseEntryGuards;4117,172547
  int NumEntryGuards;4119,172570
  int UseGuardFraction;4124,172795
  int EnablePayment;4129,172944
  int NumDirectoryGuards;4131,172966
  int RephistTrackTime;4133,173110
  int FetchDirInfoEarly;4136,173329
  int FetchDirInfoExtraEarly;4139,173431
  int DirCache;4141,173462
  char *VirtualAddrNetworkIPv4;VirtualAddrNetworkIPv44145,173654
  char *VirtualAddrNetworkIPv6;VirtualAddrNetworkIPv64147,173809
  int ServerDNSSearchDomains;4149,173964
  int ServerDNSDetectHijacking;4152,174159
  int ServerDNSRandomizeCase;4154,174285
  char *ServerDNSResolvConfFile;ServerDNSResolvConfFile4156,174417
  char *DirPortFrontPage;DirPortFrontPage4159,174639
  int DisableDebuggerAttachment;4163,174939
  int ServerDNSAllowBrokenConfig;4167,175185
  int CountPrivateBandwidth;4170,175316
  smartlist_t *ServerDNSTestAddresses;ServerDNSTestAddresses4171,175345
  int EnforceDistinctSubnets;4174,175567
  int PortForwarding;4176,175722
  char *PortForwardingHelper;PortForwardingHelper4178,175872
  int AllowNonRFC953Hostnames;4180,176008
  int ServerDNSAllowNonRFC953Hostnames;4183,176215
  int DownloadExtraInfo;4187,176398
  int DirReqStatistics_option;4191,176547
  int DirReqStatistics;4194,176727
  int ExitPortStatistics;4197,176825
  int ConnDirectionStatistics;4200,176922
  int CellStatistics;4203,177018
  int PaddingStatistics;4206,177108
  int EntryStatistics;4209,177207
  int HiddenServiceStatistics_option;4213,177364
  int HiddenServiceStatistics;4217,177563
  int ExtraInfoStatistics;4220,177671
  int ClientDNSRejectInternalAddresses;4225,177894
  int ClientRejectInternalAddresses;4229,178046
  int ClientUseIPv4;4233,178230
  int ClientUseIPv6;4238,178481
  int ClientPreferIPv6ORPort;4243,178742
  int ClientPreferIPv6DirPort;4248,179040
  int V3AuthVotingInterval;4251,179143
  int V3AuthVoteDelay;4253,179242
  int V3AuthDistDelay;4255,179341
  int V3AuthNIntervalsValid;4257,179435
  int V3AuthUseLegacyKey;4261,179564
  char *V3BandwidthsFile;V3BandwidthsFile4264,179639
  char *GuardfractionFile;GuardfractionFile4267,179706
  char *ConsensusParams;ConsensusParams4271,179850
  int MinMeasuredBWsForAuthToIgnoreAdvertised;4275,180016
  int TestingV3AuthInitialVotingInterval;4279,180183
  int TestingV3AuthInitialVoteDelay;4283,180344
  int TestingV3AuthInitialDistDelay;4287,180505
  int TestingV3AuthVotingStartOffset;4291,180659
  int TestingAuthDirTimeToLearnReachability;4296,180881
  int TestingEstimatedDescriptorPropagationTime;4301,181093
  smartlist_t *TestingServerDownloadSchedule;TestingServerDownloadSchedule4305,181253
  smartlist_t *TestingClientDownloadSchedule;TestingClientDownloadSchedule4309,181410
  smartlist_t *TestingServerConsensusDownloadSchedule;TestingServerConsensusDownloadSchedule4313,181561
  smartlist_t *TestingClientConsensusDownloadSchedule;TestingClientConsensusDownloadSchedule4317,181721
  smartlist_t *ClientBootstrapConsensusAuthorityDownloadSchedule;ClientBootstrapConsensusAuthorityDownloadSchedule4327,182239
  smartlist_t *ClientBootstrapConsensusFallbackDownloadSchedule;ClientBootstrapConsensusFallbackDownloadSchedule4337,182782
  smartlist_t *ClientBootstrapConsensusAuthorityOnlyDownloadSchedule;ClientBootstrapConsensusAuthorityOnlyDownloadSchedule4347,183333
  smartlist_t *TestingBridgeDownloadSchedule;TestingBridgeDownloadSchedule4351,183515
  smartlist_t *TestingBridgeBootstrapDownloadSchedule;TestingBridgeBootstrapDownloadSchedule4355,183707
  int TestingClientMaxIntervalWithoutRequest;4360,183959
  int TestingDirConnectionMaxStall;4364,184123
  int TestingConsensusMaxDownloadTries;4368,184276
  int ClientBootstrapConsensusMaxDownloadTries;4373,184502
  int ClientBootstrapConsensusAuthorityOnlyMaxDownloadTries;4378,184732
  int ClientBootstrapConsensusMaxInProgressTries;4383,184999
  int TestingDescriptorMaxDownloadTries;4387,185178
  int TestingMicrodescMaxDownloadTries;4391,185344
  int TestingCertMaxDownloadTries;4395,185502
  int TestingTorNetwork;4400,185729
  uint64_t TestingMinExitFlagThreshold;4403,185827
  uint64_t TestingMinFastFlagThreshold;4406,185940
  routerset_t *TestingDirAuthVoteExit;TestingDirAuthVoteExit4410,186077
  int TestingDirAuthVoteExitIsStrict;4411,186116
  routerset_t *TestingDirAuthVoteGuard;TestingDirAuthVoteGuard4415,186261
  int TestingDirAuthVoteGuardIsStrict;4416,186301
  routerset_t *TestingDirAuthVoteHSDir;TestingDirAuthVoteHSDir4420,186445
  int TestingDirAuthVoteHSDirIsStrict;4421,186485
  int TestingEnableConnBwEvent;4424,186592
  int TestingEnableCellStatsEvent;4427,186695
  int TestingEnableTbEmptyEvent;4430,186799
  int BridgeRecordUsageByCountry;4435,187067
  char *GeoIPFile;GeoIPFile4438,187149
  char *GeoIPv6File;GeoIPv6File4439,187168
  int GeoIPExcludeUnknown;4444,187425
  int ReloadTorrcOnSIGHUP;4448,187556
  double CircuitPriorityHalflife;4463,188180
  int UsingTestNetworkDefaults_;4468,188396
  int UseMicrodescriptors;4472,188537
  char *ControlPortWriteToFile;ControlPortWriteToFile4475,188618
  int ControlPortFileGroupReadable;4477,188695
#define MAX_MAX_CLIENT_CIRCUITS_PENDING 4479,188732
  int MaxClientCircuitsPending;4482,188868
  int OptimisticData;4486,189036
  int DisableNetwork;4490,189158
  int PathBiasCircThreshold;4517,190470
  double PathBiasNoticeRate;4518,190499
  double PathBiasWarnRate;4519,190528
  double PathBiasExtremeRate;4520,190555
  int PathBiasDropGuards;4521,190585
  int PathBiasScaleThreshold;4522,190611
  int PathBiasUseThreshold;4543,191566
  double PathBiasNoticeUseRate;4544,191594
  double PathBiasExtremeUseRate;4545,191626
  int PathBiasScaleUseThreshold;4546,191659
  int IPv6Exit;4549,191705
  double PathsNeededToBuildCircuits;4552,191790
  int SSLKeyLifetime;4556,191936
  int GuardLifetime;4559,192032
  int ExitRelay;4566,192338
  int SigningKeyLifetime;4569,192432
  int TestingLinkCertLifetime;4571,192531
  int TestingAuthKeyLifetime;4573,192635
  int TestingSigningKeySlop;4576,192742
  int TestingLinkKeySlop;4578,192844
  int TestingAuthKeySlop;4580,192943
  int OfflineMasterKey;4584,193096
    FORCE_PASSPHRASE_AUTO=4587,193130
    FORCE_PASSPHRASE_ON,4588,193159
    FORCE_PASSPHRASE_OFF4589,193184
  int use_keygen_passphrase_fd;4591,193238
  int keygen_passphrase_fd;4592,193270
  int change_key_passphrase;4593,193298
  char *master_key_fname;master_key_fname4594,193327
  int KeepBindCapabilities;4597,193417
  uint64_t MaxUnparseableDescSizeToLog;4602,193557
  int AuthDirSharedRandomness;4608,193848
  int DisableOOSCheck;4611,193919
  int ExtendByEd25519ID;4615,194081
  int AuthDirTestEd25519LinkKeys;4620,194271
  int IncludeUsed;4623,194372
  int Intermediary;4627,194463
  int MaxConsensusAgeForDiffs;4632,194652
  int NoExec;4636,194763
  int KISTSchedRunInterval;4642,195078
  double KISTSockBufSizeFactor;4645,195172
  smartlist_t *Schedulers;Schedulers4649,195345
  smartlist_t *SchedulerTypes_;SchedulerTypes_4651,195439
} or_options_t;4652,195471
#define LOG_PROTOCOL_WARN 4654,195488
  uint32_t magic_;4658,195635
  time_t next_write;4662,195844
  time_t LastWritten;4665,195916
  time_t AccountingIntervalStart;4668,195985
  uint64_t AccountingBytesReadInInterval;4669,196019
  uint64_t AccountingBytesWrittenInInterval;4670,196061
  int AccountingSecondsActive;4671,196106
  int AccountingSecondsToReachSoftLimit;4672,196137
  time_t AccountingSoftLimitHitAt;4673,196178
  uint64_t AccountingBytesAtSoftLimit;4674,196213
  uint64_t AccountingExpectedUsage;4675,196252
  config_line_t *EntryGuards;EntryGuards4678,196363
  config_line_t *Guard;Guard4681,196463
  config_line_t *TransportProxies;TransportProxies4683,196488
  config_line_t *HidServRevCounter;HidServRevCounter4686,196598
  time_t      BWHistoryReadEnds;4696,197122
  int         BWHistoryReadInterval;4697,197155
  smartlist_t *BWHistoryReadValues;BWHistoryReadValues4698,197192
  smartlist_t *BWHistoryReadMaxima;BWHistoryReadMaxima4699,197228
  time_t      BWHistoryWriteEnds;4700,197264
  int         BWHistoryWriteInterval;4701,197298
  smartlist_t *BWHistoryWriteValues;BWHistoryWriteValues4702,197336
  smartlist_t *BWHistoryWriteMaxima;BWHistoryWriteMaxima4703,197373
  time_t      BWHistoryDirReadEnds;4704,197410
  int         BWHistoryDirReadInterval;4705,197446
  smartlist_t *BWHistoryDirReadValues;BWHistoryDirReadValues4706,197486
  smartlist_t *BWHistoryDirReadMaxima;BWHistoryDirReadMaxima4707,197525
  time_t      BWHistoryDirWriteEnds;4708,197564
  int         BWHistoryDirWriteInterval;4709,197601
  smartlist_t *BWHistoryDirWriteValues;BWHistoryDirWriteValues4710,197642
  smartlist_t *BWHistoryDirWriteMaxima;BWHistoryDirWriteMaxima4711,197682
  config_line_t * BuildtimeHistogram;4714,197753
  int TotalBuildTimes;4715,197791
  int CircuitBuildAbandonedCount;4716,197814
  char *TorVersion;TorVersion4719,197901
  config_line_t *ExtraLines;ExtraLines4723,198031
  time_t LastRotatedOnionKey;4726,198129
} or_state_t;4727,198159
static inline void or_state_mark_dirty(4732,198330
#define MAX_SOCKS_REPLY_LEN 4738,198468
#define MAX_SOCKS_ADDR_LEN 4739,198501
#define SOCKS_NO_AUTH 4740,198532
#define SOCKS_USER_PASS 4741,198559
#define SOCKS_COMMAND_CONNECT 4744,198644
#define SOCKS_COMMAND_RESOLVE 4746,198745
#define SOCKS_COMMAND_RESOLVE_PTR 4748,198846
#define SOCKS_COMMAND_IS_CONNECT(4751,198962
#define SOCKS_COMMAND_IS_RESOLVE(4752,199034
struct socks_request_t 4758,199340
  uint8_t socks_version;4762,199575
  uint8_t auth_type;4766,199766
  uint8_t command;4768,199858
  uint8_t listener_type;4770,199930
  size_t replylen;4771,199955
  uint8_t reply[reply4772,200006
  char address[address4778,200423
  uint16_t port;4780,200561
  unsigned int has_finished 4781,200630
  unsigned int got_auth 4784,200836
  unsigned int socks_prefer_no_auth 4788,201082
  size_t usernamelen;4791,201184
  uint8_t passwordlen;4793,201266
  char *username;username4797,201476
  char *password;password4800,201625
#define DEFAULT_ROUTE_LEN 4806,201791
#define BW_WEIGHT_SCALE 4811,201917
#define BW_MIN_WEIGHT_SCALE 4812,201949
#define BW_MAX_WEIGHT_SCALE 4813,201979
#define CBT_NCIRCUITS_TO_OBSERVE 4817,202142
#define CBT_BIN_WIDTH 4820,202232
#define CBT_DEFAULT_NUM_XM_MODES 4823,202342
#define CBT_MIN_NUM_XM_MODES 4824,202377
#define CBT_MAX_NUM_XM_MODES 4825,202408
typedef uint32_t build_time_t;4828,202479
#define CBT_BUILD_ABANDONED 4834,202638
#define CBT_BUILD_TIME_MAX 4835,202696
#define CBT_SAVE_STATE_EVERY 4838,202788
#define CBT_DEFAULT_CLOSE_QUANTILE 4846,202987
#define CBT_MIN_CLOSE_QUANTILE 4847,203025
#define CBT_MAX_CLOSE_QUANTILE 4848,203080
#define CBT_DEFAULT_RECENT_CIRCUITS 4854,203246
#define CBT_MIN_RECENT_CIRCUITS 4855,203285
#define CBT_MAX_RECENT_CIRCUITS 4856,203319
#define CBT_DEFAULT_MAX_RECENT_TIMEOUT_COUNT 4866,203635
#define CBT_MIN_MAX_RECENT_TIMEOUT_COUNT 4867,203715
#define CBT_MAX_MAX_RECENT_TIMEOUT_COUNT 4868,203758
#define CBT_DEFAULT_MIN_CIRCUITS_TO_OBSERVE 4871,203858
#define CBT_MIN_MIN_CIRCUITS_TO_OBSERVE 4872,203906
#define CBT_MAX_MIN_CIRCUITS_TO_OBSERVE 4873,203948
#define CBT_DEFAULT_QUANTILE_CUTOFF 4876,204059
#define CBT_MIN_QUANTILE_CUTOFF 4877,204098
#define CBT_MAX_QUANTILE_CUTOFF 4878,204133
#define CBT_DEFAULT_TEST_FREQUENCY 4882,204278
#define CBT_MIN_TEST_FREQUENCY 4883,204316
#define CBT_MAX_TEST_FREQUENCY 4884,204349
#define CBT_DEFAULT_TIMEOUT_MIN_VALUE 4887,204461
#define CBT_MIN_TIMEOUT_MIN_VALUE 4888,204506
#define CBT_MAX_TIMEOUT_MIN_VALUE 4889,204544
#define CBT_DEFAULT_TIMEOUT_INITIAL_VALUE 4892,204642
#define CBT_MIN_TIMEOUT_INITIAL_VALUE 4893,204694
#define CBT_MAX_TIMEOUT_INITIAL_VALUE 4894,204758
  time_t network_last_live;4904,205143
  int nonlive_timeouts;4906,205243
  int8_t *timeouts_after_firsthop;timeouts_after_firsthop4909,205399
  int num_recent_circs;4911,205492
  int after_firsthop_idx;4913,205552
} network_liveness_t;4914,205578
typedef struct circuit_build_times_s circuit_build_times_t;4916,205601
typedef enum setopt_err_t 4921,205811
  SETOPT_OK 4922,205839
  SETOPT_ERR_MISC 4923,205856
  SETOPT_ERR_PARSE 4924,205880
  SETOPT_ERR_TRANSITION 4925,205905
  SETOPT_ERR_SETTING 4926,205935
} setopt_err_t;4927,205962
  ADDRMAPSRC_CONTROLLER,4934,206217
  ADDRMAPSRC_AUTOMAP,4937,206336
  ADDRMAPSRC_TORRC,4940,206491
  ADDRMAPSRC_TRACKEXIT,4943,206652
  ADDRMAPSRC_DNS,4946,206802
  ADDRMAPSRC_NONE4951,207002
} addressmap_entry_source_t;4952,207020
#define addressmap_entry_source_bitfield_t 4953,207049
typedef enum circuit_status_event_t 4959,207334
  CIRC_EVENT_LAUNCHED 4960,207372
  CIRC_EVENT_BUILT 4961,207399
  CIRC_EVENT_EXTENDED 4962,207426
  CIRC_EVENT_FAILED 4963,207453
  CIRC_EVENT_CLOSED 4964,207480
} circuit_status_event_t;4965,207507
typedef enum circuit_status_minor_event_t 4969,207670
  CIRC_MINOR_EVENT_PURPOSE_CHANGED,4970,207714
  CIRC_MINOR_EVENT_CANNIBALIZED,4971,207750
} circuit_status_minor_event_t;4972,207783
typedef enum stream_status_event_t 4976,207946
  STREAM_EVENT_SENT_CONNECT 4977,207983
  STREAM_EVENT_SENT_RESOLVE 4978,208016
  STREAM_EVENT_SUCCEEDED 4979,208049
  STREAM_EVENT_FAILED 4980,208082
  STREAM_EVENT_CLOSED 4981,208115
  STREAM_EVENT_NEW 4982,208148
  STREAM_EVENT_NEW_RESOLVE 4983,208181
  STREAM_EVENT_FAILED_RETRIABLE 4984,208214
  STREAM_EVENT_REMAP 4985,208251
} stream_status_event_t;4986,208283
typedef enum or_conn_status_event_t 4990,208448
  OR_CONN_EVENT_LAUNCHED 4991,208486
  OR_CONN_EVENT_CONNECTED 4992,208520
  OR_CONN_EVENT_FAILED 4993,208554
  OR_CONN_EVENT_CLOSED 4994,208588
  OR_CONN_EVENT_NEW 4995,208622
} or_conn_status_event_t;4996,208656
typedef enum buildtimeout_set_event_t 4999,208737
  BUILDTIMEOUT_SET_EVENT_COMPUTED 5000,208777
  BUILDTIMEOUT_SET_EVENT_RESET 5001,208817
  BUILDTIMEOUT_SET_EVENT_SUSPENDED 5002,208857
  BUILDTIMEOUT_SET_EVENT_DISCARD 5003,208897
  BUILDTIMEOUT_SET_EVENT_RESUME 5004,208935
} buildtimeout_set_event_t;5005,208971
#define CONN_LOG_PROTECT(5013,209283
  BOOTSTRAP_STATUS_UNDEF=5028,210190
  BOOTSTRAP_STATUS_STARTING=5029,210219
  BOOTSTRAP_STATUS_CONN_DIR=5030,210250
  BOOTSTRAP_STATUS_HANDSHAKE=5031,210281
  BOOTSTRAP_STATUS_HANDSHAKE_DIR=5032,210314
  BOOTSTRAP_STATUS_ONEHOP_CREATE=5033,210351
  BOOTSTRAP_STATUS_REQUESTING_STATUS=5034,210388
  BOOTSTRAP_STATUS_LOADING_STATUS=5035,210429
  BOOTSTRAP_STATUS_LOADING_KEYS=5036,210467
  BOOTSTRAP_STATUS_REQUESTING_DESCRIPTORS=5037,210503
  BOOTSTRAP_STATUS_LOADING_DESCRIPTORS=5038,210549
  BOOTSTRAP_STATUS_CONN_OR=5039,210592
  BOOTSTRAP_STATUS_HANDSHAKE_OR=5040,210623
  BOOTSTRAP_STATUS_CIRCUIT_CREATE=5041,210659
  BOOTSTRAP_STATUS_DONE=5042,210697
} bootstrap_status_t;5043,210725
  char first[first5049,210922
  char second[second5050,210948
} fp_pair_t;5051,210975
  NS_V2,5059,211193
  NS_V3_CONSENSUS,5061,211269
  NS_V3_VOTE,5063,211338
  NS_CONTROL_PORT,5065,211425
  NS_V3_CONSENSUS_MICRODESC5067,211518
} routerstatus_format_type_t;5068,211546
typedef struct measured_bw_line_t 5071,211600
  char node_id[node_id5072,211636
  char node_hex[node_hex5073,211664
  long int bw_kb;5074,211705
} measured_bw_line_t;5075,211723
typedef struct vote_timing_t 5082,211923
  int vote_interval;5085,212052
  int n_intervals_valid;5087,212127
  int vote_delay;5089,212204
  int dist_delay;5091,212279
} vote_timing_t;5092,212297
  GEOIP_CLIENT_CONNECT 5102,212649
  GEOIP_CLIENT_NETWORKSTATUS 5104,212748
} geoip_client_action_t;5105,212782
  GEOIP_SUCCESS 5110,213002
  GEOIP_REJECT_NOT_ENOUGH_SIGS 5113,213118
  GEOIP_REJECT_UNAVAILABLE 5115,213211
  GEOIP_REJECT_NOT_FOUND 5117,213288
  GEOIP_REJECT_NOT_MODIFIED 5119,213394
  GEOIP_REJECT_BUSY 5121,213455
} geoip_ns_response_t;5122,213480
#define GEOIP_NS_RESPONSE_NUM 5123,213503
  DIRREQ_DIRECT 5128,213636
  DIRREQ_TUNNELED 5129,213657
} dirreq_type_t;5130,213680
  DIRREQ_IS_FOR_NETWORK_STATUS 5138,214017
  DIRREQ_FLUSHING_DIR_CONN_FINISHED 5142,214209
  DIRREQ_END_CELL_SENT 5144,214319
  DIRREQ_CIRC_QUEUE_FLUSHED 5147,214476
  DIRREQ_CHANNEL_BUFFER_FLUSHED 5151,214665
} dirreq_state_t;5152,214701
#define WRITE_STATS_INTERVAL 5154,214720
typedef struct microdesc_cache_t microdesc_cache_t;5158,214836
typedef enum version_status_t 5164,215056
  VS_RECOMMENDED=5165,215088
  VS_OLD=5166,215155
  VS_NEW=5167,215227
  VS_NEW_IN_SERIES=5168,215299
  VS_UNRECOMMENDED=5171,215481
  VS_EMPTY=5172,215559
  VS_UNKNOWN,5173,215632
} version_status_t;5174,215671
  ADDR_POLICY_ACCEPTED=5181,215874
  ADDR_POLICY_REJECTED=5183,215934
  ADDR_POLICY_PROBABLY_ACCEPTED=5186,216052
  ADDR_POLICY_PROBABLY_REJECTED=5189,216178
} addr_policy_result_t;5190,216213
  SIGN_DIR,5197,216438
  SIGN_DIR, SIGN_RTR,5197,216438
  VERIFY_DIR,5198,216460
  VERIFY_DIR, VERIFY_RTR,5198,216460
  ENC_ONIONSKIN,5199,216486
  ENC_ONIONSKIN, DEC_ONIONSKIN,5199,216486
  TLS_HANDSHAKE_C,5200,216518
  TLS_HANDSHAKE_C, TLS_HANDSHAKE_S,5200,216518
  REND_CLIENT,5201,216554
  REND_CLIENT, REND_MID,5201,216554
  REND_CLIENT, REND_MID, REND_SERVER,5201,216554
} pk_op_t;5202,216592
typedef struct rend_authorized_client_t 5207,216748
  char *client_name;client_name5208,216790
  uint8_t descriptor_cookie[descriptor_cookie5209,216811
  crypto_pk_t *client_key;client_key5210,216862
} rend_authorized_client_t;5211,216889
typedef struct rend_encoded_v2_service_descriptor_t 5214,216969
  char desc_id[desc_id5215,217023
  char *desc_str;desc_str5216,217074
} rend_encoded_v2_service_descriptor_t;5217,217119
#define MAX_INTRO_POINT_REACHABILITY_FAILURES 5222,217374
#define INTRO_POINT_MIN_LIFETIME_INTRODUCTIONS 5227,217581
#define INTRO_POINT_MAX_LIFETIME_INTRODUCTIONS 5229,217700
#define INTRO_POINT_LIFETIME_MIN_SECONDS 5238,218044
#define INTRO_POINT_LIFETIME_MAX_SECONDS 5243,218244
#define MAX_INTRO_POINT_CIRCUIT_RETRIES 5248,218516
typedef struct rend_intro_point_t 5253,218727
  extend_info_t *extend_info;extend_info5254,218763
  crypto_pk_t *intro_key;intro_key5256,218910
  unsigned int timed_out 5264,219369
  unsigned int unreachable_count 5269,219615
  unsigned int listed_in_last_desc 5273,219779
  replaycache_t *accepted_intro_rsa_parts;accepted_intro_rsa_parts5278,220010
  int accepted_introduce2_count;5283,220149
  int max_introductions;5289,220402
  time_t time_published;5294,220577
  time_t time_to_expire;5299,220768
  unsigned int circuit_retries;5306,221115
  unsigned int circuit_established:circuit_established5310,221258
} rend_intro_point_t;5311,221296
#define REND_PROTOCOL_VERSION_BITMASK_WIDTH 5313,221319
typedef struct rend_service_descriptor_t 5317,221478
  crypto_pk_t *pk;pk5318,221521
  int version;5319,221575
  time_t timestamp;5320,221640
  unsigned protocols : REND_PROTOCOL_VERSION_BITMASK_WIDTH;5323,221832
  smartlist_t *intro_nodes;intro_nodes5326,222002
  int all_uploads_performed;5328,222103
  smartlist_t *successful_uploads;successful_uploads5333,222410
} rend_service_descriptor_t;5334,222445
typedef struct dir_server_t 5340,222639
  char *description;description5341,222669
  char *nickname;nickname5342,222690
  char *address;address5343,222708
  tor_addr_t ipv6_addr;5346,222896
  uint32_t addr;5347,222970
  uint16_t dir_port;5348,223009
  uint16_t or_port;5349,223054
  uint16_t ipv6_orport;5350,223123
  double weight;5351,223191
  char digest[digest5352,223262
  char v3_identity_digest[v3_identity_digest5353,223321
  unsigned int is_running:is_running5356,223470
  unsigned int is_authority:is_authority5357,223549
  unsigned int has_accepted_serverdesc:has_accepted_serverdesc5362,223784
  dirinfo_type_t type;5365,223880
  time_t addr_current_at;5367,223904
  routerstatus_t fake_status;5370,224046
} dir_server_t;5376,224411
#define RELAY_REQUIRED_MIN_BANDWIDTH 5378,224428
#define BRIDGE_REQUIRED_MIN_BANDWIDTH 5379,224475
#define ROUTER_MAX_DECLARED_BANDWIDTH 5381,224524
#define PDS_ALLOW_SELF 5387,224809
#define PDS_RETRY_IF_NO_SERVERS 5391,225024
#define PDS_IGNORE_FASCISTFIREWALL 5397,225390
#define PDS_NO_EXISTING_SERVERDESC_FETCH 5404,225676
#define PDS_NO_EXISTING_MICRODESC_FETCH 5410,225930
typedef enum bandwidth_weight_rule_t 5414,226110
  NO_WEIGHTING,5415,226149
  NO_WEIGHTING, WEIGHT_FOR_EXIT,5415,226149
  NO_WEIGHTING, WEIGHT_FOR_EXIT, WEIGHT_FOR_MID,5415,226149
  NO_WEIGHTING, WEIGHT_FOR_EXIT, WEIGHT_FOR_MID, WEIGHT_FOR_GUARD,5415,226149
  WEIGHT_FOR_DIR5416,226216
} bandwidth_weight_rule_t;5417,226233
  CRN_NEED_UPTIME 5422,226412
  CRN_NEED_CAPACITY 5423,226438
  CRN_NEED_GUARD 5424,226466
  CRN_WEIGHT_AS_EXIT 5426,226526
  CRN_NEED_DESC 5427,226555
  CRN_PREF_ADDR 5429,226650
  CRN_DIRECT_CONN 5432,226779
  CRN_RENDEZVOUS_V3 5435,226934
} router_crn_flags_t;5436,226962
typedef enum was_router_added_t 5439,227065
  ROUTER_ADDED_SUCCESSFULLY 5441,227138
  ROUTER_BAD_EI 5445,227365
  ROUTER_IS_ALREADY_KNOWN 5447,227455
  ROUTER_NOT_IN_CONSENSUS 5450,227577
  ROUTER_NOT_IN_CONSENSUS_OR_NETWORKSTATUS 5454,227775
  ROUTER_AUTHDIR_REJECTS 5456,227876
  ROUTER_WAS_NOT_WANTED 5459,228035
  ROUTER_WAS_TOO_OLD 5462,228160
  ROUTER_CERTS_EXPIRED 5464,228237
} was_router_added_t;5465,228265
#define MAX_STATUS_TAG_LEN 5469,228364
typedef struct tor_version_t 5475,228597
  int major;5476,228628
  int minor;5477,228641
  int micro;5478,228654
  enum { VER_PRE=5481,228762
  enum { VER_PRE=0, VER_RC=5481,228762
  enum { VER_PRE=0, VER_RC=1, VER_RELEASE=5481,228762
  int patchlevel;5482,228817
  char status_tag[status_tag5483,228835
  int svn_revision;5484,228874
  int git_tag_len;5486,228895
  char git_tag[git_tag5487,228914
} tor_version_t;5488,228942
typedef unsigned char byte;5494,229082
#define MT_SUCCESS 5497,229165
#define MT_ERROR 5498,229186
    MT_CODE_VERIFIED,5502,229266
    MT_CODE_REFUND,5503,229288
    MT_CODE_ACCEPT,5504,229308
    MT_CODE_REVOKE,5505,229328
    MT_CODE_REQCLOSE,5506,229348
    MT_CODE_ESTABLISH,5507,229370
    MT_CODE_SUCCESS,5508,229393
    MT_CODE_FAILED,5509,229414
} mt_code_t;5510,229434
#define MT_SZ_HASH 5514,229529
#define MT_SZ_PK 5515,229551
#define MT_SZ_SK 5516,229572
#define MT_SZ_SIG 5517,229593
#define MT_SZ_COM 5518,229615
#define MT_SZ_BL 5520,229638
#define MT_SZ_UBLR 5521,229659
#define MT_SZ_UBLD 5522,229682
#define MT_SZ_PP 5524,229706
#define MT_SZ_ZKP 5525,229727
#define MT_SZ_ADDR 5527,229750
#define MT_SZ_ID 5528,229772
#define MT_PAYLOAD_SIZE 5535,230020
    MT_PARTY_CLI,5538,230064
    MT_PARTY_REL,5539,230082
    MT_PARTY_INT,5540,230100
} mt_party_t;5541,230118
    byte id[id5544,230150
    mt_party_t party;5545,230173
} mt_desc_t;5546,230195
typedef int (*mt_set_prem)mt_set_prem5548,230209
typedef int (*mt_send_cells)mt_send_cells5550,230333
typedef int (*mt_close_conn)mt_close_conn5551,230388
    MT_CSTATE_SOMETHING,5556,230526
} mt_cstate_t;5557,230551
    MT_RSTATE_SOMETHING,5560,230582
} mt_rstate_t;5561,230607
    MT_ISTATE_SOMETHING,5564,230638
} mt_istate_t;5565,230663
    MT_LSTATE_EMPTY,5569,230753
    MT_LSTATE_INIT,5570,230831
    MT_LSTATE_OPEN,5571,230908
    MT_LSTATE_INT_REQCLOSED,5572,230988
    MT_LSTATE_END_CLOSED,5573,231074
    MT_LSTATE_INT_CLOSED,5574,231142
    MT_LSTATE_RESOLVED,5575,231214
} mt_lstate_t;5576,231286
    MT_LTYPE_CHN_END_REVOKE,5605,232200
    MT_LTYPE_CHN_INT_STATE,5607,232283
    MT_LTYPE_CHN_END_SECRET,5608,232352
    MT_LTYPE_MIC_END_WALLET,5609,232419
    MT_LTYPE_NAN_INT_STATE,5610,232472
    MT_LTYPE_NAN_END_STATE,5611,232536
    MT_LTYPE_NAN_END_SECRET,5612,232604
    MT_LTYPE_CHN_END_CHNTOK,5614,232671
    MT_LTYPE_CHN_INT_CHNTOK,5615,232744
    MT_LTYPE_NAN_ANY_CHNTOK,5616,232821
    MT_LTYPE_CHN_END_REFUND,5617,232884
    MT_LTYPE_CHN_END_DATA,5619,232956
    MT_LTYPE_CHN_INT_DATA,5620,233031
} mt_ltype_t;5622,233111
    MT_NTYPE_CHN_END_ESTAB1,5630,233267
    MT_NTYPE_CHN_INT_ESTAB2,5631,233320
    MT_NTYPE_CHN_END_ESTAB3,5632,233369
    MT_NTYPE_CHN_INT_ESTAB4,5633,233422
    MT_NTYPE_MIC_CLI_PAY1,5636,233514
    MT_NTYPE_MIC_REL_PAY2,5637,233560
    MT_NTYPE_MIC_CLI_PAY3,5638,233607
    MT_NTYPE_MIC_INT_PAY4,5639,233660
    MT_NTYPE_MIC_CLI_PAY5,5640,233707
    MT_NTYPE_MIC_REV_PAY6,5641,233753
    MT_NTYPE_MIC_INT_PAY7,5642,233806
    MT_NTYPE_MIC_INT_PAY8,5643,233853
    MT_NTYPE_NAN_CLI_SETUP1,5646,233943
    MT_NTYPE_NAN_INT_SETUP2,5647,233996
    MT_NTYPE_NAN_CLI_SETUP3,5648,234043
    MT_NTYPE_NAN_INT_SETUP4,5649,234096
    MT_NTYPE_NAN_CLI_SETUP5,5650,234143
    MT_NTYPE_NAN_INT_SETUP6,5651,234196
    MT_NTYPE_NAN_CLI_DIRECT1,5654,234294
    MT_NTYPE_NAN_INT_DIRECT2,5655,234347
    MT_NTYPE_NAN_CLI_ESTAB1,5658,234442
    MT_NTYPE_NAN_REL_ESTAB2,5659,234488
    MT_NTYPE_NAN_INT_ESTAB3,5660,234541
    MT_NTYPE_NAN_REL_ESTAB4,5661,234587
    MT_NTYPE_NAN_INT_ESTAB5,5662,234640
    MT_NTYPE_NAN_CLI_PAY1,5665,234728
    MT_NTYPE_NAN_END_CLOSE1,5668,234829
    MT_NTYPE_NAN_INT_CLOSE2,5669,234882
    MT_NTYPE_NAN_END_CLOSE3,5670,234931
    MT_NTYPE_NAN_INT_CLOSE4,5671,234984
    MT_NTYPE_NAN_END_CLOSE5,5672,235033
    MT_NTYPE_NAN_INT_CLOSE6,5673,235086
    MT_NTYPE_NAN_END_CLOSE7,5674,235135
    MT_NTYPE_NAN_INT_CLOSE8,5675,235188
    MT_NTYPE_MAC_AUT_MINT,5678,235278
    MT_NTYPE_MAC_ANY_TRANS,5679,235354
    MT_NTYPE_CHN_END_ESCROW,5680,235416
    MT_NTYPE_CHN_INT_ESCROW,5681,235481
    MT_NTYPE_CHN_INT_REQCLOSE,5682,235550
    MT_NTYPE_CHN_END_CLOSE,5683,235630
    MT_NTYPE_CHN_INT_CLOSE,5684,235705
    MT_NTYPE_CHN_END_CASHOUT,5685,235784
    MT_NTYPE_CHN_INT_CASHOUT,5686,235848
    MT_NTYPE_MAC_LED_DATA,5689,235951
    MT_NTYPE_CHN_LED_DATA,5690,236034
    MT_NTYPE_MAC_LED_QUERY,5691,236112
    MT_NTYPE_CHN_LED_QUERY,5692,236184
} mt_ntype_t;5693,236251
    byte rev[rev5698,236364
    byte sig[sig5699,236388
} chn_end_revoke_t;5700,236413
    int spam;5705,236520
} chn_int_state_t;5706,236534
    int num_payments;5709,236571
    byte last_hash[last_hash5710,236593
} nan_end_state_t;5711,236625
    int spam;5716,236735
} nan_int_state_t;5717,236749
    int balance;5720,236786
    byte wpk[wpk5721,236803
    byte wsk[wsk5722,236827
    byte rand[rand5723,236851
    chn_end_revoke_t revoke;5724,236878
} mic_end_wallet_t;5725,236907
    int balance;5728,236945
    byte commitment[commitment5729,236962
    byte esc_pk[esc_pk5730,236994
    byte wpk[wpk5731,237021
    byte wsk[wsk5732,237045
    byte rand[rand5733,237069
} chn_end_secret_t;5734,237096
    byte wpk[wpk5737,237134
    byte wsk[wsk5738,237158
    byte hash_head[hash_head5739,237182
} nan_end_secret_t;5740,237214
    int balance;5743,237252
    byte esc_pk[esc_pk5744,237269
    byte commitment[commitment5745,237296
} chn_end_chntok_t;5746,237328
    int balance;5749,237366
    byte esk_pk[esk_pk5750,237383
} chn_int_chntok_t;5751,237410
    int val_from;5754,237448
    int val_to;5755,237466
    int num_payments;5756,237482
    byte hash_tail[hash_tail5757,237504
} nan_any_chntok_t;5758,237536
    mt_code_t refund_code;5761,237574
    byte wpk[wpk5762,237601
    int balance;5763,237625
    byte conditional[conditional5766,237686
    nan_any_chntok_t channel_token;5769,237759
    byte sig[sig5772,237848
    byte unblinder[unblinder5773,237873
} chn_end_refund_t;5774,237905
    byte pk[pk5777,237943
    byte sk[sk5778,237966
    int balance;5779,237989
} mac_end_data_t;5780,238006
    mt_lstate_t state;5783,238042
    byte pk[pk5784,238065
    byte sk[sk5785,238088
    int balance;5786,238111
    mic_end_wallet_t wallet;5788,238129
    chn_end_secret_t chn_secret;5789,238158
    chn_end_chntok_t chn_token;5790,238191
    nan_any_chntok_t nan_token;5792,238224
    nan_end_state_t nan_state;5793,238256
    nan_end_secret_t nan_secret;5794,238287
    chn_end_refund_t refund;5795,238320
} chn_end_data_t;5796,238349
    mt_istate_t state;5799,238385
    byte pk[pk5800,238408
    byte sk[sk5801,238431
    int balance;5802,238454
    chn_int_state_t chn_state;5804,238472
    nan_int_state_t nan_state;5805,238503
    chn_int_chntok_t chn_token;5806,238534
} chn_int_data_t;5807,238566
    byte nonce[nonce5812,238679
    int value;5813,238707
} mac_aut_mint_t;5814,238722
    byte nonce[nonce5817,238758
    int val_from;5818,238786
    int val_to;5819,238804
    byte from[from5820,238820
    byte to[to5821,238847
} mac_any_trans_t;5822,238872
    int val_from;5825,238909
    int val_to;5826,238927
    byte from[from5827,238943
    byte chn[chn5828,238970
    chn_end_chntok_t chn_token;5829,238996
} chn_end_escrow_t;5830,239028
    int val_from;5833,239066
    int val_to;5834,239084
    byte from[from5835,239100
    byte chn[chn5836,239127
    chn_int_chntok_t chn_token;5837,239153
} chn_int_escrow_t;5838,239185
    byte chn[chn5841,239223
} chn_int_reqclose_t;5842,239249
    byte chn[chn5845,239289
    chn_end_refund_t refund_token;5846,239315
    int last_pay_num;5849,239388
    byte last_hash[last_hash5850,239410
} chn_end_close_t;5851,239442
    mt_code_t close_code;5854,239479
    byte chn[chn5855,239505
    chn_end_revoke_t revoke;5856,239531
    int last_pay_num;5859,239598
    byte last_hash[last_hash5860,239620
} chn_int_close_t;5861,239652
    int val_from;5864,239689
    int val_to;5865,239707
    byte chn[chn5866,239723
} chn_end_cashout_t;5867,239749
    int val_from;5870,239788
    int val_to;5871,239806
    byte chn[chn5872,239822
} chn_int_cashout_t;5873,239848
    int balance;5876,239887
} mac_led_data_t;5877,239904
    mt_lstate_t state;5880,239940
    byte end_addr[end_addr5882,239964
    byte int_addr[int_addr5883,239995
    int end_balance;5885,240027
    int int_balance;5886,240048
    chn_end_chntok_t end_chn_token;5888,240070
    chn_int_chntok_t int_chn_token;5889,240106
    chn_end_close_t end_close_token;5891,240143
    chn_int_close_t int_close_token;5892,240180
    int close_epoch;5894,240218
} chn_led_data_t;5895,240239
    byte addr[addr5898,240275
} mac_led_query_t;5899,240302
    byte addr[addr5902,240339
} chn_led_query_t;5903,240366
    byte zkp[zkp5906,240403
} chn_end_estab1_t;5907,240428
    mt_code_t verified;5910,240466
} chn_int_estab2_t;5911,240490
    byte wcom[wcom5914,240528
} chn_end_estab3_t;5915,240554
    mt_code_t success;5918,240592
    byte sig[sig5919,240615
} chn_int_estab4_t;5920,240640
    int value;5923,240678
} mic_cli_pay1_t;5924,240693
    byte wcom[wcom5927,240729
    byte zkp[zkp5928,240755
} mic_rel_pay2_t;5929,240780
    byte cli_valcom[cli_valcom5932,240816
    byte rel_valcom[rel_valcom5933,240848
    byte cli_wcom[cli_wcom5934,240880
    byte rel_wcom[rel_wcom5935,240910
    byte cli_zkp[cli_zkp5936,240940
    byte rel_zkp[rel_zkp5937,240969
} mic_cli_pay3_t;5938,240998
    chn_end_refund_t cli_refund;5941,241034
    chn_end_refund_t rel_refund;5942,241067
} mic_int_pay4_t;5943,241100
    chn_end_revoke_t cli_revoke;5946,241136
    chn_end_refund_t rel_refund;5947,241169
} mic_cli_pay5_t;5948,241202
    chn_end_revoke_t cli_revoke;5951,241238
    chn_end_revoke_t rel_revoke;5952,241271
} mic_rev_pay6_t;5953,241304
    mt_code_t success;5956,241340
    byte wsig[wsig5957,241363
} mic_int_pay7_t;5958,241389
    mt_code_t success;5961,241425
    byte wsig[wsig5962,241448
} mic_int_pay8_t;5963,241474
    byte wpk[wpk5966,241510
    byte nwpk[nwpk5967,241534
    byte wcom[wcom5968,241559
    byte zkp[zkp5969,241585
    nan_any_chntok_t chntok;5970,241610
} nan_cli_setup1_t;5971,241639
    mt_code_t verified;5974,241677
} nan_int_setup2_t;5975,241701
    byte nwcom[nwcom5978,241739
} nan_cli_setup3_t;5979,241766
    byte sig[sig5982,241804
} nan_int_setup4_t;5983,241829
    chn_end_revoke_t revoke;5986,241867
} nan_cli_setup5_t;5987,241896
    mt_code_t success;5990,241934
} nan_int_setup6_t;5991,241957
    nan_any_chntok_t chntok;5994,241995
} nan_cli_direct1_t;5995,242024
    mt_code_t success;5998,242063
} nan_int_direct2_t;5999,242086
    nan_any_chntok_t chntok;6002,242125
} nan_cli_estab1_t;6003,242154
    byte rel_wpk[rel_wpk6006,242192
    byte rel_nwpk[rel_nwpk6007,242220
    byte nwcom[nwcom6008,242249
    byte zkp[zkp6009,242276
    nan_any_chntok_t chntok;6010,242301
} nan_rel_estab2_t;6011,242330
    mt_code_t verified;6014,242368
} nan_int_estab3_t;6015,242392
    byte nwcom[nwcom6018,242430
} nan_rel_estab4_t;6019,242457
    mt_code_t success;6022,242495
    byte sig[sig6023,242518
} nan_int_estab5_t;6024,242543
    byte preimage[preimage6027,242581
} nan_cli_pay1_t;6028,242612
    byte wpk[wpk6031,242648
    byte wcom[wcom6032,242672
    byte zkp[zkp6033,242698
    nan_any_chntok_t chntok;6034,242723
    int total_value;6035,242752
    int num_payments;6036,242773
    byte preimage[preimage6037,242795
} nan_end_close1_t;6038,242826
    mt_code_t verified;6041,242864
} nan_int_close2_t;6042,242888
    byte refund_com[refund_com6045,242926
} nan_end_close3_t;6046,242958
    byte sig[sig6049,242996
} nan_int_close4_t;6050,243021
    byte nwpk[nwpk6053,243059
    chn_end_revoke_t revoke;6054,243084
} nan_end_close5_t;6055,243113
    mt_code_t verified;6058,243151
} nan_int_close6_t;6059,243175
    byte wcom[wcom6062,243213
} nan_end_close7_t;6063,243239
    mt_code_t success;6066,243277
    byte sig[sig6067,243300
} nan_int_close8_t;6068,243325

parsecommon.h,5602
#define TOR_PARSECOMMON_H10,197
  K_ACCEPT 22,595
  K_ACCEPT6,23,611
  K_DIRECTORY_SIGNATURE,24,624
  K_RECOMMENDED_SOFTWARE,25,649
  K_REJECT,26,675
  K_REJECT6,27,687
  K_ROUTER,28,700
  K_SIGNED_DIRECTORY,29,712
  K_SIGNING_KEY,30,734
  K_ONION_KEY,31,751
  K_ONION_KEY_NTOR,32,766
  K_ROUTER_SIGNATURE,33,786
  K_PUBLISHED,34,808
  K_RUNNING_ROUTERS,35,823
  K_ROUTER_STATUS,36,844
  K_PLATFORM,37,863
  K_PROTO,38,877
  K_OPT,39,888
  K_BANDWIDTH,40,897
  K_CONTACT,41,912
  K_NETWORK_STATUS,42,925
  K_UPTIME,43,945
  K_DIR_SIGNING_KEY,44,957
  K_FAMILY,45,978
  K_FINGERPRINT,46,990
  K_HIBERNATING,47,1007
  K_READ_HISTORY,48,1024
  K_WRITE_HISTORY,49,1042
  K_NETWORK_STATUS_VERSION,50,1061
  K_DIR_SOURCE,51,1089
  K_DIR_OPTIONS,52,1105
  K_CLIENT_VERSIONS,53,1122
  K_SERVER_VERSIONS,54,1143
  K_RECOMMENDED_CLIENT_PROTOCOLS,55,1164
  K_RECOMMENDED_RELAY_PROTOCOLS,56,1198
  K_REQUIRED_CLIENT_PROTOCOLS,57,1231
  K_REQUIRED_RELAY_PROTOCOLS,58,1262
  K_OR_ADDRESS,59,1292
  K_ID,60,1308
  K_P,61,1316
  K_P6,62,1323
  K_R,63,1331
  K_A,64,1338
  K_S,65,1345
  K_V,66,1352
  K_W,67,1359
  K_M,68,1366
  K_EXTRA_INFO,69,1373
  K_EXTRA_INFO_DIGEST,70,1389
  K_CACHES_EXTRA_INFO,71,1412
  K_HIDDEN_SERVICE_DIR,72,1435
  K_ALLOW_SINGLE_HOP_EXITS,73,1459
  K_IPV6_POLICY,74,1487
  K_ROUTER_SIG_ED25519,75,1504
  K_IDENTITY_ED25519,76,1528
  K_MASTER_KEY_ED25519,77,1550
  K_ONION_KEY_CROSSCERT,78,1574
  K_NTOR_ONION_KEY_CROSSCERT,79,1599
  K_INTERMEDIARY,80,1629
  K_DIRREQ_END,82,1648
  K_DIRREQ_V2_IPS,83,1664
  K_DIRREQ_V3_IPS,84,1683
  K_DIRREQ_V2_REQS,85,1702
  K_DIRREQ_V3_REQS,86,1722
  K_DIRREQ_V2_SHARE,87,1742
  K_DIRREQ_V3_SHARE,88,1763
  K_DIRREQ_V2_RESP,89,1784
  K_DIRREQ_V3_RESP,90,1804
  K_DIRREQ_V2_DIR,91,1824
  K_DIRREQ_V3_DIR,92,1843
  K_DIRREQ_V2_TUN,93,1862
  K_DIRREQ_V3_TUN,94,1881
  K_ENTRY_END,95,1900
  K_ENTRY_IPS,96,1915
  K_CELL_END,97,1930
  K_CELL_PROCESSED,98,1944
  K_CELL_QUEUED,99,1964
  K_CELL_TIME,100,1981
  K_CELL_CIRCS,101,1996
  K_EXIT_END,102,2012
  K_EXIT_WRITTEN,103,2026
  K_EXIT_READ,104,2044
  K_EXIT_OPENED,105,2059
  K_DIR_KEY_CERTIFICATE_VERSION,107,2077
  K_DIR_IDENTITY_KEY,108,2110
  K_DIR_KEY_PUBLISHED,109,2132
  K_DIR_KEY_EXPIRES,110,2155
  K_DIR_KEY_CERTIFICATION,111,2176
  K_DIR_KEY_CROSSCERT,112,2203
  K_DIR_ADDRESS,113,2226
  K_DIR_TUNNELLED,114,2243
  K_VOTE_STATUS,116,2263
  K_VALID_AFTER,117,2280
  K_FRESH_UNTIL,118,2297
  K_VALID_UNTIL,119,2314
  K_VOTING_DELAY,120,2331
  K_KNOWN_FLAGS,122,2350
  K_PARAMS,123,2367
  K_BW_WEIGHTS,124,2379
  K_VOTE_DIGEST,125,2395
  K_CONSENSUS_DIGEST,126,2412
  K_ADDITIONAL_DIGEST,127,2434
  K_ADDITIONAL_SIGNATURE,128,2457
  K_CONSENSUS_METHODS,129,2483
  K_CONSENSUS_METHOD,130,2506
  K_LEGACY_DIR_KEY,131,2528
  K_DIRECTORY_FOOTER,132,2548
  K_SIGNING_CERT_ED,133,2570
  K_SR_FLAG,134,2591
  K_COMMIT,135,2604
  K_PREVIOUS_SRV,136,2616
  K_CURRENT_SRV,137,2634
  K_PACKAGE,138,2651
  A_PURPOSE,140,2665
  A_LAST_LISTED,141,2678
  A_UNKNOWN_,142,2695
  R_RENDEZVOUS_SERVICE_DESCRIPTOR,144,2710
  R_VERSION,145,2745
  R_PERMANENT_KEY,146,2758
  R_SECRET_ID_PART,147,2777
  R_PUBLICATION_TIME,148,2797
  R_PROTOCOL_VERSIONS,149,2819
  R_INTRODUCTION_POINTS,150,2842
  R_SIGNATURE,151,2867
  R_HS_DESCRIPTOR,153,2883
  R3_DESC_LIFETIME,155,3020
  R3_DESC_SIGNING_CERT,156,3040
  R3_REVISION_COUNTER,157,3064
  R3_SUPERENCRYPTED,158,3087
  R3_SIGNATURE,159,3108
  R3_CREATE2_FORMATS,160,3124
  R3_INTRO_AUTH_REQUIRED,161,3146
  R3_SINGLE_ONION_SERVICE,162,3172
  R3_INTRODUCTION_POINT,163,3199
  R3_INTRO_ONION_KEY,164,3224
  R3_INTRO_AUTH_KEY,165,3246
  R3_INTRO_ENC_KEY,166,3267
  R3_INTRO_ENC_KEY_CERT,167,3287
  R3_INTRO_LEGACY_KEY,168,3312
  R3_INTRO_LEGACY_KEY_CERT,169,3335
  R3_DESC_AUTH_TYPE,170,3363
  R3_DESC_AUTH_KEY,171,3384
  R3_DESC_AUTH_CLIENT,172,3404
  R3_ENCRYPTED,173,3427
  R_IPO_IDENTIFIER,175,3444
  R_IPO_IP_ADDRESS,176,3464
  R_IPO_ONION_PORT,177,3484
  R_IPO_ONION_KEY,178,3504
  R_IPO_SERVICE_KEY,179,3523
  C_CLIENT_NAME,181,3545
  C_DESCRIPTOR_COOKIE,182,3562
  C_CLIENT_KEY,183,3585
  ERR_,185,3602
  EOF_,186,3610
  NIL_187,3618
} directory_keyword;188,3625
typedef struct directory_token_t 200,4034
  directory_keyword tp;201,4069
  int n_args:n_args202,4127
  char **args;args203,4193
  char *object_type;object_type205,4271
  size_t object_size;206,4339
  char *object_body;object_body207,4399
  crypto_pk_t *key;key209,4475
  char *error;error211,4550
} directory_token_t;212,4611
  NO_OBJ,218,4774
  NEED_OBJ,219,4816
  NEED_SKEY_1024,220,4861
  NEED_KEY_1024,221,4941
  NEED_KEY,222,5020
  OBJ_OK,223,5091
} obj_syntax;224,5136
#define AT_START 226,5151
#define AT_END 227,5170
#define TS_ANNOTATIONS_OK 229,5188
#define TS_NOCHECK 230,5216
#define TS_NO_NEW_ANNOTATIONS 231,5237
#define END_OF_TABLE 243,5542
#define T(245,5681
#define T0N(247,5801
#define T1(249,5901
#define T1_START(251,6025
#define T1_END(253,6160
#define T1N(255,6268
#define T01(257,6373
#define A01(259,6478
#define ARGS 262,6583
#define NO_ARGS 264,6659
#define CONCAT_ARGS 266,6742
#define GE(268,6827
#define EQ(270,6917
typedef struct token_rule_t 274,7013
  const char *t;t276,7114
  directory_keyword v;278,7182
  int min_args;280,7256
  int max_args;282,7323
  int concat_args;285,7427
  obj_syntax os;287,7500
  int min_cnt;289,7585
  int max_cnt;291,7669
  int pos;294,7779
  int is_annotation;296,7837
} token_rule_t;297,7858
#define find_by_keyword(315,8509

periodic.h,422
#define TOR_PERIODIC_H5,121
#define PERIODIC_EVENT_NO_UPDATE 7,145
typedef int (*periodic_event_helper_t)periodic_event_helper_t14,504
typedef struct periodic_event_item_t 20,700
  periodic_event_helper_t fn;21,739
  time_t last_action_time;22,807
  struct event *ev;ev23,883
  const char *name;name24,959
} periodic_event_item_t;25,1021
#define PERIODIC_EVENT(28,1106
#define END_OF_PERIODIC_EVENTS 29,1165

policies.h,505
#define TOR_POLICIES_H13,334
#define POLICY_BUF_LEN 19,506
#define EXIT_POLICY_IPV6_ENABLED 21,533
#define EXIT_POLICY_REJECT_PRIVATE 22,587
#define EXIT_POLICY_ADD_DEFAULT 23,641
#define EXIT_POLICY_REJECT_LOCAL_INTERFACES 24,695
#define EXIT_POLICY_OPTION_MAX 25,749
#define EXIT_POLICY_OPTION_ALL 27,873
typedef enum firewall_connection_t 29,953
  FIREWALL_OR_CONNECTION 30,990
  FIREWALL_DIR_CONNECTION 31,1025
} firewall_connection_t;32,1059
typedef int exit_policy_parser_cfg_t;34,1085

proto_cell.h,31
#define TOR_PROTO_CELL_H8,268

proto_control0.h,35
#define TOR_PROTO_CONTROL0_H8,272

proto_ext_or.h,33
#define TOR_PROTO_EXT_OR_H8,270

proto_http.h,31
#define TOR_PROTO_HTTP_H8,268

proto_socks.h,32
#define TOR_PROTO_SOCKS_H8,269

protover.h,723
#define TOR_PROTOVER_H10,206
#define FIRST_TOR_VERSION_TO_ADVERTISE_PROTOCOLS 18,434
#define PROTOVER_HSDIR_V3 21,573
#define PROTOVER_HS_INTRO_V3 23,676
#define PROTOVER_HS_RENDEZVOUS_POINT_V3 25,787
typedef enum protocol_type_t 28,870
  PRT_LINK,29,901
  PRT_LINKAUTH,30,913
  PRT_RELAY,31,929
  PRT_DIRCACHE,32,942
  PRT_HSDIR,33,958
  PRT_HSINTRO,34,971
  PRT_HSREND,35,986
  PRT_DESC,36,1000
  PRT_MICRODESC,37,1012
  PRT_CONS,38,1029
} protocol_type_t;39,1041
typedef struct proto_range_t 56,1739
  uint32_t low;57,1770
  uint32_t high;58,1786
} proto_range_t;59,1803
typedef struct proto_entry_t 62,1888
  char *name;name68,2092
  smartlist_t *ranges;ranges70,2142
} proto_entry_t;71,2165

reasons.h,29
#define TOR_REASONS_H13,331

relay.h,290
#define TOR_RELAY_H13,325
#define CONTROL_CELL_ID 29,1083
#define relay_send_command_from_edge(30,1109
#define update_circuit_on_cmux(72,3198
typedef struct address_ttl_s 92,4141
  tor_addr_t addr;93,4172
  char *hostname;hostname94,4191
  int ttl;95,4209
} address_ttl_t;96,4220

rendcache.h,816
#define TOR_RENDCACHE_H10,191
#define REND_CACHE_MAX_AGE 17,351
#define REND_CACHE_MAX_SKEW 20,503
#define REND_CACHE_FAILURE_MAX_AGE 22,619
#define MAX_INTRO_POINTS 26,755
typedef struct rend_cache_entry_t 29,823
  size_t len;30,859
  time_t last_served;31,903
  char *desc;desc33,1016
  rend_service_descriptor_t *parsed;parsed34,1057
} rend_cache_entry_t;35,1125
typedef struct rend_cache_failure_intro_t 38,1187
  time_t created_ts;41,1326
  rend_intro_point_failure_t failure_type;42,1347
} rend_cache_failure_intro_t;43,1390
typedef struct rend_cache_failure_t 46,1472
  digestmap_t *intro_failures;intro_failures48,1582
} rend_cache_failure_t;49,1613
  REND_CACHE_TYPE_CLIENT 52,1653
  REND_CACHE_TYPE_SERVICE 53,1684
} rend_cache_type_t;54,1715
rend_cache_max_entry_lifetime(58,1817

rendclient.h,32
#define TOR_RENDCLIENT_H13,340

rendcommon.h,235
#define TOR_RENDCOMMON_H13,340
typedef enum rend_intro_point_failure_t 15,366
  INTRO_POINT_FAILURE_GENERIC 16,408
  INTRO_POINT_FAILURE_TIMEOUT 17,447
  INTRO_POINT_FAILURE_UNREACHABLE 18,486
} rend_intro_point_failure_t;19,525

rendmid.h,29
#define TOR_RENDMID_H13,331

rendservice.h,1853
#define TOR_RENDSERVICE_H13,343
typedef struct rend_intro_cell_s rend_intro_cell_t;18,411
struct rend_intro_cell_s 22,523
  uint8_t type;24,611
  uint8_t pk[pk26,653
  uint8_t *ciphertext;ciphertext28,721
  ssize_t ciphertext_len;29,744
  uint8_t *plaintext;plaintext31,806
  ssize_t plaintext_len;32,828
  uint8_t parsed;34,891
  uint8_t version;36,955
      uint8_t rp[rp41,1092
    } v0_v1;42,1114
      extend_info_t *extend_info;extend_info45,1200
    } v2;46,1234
      uint8_t auth_type;49,1284
      uint16_t auth_len;51,1341
      uint8_t *auth_data;auth_data53,1388
      extend_info_t *extend_info;extend_info55,1492
    } v3;56,1526
  } u;57,1536
  uint8_t rc[rc59,1569
  uint8_t dh[dh61,1628
typedef struct rend_service_t 67,1748
  char *directory;directory69,1820
  int dir_group_readable;71,1950
  smartlist_t *ports;ports73,2061
  rend_auth_type_t auth_type;74,2126
  smartlist_t *clients;clients76,2269
  crypto_pk_t *private_key;private_key80,2504
  char service_id[service_id81,2570
  char pk_digest[pk_digest83,2710
  smartlist_t *intro_nodes;intro_nodes84,2786
  smartlist_t *expiring_nodes;expiring_nodes89,3111
  time_t intro_period_started;90,3142
  int n_intro_circuits_launched;92,3273
  unsigned int n_intro_points_wanted;94,3410
  rend_service_descriptor_t *desc;desc96,3553
  time_t desc_is_dirty;97,3631
  time_t next_upload_time;100,3815
  replaycache_t *accepted_intro_dh_parts;accepted_intro_dh_parts107,4267
  int allow_unknown_ports;110,4398
  int max_streams_per_circuit;114,4558
  int max_streams_close_circuit;117,4678
} rend_service_t;118,4711
  RSAE_BADAUTH 192,8507
  RSAE_BADVIRTPORT 193,8567
  RSAE_ADDREXISTS 194,8627
  RSAE_BADPRIVKEY 195,8683
  RSAE_INTERNAL 196,8734
  RSAE_OKAY 197,8779
} rend_service_add_ephemeral_status_t;198,8829

rephist.h,326
#define TOR_REPHIST_H13,331
typedef enum padding_type_t 124,5118
    PADDING_TYPE_DROP,126,5177
    PADDING_TYPE_CELL,128,5231
    PADDING_TYPE_TOTAL,130,5314
    PADDING_TYPE_ENABLED_TOTAL,132,5400
    PADDING_TYPE_ENABLED_CELL134,5496
} padding_type_t;135,5526
#define REPHIST_CELL_PADDING_COUNTS_INTERVAL 138,5619

replaycache.h,248
#define TOR_REPLAYCACHE_H10,198
typedef struct replaycache_s replaycache_t;12,225
struct replaycache_s 16,298
  time_t scrub_interval;18,344
  time_t scrubbed;20,391
  time_t horizon;25,503
  digest256map_t *digests_seen;digests_seen29,609

router.h,64
#define TOR_ROUTER_H13,328
#define NODE_DESC_BUF_LEN 131,6011

routerkeys.h,564
#define TOR_ROUTERKEYS_H5,123
#define INIT_ED_KEY_CREATE 9,178
#define INIT_ED_KEY_REPLACE 10,234
#define INIT_ED_KEY_SPLIT 11,290
#define INIT_ED_KEY_MISSING_SECRET_OK 12,346
#define INIT_ED_KEY_NEEDCERT 13,402
#define INIT_ED_KEY_EXTRA_STRONG 14,458
#define INIT_ED_KEY_INCLUDE_SIGNING_KEY_IN_CERT 15,514
#define INIT_ED_KEY_OMIT_SECRET 16,570
#define INIT_ED_KEY_TRY_ENCRYPTED 17,626
#define INIT_ED_KEY_NO_REPAIR 18,682
#define INIT_ED_KEY_SUGGEST_KEYGEN 19,738
#define INIT_ED_KEY_OFFLINE_SECRET 20,795
#define INIT_ED_KEY_EXPLICIT_FNAME 21,852

routerlist.h,499
#define TOR_ROUTERLIST_H12,303
#define TRUSTED_DIRS_CERTS_SRC_SELF 25,636
#define TRUSTED_DIRS_CERTS_SRC_FROM_STORE 26,674
#define TRUSTED_DIRS_CERTS_SRC_DL_BY_ID_DIGEST 27,718
#define TRUSTED_DIRS_CERTS_SRC_DL_BY_ID_SK_DIGEST 28,767
#define TRUSTED_DIRS_CERTS_SRC_FROM_VOTE 29,819
#define router_digest_is_trusted_dir(85,4060
WRA_WAS_ADDED(125,5978
static inline int WRA_WAS_OUTDATED(135,6330
static inline int WRA_WAS_REJECTED(145,6717
static inline int WRA_NEVER_DOWNLOADABLE(151,6926

routerparse.h,286
#define TOR_ROUTERPARSE_H13,343
#define DIROBJ_MAX_SIG_LEN 25,1033
  char *filename;filename106,5530
  size_t len;107,5548
  uint8_t digest_sha256[digest_sha256108,5562
  time_t when;109,5602
} dumped_desc_t;110,5617
EXTERN(112,5635
#define ED_DESC_SIGNATURE_PREFIX 138,7066

routerset.h,371
#define TOR_ROUTERSET_H12,300
struct routerset_t 57,2527
  smartlist_t *list;list62,2814
  strmap_t *names;names64,2909
  digestmap_t *digests;digests66,2996
  smartlist_t *policies;policies69,3169
  char *description;description73,3292
  smartlist_t *country_names;country_names76,3364
  int n_countries;78,3474
  bitarray_t *countries;countries83,3726

scheduler.h,863
#define TOR_SCHEDULER_H10,189
  SCHEDULER_NONE 20,515
  SCHEDULER_VANILLA 21,542
  SCHEDULER_KIST 22,569
  SCHEDULER_KIST_LITE 23,596
} scheduler_types_t;24,623
typedef struct scheduler_s 43,1506
  scheduler_types_t type;46,1636
  void (*init)init53,2014
  void (*free_all)free_all58,2220
  void (*schedule)schedule63,2434
  void (*run)run71,2907
  void (*on_new_consensus)on_new_consensus83,3471
  void (*on_channel_free)on_channel_free90,3881
  void (*on_new_options)on_new_options96,4226
} scheduler_t;97,4258
#define KIST_SCHED_RUN_INTERVAL_DEFAULT 106,4603
#define KIST_SCHED_RUN_INTERVAL_MIN 108,4711
#define KIST_SCHED_RUN_INTERVAL_MAX 110,4796
#define SCHED_BUG(148,6337
typedef struct socket_table_ent_s 175,7217
  HT_ENTRY(176,7253
} socket_table_ent_t;187,7557
typedef HT_HEAD(outbuf_table_s, outbuf_table_ent_s)189,7580

shared_random.h,1166
#define TOR_SHARED_RANDOM_H5,126
#define SR_PROTO_VERSION 16,395
#define SR_DIGEST_ALG 18,455
#define SR_SRV_TOKEN 20,539
#define SR_SRV_TOKEN_LEN 22,648
#define SR_RANDOM_NUMBER_LEN 25,747
#define SR_COMMIT_LEN 28,892
#define SR_REVEAL_LEN 31,1091
#define SR_SRV_MSG_LEN 34,1282
#define SR_COMMIT_BASE64_LEN 39,1531
#define SR_REVEAL_BASE64_LEN 42,1736
#define SR_SRV_VALUE_BASE64_LEN 46,1963
#define ASSERT_COMMIT_VALID(49,2070
  SR_PHASE_COMMIT 54,2187
  SR_PHASE_REVEAL 56,2232
} sr_phase_t;57,2256
typedef struct sr_srv_t 60,2306
  uint64_t num_reveals;62,2393
  uint8_t value[value64,2482
} sr_srv_t;65,2514
typedef struct sr_commit_t 68,2583
  digest_algorithm_t alg;70,2644
  unsigned int valid:valid72,2732
  char rsa_identity[rsa_identity78,2906
  char rsa_identity_hex[rsa_identity_hex79,2939
  uint64_t reveal_ts;84,3071
  char hashed_reveal[hashed_reveal86,3139
  char encoded_commit[encoded_commit88,3242
  uint8_t random_number[random_number95,3520
  uint64_t commit_ts;97,3621
  char encoded_reveal[encoded_reveal99,3715
} sr_commit_t;100,3764
const char *sr_commit_get_rsa_fpr(sr_commit_get_rsa_fpr121,4498

shared_random_state.h,1299
#define TOR_SHARED_RANDOM_STATE_H5,132
  SR_STATE_ACTION_GET 11,275
  SR_STATE_ACTION_PUT 12,306
  SR_STATE_ACTION_DEL 13,337
  SR_STATE_ACTION_DEL_ALL 14,368
  SR_STATE_ACTION_SAVE 15,399
} sr_state_action_t;16,430
  SR_STATE_OBJ_COMMIT,21,605
  SR_STATE_OBJ_COMMITS,23,687
  SR_STATE_OBJ_CURSRV,25,758
  SR_STATE_OBJ_PREVSRV,27,829
  SR_STATE_OBJ_PHASE,29,879
  SR_STATE_OBJ_VALID_AFTER,31,942
} sr_state_object_t;32,970
typedef struct sr_state_t 36,1133
  char *fname;fname38,1205
  uint32_t version;40,1253
  time_t valid_after;42,1350
  time_t valid_until;44,1412
  sr_phase_t phase;46,1458
  uint64_t n_protocol_runs;49,1513
  unsigned int n_commit_rounds;51,1619
  unsigned int n_reveal_rounds;53,1725
  digestmap_t *commits;commits57,1882
  sr_srv_t *previous_srv;previous_srv60,1957
  sr_srv_t *current_srv;current_srv61,1983
  unsigned int is_srv_fresh:is_srv_fresh73,2618
} sr_state_t;74,2649
typedef struct sr_disk_state_t 77,2722
  uint32_t magic_;78,2755
  int Version;80,2807
  char *TorVersion;TorVersion82,2858
  time_t ValidAfter;84,2914
  time_t ValidUntil;86,2962
  config_line_t *Commit;Commit88,3024
  config_line_t *SharedRandValues;SharedRandValues90,3099
  config_line_t *ExtraLines;ExtraLines92,3191
} sr_disk_state_t;93,3220

statefile.h,30
#define TOR_STATEFILE_H8,267

status.h,27
#define TOR_STATUS_H5,119

torcert.h,821
#define TORCERT_H_INCLUDED5,125
#define SIGNED_KEY_TYPE_ED25519 9,182
#define CERT_TYPE_ID_SIGNING 11,224
#define CERT_TYPE_SIGNING_LINK 12,265
#define CERT_TYPE_SIGNING_AUTH 13,306
#define CERT_TYPE_SIGNING_HS_DESC 14,347
#define CERT_TYPE_AUTH_HS_IP_KEY 15,388
#define CERT_TYPE_ONION_ID 16,429
#define CERT_TYPE_CROSS_HS_IP_KEYS 17,470
#define CERT_FLAG_INCLUDE_SIGNING_KEY 19,512
typedef struct tor_cert_st 23,631
  ed25519_public_key_t signed_key;25,711
  ed25519_public_key_t signing_key;28,897
  time_t valid_until;30,1003
  uint8_t *encoded;encoded33,1082
  size_t encoded_len;35,1140
  uint8_t cert_type;38,1193
  unsigned signing_key_included 40,1287
  unsigned sig_bad 42,1384
  unsigned sig_ok 44,1472
  unsigned cert_expired 47,1585
  unsigned cert_valid 49,1688
} tor_cert_t;50,1715

transports.h,1130
#define TOR_TRANSPORTS_H12,297
typedef struct transport_t 15,381
  int socks_version;17,469
  char *name;name19,536
  tor_addr_t addr;22,637
  uint16_t port;24,679
  unsigned marked_for_removal 27,851
  char *extra_info_args;extra_info_args30,981
} transport_t;31,1006
#define pt_kickstart_client_proxy(46,1456
#define pt_kickstart_server_proxy(48,1533
enum pt_proto_state 70,2167
  PT_PROTO_INFANT,71,2189
  PT_PROTO_LAUNCHED,72,2228
  PT_PROTO_ACCEPTING_METHODS,73,2273
  PT_PROTO_CONFIGURED,74,2327
  PT_PROTO_COMPLETED,75,2380
  PT_PROTO_BROKEN,76,2448
  PT_PROTO_FAILED_LAUNCH 77,2499
  enum pt_proto_state conf_state;82,2634
  char **argv;argv83,2706
  int conf_protocol;84,2759
  char *proxy_uri;proxy_uri86,2827
  unsigned int proxy_supported 87,2899
  int is_server;89,2972
  process_handle_t *process_handle;process_handle92,3081
  int pid;94,3118
  unsigned int marked_for_removal 99,3339
  unsigned int was_around_before_config_read 105,3600
  smartlist_t *transports_to_launch;transports_to_launch108,3699
  smartlist_t *transports;transports112,3825
} managed_proxy_t;113,3852

mt_nanoalgs.h,0

mt_microalgs.h,0
